package st1920.automaton;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

import st1920.automaton.REGEXWrapper;
import st1920.automaton.REString;
import st1920.automaton.RegExpMatcher;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Task3_1 {

    public static boolean debug = false;
    
    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        st1920.automaton.REGEXWrapper rEGEXWrapper0 = new st1920.automaton.REGEXWrapper();
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString12.makeAlpha(rEString24);
        st1920.automaton.REString rEString26 = rEString7.makeAny(rEString25);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = st1920.automaton.REGEXWrapper.matches("", rEString7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString18.makeAlpha(rEString30);
        st1920.automaton.REString rEString32 = rEString14.makeAlpha(rEString30);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString36.makeExclude(rEString39);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString36.makeAlpha(rEString48);
        st1920.automaton.REString rEString52 = rEString14.makeRange(rEString36, (int) (byte) 1, (int) (byte) 100);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString56.makeExclude(rEString59);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString73.makeAnyChar(rEString79);
        st1920.automaton.REString rEString81 = rEString66.makeZeroOrOne(rEString79);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString83.makeAnyChar(rEString88);
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = rEString91.makeExclude(rEString93);
        st1920.automaton.REString rEString95 = rEString88.makeAnyChar(rEString94);
        st1920.automaton.REString rEString96 = rEString66.makeOneOrMore(rEString95);
        st1920.automaton.REString rEString97 = rEString14.makeAnyChar(rEString96);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean98 = st1920.automaton.REGEXWrapper.matches("hi!", rEString14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString12.makeAlpha(rEString24);
        st1920.automaton.REString rEString26 = rEString7.makeAny(rEString25);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString30.makeExclude(rEString33);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString47.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString40.makeZeroOrOne(rEString53);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString59.makeExclude(rEString62);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString76.makeAnyChar(rEString81);
        st1920.automaton.REString rEString83 = rEString73.makeExclude(rEString76);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = rEString73.makeAlpha(rEString85);
        st1920.automaton.REString rEString87 = rEString69.makeAlpha(rEString85);
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString92 = rEString89.makeExclude(rEString91);
        st1920.automaton.REString rEString93 = rEString55.makeOr(rEString69, rEString92);
        st1920.automaton.REString rEString94 = rEString26.makeAnyChar(rEString93);
        java.lang.String str95 = rEString26.string;
        boolean boolean96 = st1920.automaton.REGEXWrapper.matches("~.+", rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "a@" + "'", str95.equals("a@"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString47.makeAlpha(rEString59);
        st1920.automaton.REString rEString61 = rEString43.makeAlpha(rEString59);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString29.makeOr(rEString43, rEString66);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = st1920.automaton.REGEXWrapper.matches("#", rEString43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        st1920.automaton.REString rEString1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = st1920.automaton.REGEXWrapper.matches("~.+", rEString1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString14.makeClass(rEString33);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString54.makeAnyChar(rEString59);
        st1920.automaton.REString rEString61 = rEString51.makeExclude(rEString54);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString69 = rEString63.makeAnyChar(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString68.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString51.makeOneOrMore(rEString74);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        rEString78.string = "hi!";
        st1920.automaton.REString rEString84 = rEString33.makeAnd(rEString51, rEString78);
        boolean boolean85 = st1920.automaton.REGEXWrapper.matches("~", rEString78);
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString95 = rEString92.makeExclude(rEString94);
        st1920.automaton.REString rEString96 = rEString90.makeAnyChar(rEString95);
        st1920.automaton.REString rEString97 = rEString88.makeAnyChar(rEString96);
        boolean boolean98 = st1920.automaton.REGEXWrapper.matches("~.+", rEString88);
        st1920.automaton.REString rEString99 = rEString78.makeAny(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString18.makeAlpha(rEString30);
        st1920.automaton.REString rEString32 = rEString14.makeAlpha(rEString30);
        boolean boolean33 = st1920.automaton.REGEXWrapper.matches("~.+", rEString30);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString64.makeAnyChar(rEString70);
        st1920.automaton.REString rEString72 = rEString57.makeZeroOrOne(rEString70);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString85 = rEString79.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString76.makeExclude(rEString79);
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString76.makeAlpha(rEString88);
        st1920.automaton.REString rEString90 = rEString57.makeClass(rEString76);
        st1920.automaton.REString rEString93 = rEString42.makeRep(rEString57, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString94 = rEString38.makeZeroOrMore(rEString42);
        st1920.automaton.REString rEString96 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString97 = rEString42.makeGroup(rEString96);
        st1920.automaton.REString rEString98 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString99 = rEString30.makeAnd(rEString96, rEString98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString14.makeClass(rEString33);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString49.makeAnyChar(rEString57);
        java.lang.String str59 = rEString57.string;
        st1920.automaton.REString rEString60 = rEString14.makeNum(rEString57);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = st1920.automaton.REGEXWrapper.matches("~?", rEString14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "~." + "'", str59.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        boolean boolean12 = st1920.automaton.REGEXWrapper.matches("~.+", rEString2);
        java.lang.String str13 = rEString2.string;
        java.lang.Class<?> wildcardClass14 = rEString2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString14.makeOneOrMore(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString48.makeExclude(rEString51);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString65.makeAnyChar(rEString71);
        st1920.automaton.REString rEString73 = rEString58.makeZeroOrOne(rEString71);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString82.makeExclude(rEString84);
        st1920.automaton.REString rEString86 = rEString80.makeAnyChar(rEString85);
        st1920.automaton.REString rEString87 = rEString77.makeExclude(rEString80);
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = rEString77.makeAlpha(rEString89);
        st1920.automaton.REString rEString91 = rEString58.makeClass(rEString77);
        st1920.automaton.REString rEString92 = rEString44.makeExclude(rEString91);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = st1920.automaton.REGEXWrapper.matches("a@", rEString91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: expected ']' at position 2");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString4.makeOneOrMore(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString31.makeAnyChar(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString55.makeAnyChar(rEString60);
        st1920.automaton.REString rEString62 = rEString52.makeExclude(rEString55);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString52.makeAlpha(rEString64);
        st1920.automaton.REString rEString66 = rEString47.makeAny(rEString65);
        st1920.automaton.REString rEString67 = rEString31.makeClass(rEString65);
        st1920.automaton.REString rEString68 = rEString4.makeOneOrMore(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString81 = rEString75.makeAnyChar(rEString80);
        st1920.automaton.REString rEString82 = rEString72.makeExclude(rEString75);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString90 = rEString84.makeAnyChar(rEString89);
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString95 = rEString92.makeExclude(rEString94);
        st1920.automaton.REString rEString96 = rEString89.makeAnyChar(rEString95);
        st1920.automaton.REString rEString97 = rEString82.makeZeroOrOne(rEString95);
        st1920.automaton.REString rEString98 = rEString68.makeExcludeClass(rEString97);
        boolean boolean99 = st1920.automaton.REGEXWrapper.matches("~..", rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString29.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString22.makeZeroOrOne(rEString35);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString41.makeExclude(rEString44);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString58.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString51.makeZeroOrOne(rEString64);
        st1920.automaton.REString rEString67 = rEString35.makeExcludeClass(rEString66);
        st1920.automaton.REString rEString68 = rEString8.makeOneOrMore(rEString67);
        boolean boolean69 = st1920.automaton.REGEXWrapper.matches("hi!", rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString47.makeAlpha(rEString59);
        st1920.automaton.REString rEString61 = rEString43.makeAlpha(rEString59);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString65.makeExclude(rEString68);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString83 = rEString77.makeAnyChar(rEString82);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString82.makeAnyChar(rEString88);
        st1920.automaton.REString rEString90 = rEString75.makeZeroOrOne(rEString88);
        st1920.automaton.REString rEString91 = rEString43.makeExclude(rEString90);
        st1920.automaton.REString rEString94 = rEString29.makeRange(rEString91, (int) (byte) 10, (-1));
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = st1920.automaton.REGEXWrapper.matches("*", rEString94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: expected '}' at position 7");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString12.makeAlpha(rEString24);
        st1920.automaton.REString rEString26 = rEString7.makeAny(rEString25);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString30.makeExclude(rEString33);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString47.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString40.makeZeroOrOne(rEString53);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString59.makeExclude(rEString62);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString76.makeAnyChar(rEString81);
        st1920.automaton.REString rEString83 = rEString73.makeExclude(rEString76);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = rEString73.makeAlpha(rEString85);
        st1920.automaton.REString rEString87 = rEString69.makeAlpha(rEString85);
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString92 = rEString89.makeExclude(rEString91);
        st1920.automaton.REString rEString93 = rEString55.makeOr(rEString69, rEString92);
        st1920.automaton.REString rEString94 = rEString26.makeAnyChar(rEString93);
        java.lang.String str95 = rEString26.string;
        boolean boolean96 = st1920.automaton.REGEXWrapper.matches("a@", rEString26);
        rEString26.string = "a@";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "a@" + "'", str95.equals("a@"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString9.makeExclude(rEString12);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString26.makeAnyChar(rEString32);
        st1920.automaton.REString rEString34 = rEString19.makeZeroOrOne(rEString32);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString47 = rEString41.makeAnyChar(rEString46);
        st1920.automaton.REString rEString48 = rEString38.makeExclude(rEString41);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString55.makeAnyChar(rEString60);
        st1920.automaton.REString rEString62 = rEString52.makeExclude(rEString55);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString70 = rEString64.makeAnyChar(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = rEString72.makeExclude(rEString74);
        st1920.automaton.REString rEString76 = rEString69.makeAnyChar(rEString75);
        st1920.automaton.REString rEString77 = rEString52.makeOneOrMore(rEString75);
        st1920.automaton.REString rEString78 = rEString32.makeOr(rEString48, rEString52);
        st1920.automaton.REString rEString79 = rEString2.makeAny(rEString32);
        rEString79.string = "";
        boolean boolean82 = st1920.automaton.REGEXWrapper.matches("~.1", rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = st1920.automaton.REGEXWrapper.matches("~.+", rEString5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString24 = rEString14.makeExclude(rEString17);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString31.makeAnyChar(rEString37);
        st1920.automaton.REString rEString39 = rEString24.makeZeroOrOne(rEString37);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString52 = rEString46.makeAnyChar(rEString51);
        st1920.automaton.REString rEString53 = rEString43.makeExclude(rEString46);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString43.makeAlpha(rEString55);
        st1920.automaton.REString rEString57 = rEString24.makeClass(rEString43);
        st1920.automaton.REString rEString60 = rEString9.makeRep(rEString24, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString61 = rEString5.makeZeroOrMore(rEString9);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeNum(rEString65);
        boolean boolean68 = st1920.automaton.REGEXWrapper.matches("", rEString61);
        rEString61.string = "a@";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString4.makeOneOrMore(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString31.makeAnyChar(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString55.makeAnyChar(rEString60);
        st1920.automaton.REString rEString62 = rEString52.makeExclude(rEString55);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString52.makeAlpha(rEString64);
        st1920.automaton.REString rEString66 = rEString47.makeAny(rEString65);
        st1920.automaton.REString rEString67 = rEString31.makeClass(rEString65);
        st1920.automaton.REString rEString68 = rEString4.makeOneOrMore(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString81 = rEString75.makeAnyChar(rEString80);
        st1920.automaton.REString rEString82 = rEString72.makeExclude(rEString75);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString90 = rEString84.makeAnyChar(rEString89);
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString95 = rEString92.makeExclude(rEString94);
        st1920.automaton.REString rEString96 = rEString89.makeAnyChar(rEString95);
        st1920.automaton.REString rEString97 = rEString82.makeZeroOrOne(rEString95);
        st1920.automaton.REString rEString98 = rEString4.makeAnyChar(rEString97);
        boolean boolean99 = st1920.automaton.REGEXWrapper.matches("~~&", rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        java.lang.String str6 = rEString4.string;
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString10.makeExclude(rEString13);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString10.makeAlpha(rEString22);
        st1920.automaton.REString rEString24 = rEString4.makeExclude(rEString22);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString36.makeExclude(rEString39);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString36.makeAlpha(rEString48);
        st1920.automaton.REString rEString50 = rEString31.makeAny(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString57.makeAnyChar(rEString62);
        st1920.automaton.REString rEString64 = rEString54.makeExclude(rEString57);
        st1920.automaton.REString rEString65 = rEString24.makeAnd(rEString31, rEString57);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = st1920.automaton.REGEXWrapper.matches("", rEString24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        boolean boolean12 = st1920.automaton.REGEXWrapper.matches("~.+", rEString2);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString23 = rEString14.makeAnyChar(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        java.lang.String str29 = rEString27.string;
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString27.makeExclude(rEString45);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString59.makeExclude(rEString62);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString59.makeAlpha(rEString71);
        st1920.automaton.REString rEString73 = rEString54.makeAny(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString82.makeExclude(rEString84);
        st1920.automaton.REString rEString86 = rEString80.makeAnyChar(rEString85);
        st1920.automaton.REString rEString87 = rEString77.makeExclude(rEString80);
        st1920.automaton.REString rEString88 = rEString47.makeAnd(rEString54, rEString80);
        st1920.automaton.REString rEString89 = rEString22.makeExclude(rEString88);
        rEString88.string = "";
        st1920.automaton.REString rEString92 = rEString2.makeGroup(rEString88);
        java.lang.Class<?> wildcardClass93 = rEString92.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        java.lang.String str6 = rEString4.string;
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString10.makeExclude(rEString13);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString10.makeAlpha(rEString22);
        st1920.automaton.REString rEString24 = rEString4.makeExclude(rEString22);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = st1920.automaton.REGEXWrapper.matches("[~..]<0-1>", rEString24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString16 = rEString2.makeRange(rEString12, 10, 0);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString29 = rEString23.makeAnyChar(rEString28);
        st1920.automaton.REString rEString30 = rEString20.makeExclude(rEString23);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString32.makeAnyChar(rEString37);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString37.makeAnyChar(rEString43);
        st1920.automaton.REString rEString45 = rEString30.makeZeroOrOne(rEString43);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString47.makeAnyChar(rEString52);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString52.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString30.makeOneOrMore(rEString59);
        st1920.automaton.REString rEString61 = rEString12.makeNothing(rEString30);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString65.makeAnyChar(rEString70);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString73.makeExclude(rEString75);
        st1920.automaton.REString rEString79 = rEString65.makeRange(rEString75, 10, 0);
        st1920.automaton.REString rEString82 = rEString63.makeRep(rEString65, (int) 'a', (int) '4');
        st1920.automaton.REString rEString83 = rEString12.makeZeroOrOne(rEString65);
        boolean boolean84 = st1920.automaton.REGEXWrapper.matches("", rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        st1920.automaton.REString rEString1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = st1920.automaton.REGEXWrapper.matches("~.", rEString1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString18.makeAlpha(rEString30);
        st1920.automaton.REString rEString32 = rEString14.makeAlpha(rEString30);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        java.lang.String str38 = rEString36.string;
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString45.makeAnyChar(rEString50);
        st1920.automaton.REString rEString52 = rEString42.makeExclude(rEString45);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString42.makeAlpha(rEString54);
        st1920.automaton.REString rEString56 = rEString36.makeExclude(rEString54);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString64 = rEString58.makeAnyChar(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString73.makeExclude(rEString75);
        st1920.automaton.REString rEString77 = rEString71.makeAnyChar(rEString76);
        st1920.automaton.REString rEString78 = rEString68.makeExclude(rEString71);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString68.makeAlpha(rEString80);
        st1920.automaton.REString rEString82 = rEString63.makeAny(rEString81);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = rEString84.makeExclude(rEString86);
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = rEString91.makeExclude(rEString93);
        st1920.automaton.REString rEString95 = rEString89.makeAnyChar(rEString94);
        st1920.automaton.REString rEString96 = rEString86.makeExclude(rEString89);
        st1920.automaton.REString rEString97 = rEString56.makeAnd(rEString63, rEString89);
        st1920.automaton.REString rEString98 = rEString14.makeAlpha(rEString63);
        boolean boolean99 = st1920.automaton.REGEXWrapper.matches("[~..]<0-1>", rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString27 = rEString13.makeRange(rEString23, 10, 0);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString40 = rEString34.makeAnyChar(rEString39);
        st1920.automaton.REString rEString41 = rEString31.makeExclude(rEString34);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString49 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString48.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString41.makeZeroOrOne(rEString54);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString64 = rEString58.makeAnyChar(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString70 = rEString63.makeAnyChar(rEString69);
        st1920.automaton.REString rEString71 = rEString41.makeOneOrMore(rEString70);
        st1920.automaton.REString rEString72 = rEString23.makeNothing(rEString41);
        st1920.automaton.REString rEString73 = rEString2.makeAnyChar(rEString72);
        boolean boolean74 = st1920.automaton.REGEXWrapper.matches("~", rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString32.makeAlpha(rEString44);
        st1920.automaton.REString rEString46 = rEString28.makeAlpha(rEString44);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString64 = rEString58.makeAnyChar(rEString63);
        st1920.automaton.REString rEString65 = rEString56.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString48.makeClass(rEString65);
        st1920.automaton.REString rEString67 = rEString14.makeConcatenation(rEString28, rEString48);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = st1920.automaton.REGEXWrapper.matches("*", rEString14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString22.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString19.makeExclude(rEString22);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString29.makeZeroOrOne(rEString42);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString48.makeExclude(rEString51);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString48.makeAlpha(rEString60);
        st1920.automaton.REString rEString62 = rEString29.makeClass(rEString48);
        st1920.automaton.REString rEString65 = rEString14.makeRep(rEString29, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString66 = rEString10.makeZeroOrMore(rEString14);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString82 = rEString68.makeRange(rEString78, 10, 0);
        st1920.automaton.REString rEString83 = rEString10.makeNum(rEString78);
        st1920.automaton.REString rEString84 = rEString5.makeExclude(rEString83);
        boolean boolean85 = st1920.automaton.REGEXWrapper.matches("~..1", rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString64.makeAnyChar(rEString70);
        st1920.automaton.REString rEString72 = rEString47.makeOneOrMore(rEString70);
        st1920.automaton.REString rEString73 = rEString27.makeOr(rEString43, rEString47);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean74 = st1920.automaton.REGEXWrapper.matches("~.+", rEString27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString47.makeAlpha(rEString59);
        st1920.automaton.REString rEString61 = rEString43.makeAlpha(rEString59);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString65.makeExclude(rEString68);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString83 = rEString77.makeAnyChar(rEString82);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString82.makeAnyChar(rEString88);
        st1920.automaton.REString rEString90 = rEString75.makeZeroOrOne(rEString88);
        st1920.automaton.REString rEString91 = rEString43.makeExclude(rEString90);
        st1920.automaton.REString rEString94 = rEString29.makeRange(rEString91, (int) (byte) 10, (-1));
        rEString91.string = "~|?";
        boolean boolean97 = st1920.automaton.REGEXWrapper.matches("~", rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString4.makeOneOrMore(rEString27);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString38.makeAnyChar(rEString43);
        st1920.automaton.REString rEString45 = rEString35.makeExclude(rEString38);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString52.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString49.makeExclude(rEString52);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString49.makeAlpha(rEString61);
        st1920.automaton.REString rEString63 = rEString45.makeAlpha(rEString61);
        boolean boolean64 = st1920.automaton.REGEXWrapper.matches("~.+", rEString61);
        boolean boolean65 = st1920.automaton.REGEXWrapper.matches("hi!", rEString61);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString78 = rEString72.makeAnyChar(rEString77);
        st1920.automaton.REString rEString79 = rEString69.makeExclude(rEString72);
        st1920.automaton.REString rEString80 = rEString61.makeAnyChar(rEString72);
        st1920.automaton.REString rEString81 = rEString29.makeNothing(rEString80);
        boolean boolean82 = st1920.automaton.REGEXWrapper.matches("*", rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString8.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString5.makeExclude(rEString8);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString22.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString19.makeExclude(rEString22);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString19.makeAlpha(rEString31);
        st1920.automaton.REString rEString33 = rEString15.makeAlpha(rEString31);
        boolean boolean34 = st1920.automaton.REGEXWrapper.matches("~.+", rEString31);
        boolean boolean35 = st1920.automaton.REGEXWrapper.matches("hi!", rEString31);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString49 = rEString39.makeExclude(rEString42);
        st1920.automaton.REString rEString50 = rEString31.makeAnyChar(rEString42);
        java.lang.String str51 = rEString42.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString18.makeAlpha(rEString30);
        st1920.automaton.REString rEString32 = rEString14.makeAlpha(rEString30);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        java.lang.String str38 = rEString36.string;
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString45.makeAnyChar(rEString50);
        st1920.automaton.REString rEString52 = rEString42.makeExclude(rEString45);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString42.makeAlpha(rEString54);
        st1920.automaton.REString rEString56 = rEString36.makeExclude(rEString54);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString64 = rEString58.makeAnyChar(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString73.makeExclude(rEString75);
        st1920.automaton.REString rEString77 = rEString71.makeAnyChar(rEString76);
        st1920.automaton.REString rEString78 = rEString68.makeExclude(rEString71);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString68.makeAlpha(rEString80);
        st1920.automaton.REString rEString82 = rEString63.makeAny(rEString81);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = rEString84.makeExclude(rEString86);
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = rEString91.makeExclude(rEString93);
        st1920.automaton.REString rEString95 = rEString89.makeAnyChar(rEString94);
        st1920.automaton.REString rEString96 = rEString86.makeExclude(rEString89);
        st1920.automaton.REString rEString97 = rEString56.makeAnd(rEString63, rEString89);
        st1920.automaton.REString rEString98 = rEString32.makeNothing(rEString89);
        boolean boolean99 = st1920.automaton.REGEXWrapper.matches("~.1", rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString12.makeAlpha(rEString24);
        st1920.automaton.REString rEString26 = rEString7.makeAny(rEString25);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString30.makeExclude(rEString33);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString47.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString40.makeZeroOrOne(rEString53);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString59.makeExclude(rEString62);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString76.makeAnyChar(rEString81);
        st1920.automaton.REString rEString83 = rEString73.makeExclude(rEString76);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = rEString73.makeAlpha(rEString85);
        st1920.automaton.REString rEString87 = rEString69.makeAlpha(rEString85);
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString92 = rEString89.makeExclude(rEString91);
        st1920.automaton.REString rEString93 = rEString55.makeOr(rEString69, rEString92);
        st1920.automaton.REString rEString94 = rEString26.makeAnyChar(rEString93);
        boolean boolean95 = st1920.automaton.REGEXWrapper.matches("~..1", rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString47.makeAlpha(rEString59);
        st1920.automaton.REString rEString61 = rEString43.makeAlpha(rEString59);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString29.makeOr(rEString43, rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString74.makeAnyChar(rEString79);
        st1920.automaton.REString rEString81 = rEString71.makeExclude(rEString74);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString83.makeAnyChar(rEString88);
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = rEString91.makeExclude(rEString93);
        st1920.automaton.REString rEString95 = rEString88.makeAnyChar(rEString94);
        st1920.automaton.REString rEString96 = rEString81.makeZeroOrOne(rEString94);
        st1920.automaton.REString rEString97 = rEString29.makeExcludeClass(rEString96);
        boolean boolean98 = st1920.automaton.REGEXWrapper.matches("[~..]<0-1>", rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        boolean boolean12 = st1920.automaton.REGEXWrapper.matches("~.+", rEString2);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString23 = rEString14.makeAnyChar(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        java.lang.String str29 = rEString27.string;
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString27.makeExclude(rEString45);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString59.makeExclude(rEString62);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString59.makeAlpha(rEString71);
        st1920.automaton.REString rEString73 = rEString54.makeAny(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString82.makeExclude(rEString84);
        st1920.automaton.REString rEString86 = rEString80.makeAnyChar(rEString85);
        st1920.automaton.REString rEString87 = rEString77.makeExclude(rEString80);
        st1920.automaton.REString rEString88 = rEString47.makeAnd(rEString54, rEString80);
        st1920.automaton.REString rEString89 = rEString22.makeExclude(rEString88);
        rEString88.string = "";
        st1920.automaton.REString rEString92 = rEString2.makeGroup(rEString88);
        java.lang.Class<?> wildcardClass93 = rEString88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        boolean boolean15 = st1920.automaton.REGEXWrapper.matches("+", rEString7);
        java.lang.Class<?> wildcardClass16 = rEString7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        boolean boolean12 = st1920.automaton.REGEXWrapper.matches("~.+", rEString2);
        java.lang.String str13 = rEString2.string;
        st1920.automaton.REString rEString14 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString15 = rEString2.makeOneOrMore(rEString14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString35.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString28.makeZeroOrOne(rEString41);
        rEString43.string = "";
        st1920.automaton.REString rEString46 = rEString4.makeOneOrMore(rEString43);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString67.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString60.makeZeroOrOne(rEString73);
        st1920.automaton.REString rEString76 = rEString43.makeOneOrMore(rEString75);
        boolean boolean77 = st1920.automaton.REGEXWrapper.matches("+", rEString43);
        java.lang.Class<?> wildcardClass78 = rEString43.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString14.makeClass(rEString33);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString54.makeAnyChar(rEString59);
        st1920.automaton.REString rEString61 = rEString51.makeExclude(rEString54);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString69 = rEString63.makeAnyChar(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString68.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString51.makeOneOrMore(rEString74);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        rEString78.string = "hi!";
        st1920.automaton.REString rEString84 = rEString33.makeAnd(rEString51, rEString78);
        boolean boolean85 = st1920.automaton.REGEXWrapper.matches("~", rEString78);
        java.lang.Class<?> wildcardClass86 = rEString78.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        java.lang.String str6 = rEString4.string;
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString10.makeExclude(rEString13);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString10.makeAlpha(rEString22);
        st1920.automaton.REString rEString24 = rEString4.makeExclude(rEString22);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString38 = rEString28.makeExclude(rEString31);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString46 = rEString40.makeAnyChar(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString52 = rEString45.makeAnyChar(rEString51);
        st1920.automaton.REString rEString53 = rEString38.makeZeroOrOne(rEString51);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString67 = rEString57.makeExclude(rEString60);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString57.makeAlpha(rEString69);
        st1920.automaton.REString rEString71 = rEString38.makeClass(rEString57);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString73.makeExclude(rEString75);
        java.lang.String str77 = rEString75.string;
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString90 = rEString84.makeAnyChar(rEString89);
        st1920.automaton.REString rEString91 = rEString81.makeExclude(rEString84);
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = rEString81.makeAlpha(rEString93);
        st1920.automaton.REString rEString95 = rEString75.makeExclude(rEString93);
        st1920.automaton.REString rEString96 = rEString38.makeGroup(rEString75);
        st1920.automaton.REString rEString97 = rEString24.makeGroup(rEString75);
        boolean boolean98 = st1920.automaton.REGEXWrapper.matches("a@", rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        java.lang.String str6 = rEString4.string;
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString10.makeExclude(rEString13);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString10.makeAlpha(rEString22);
        st1920.automaton.REString rEString24 = rEString4.makeExclude(rEString22);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = st1920.automaton.REGEXWrapper.matches("~", rEString24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString3.makeAlpha(rEString15);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString19.makeAnyChar(rEString27);
        boolean boolean29 = st1920.automaton.REGEXWrapper.matches("~.+", rEString19);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        java.lang.String str35 = rEString33.string;
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString49 = rEString39.makeExclude(rEString42);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString39.makeAlpha(rEString51);
        st1920.automaton.REString rEString53 = rEString33.makeExclude(rEString51);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString67 = rEString57.makeExclude(rEString60);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString74.makeAnyChar(rEString79);
        st1920.automaton.REString rEString81 = rEString71.makeExclude(rEString74);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString71.makeAlpha(rEString83);
        st1920.automaton.REString rEString85 = rEString67.makeAlpha(rEString83);
        st1920.automaton.REString rEString86 = rEString53.makeNothing(rEString67);
        st1920.automaton.REString rEString87 = rEString19.makeClass(rEString86);
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString92 = rEString89.makeExclude(rEString91);
        st1920.automaton.REString rEString93 = rEString19.makeZeroOrOne(rEString91);
        st1920.automaton.REString rEString94 = rEString15.makeExclude(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "" + "'", str35.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString4.makeOneOrMore(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString52 = rEString46.makeAnyChar(rEString51);
        st1920.automaton.REString rEString53 = rEString43.makeExclude(rEString46);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString55.makeAnyChar(rEString60);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString60.makeAnyChar(rEString66);
        st1920.automaton.REString rEString68 = rEString53.makeZeroOrOne(rEString66);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString81 = rEString75.makeAnyChar(rEString80);
        st1920.automaton.REString rEString82 = rEString72.makeExclude(rEString75);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString72.makeAlpha(rEString84);
        st1920.automaton.REString rEString86 = rEString53.makeClass(rEString72);
        st1920.automaton.REString rEString89 = rEString38.makeRep(rEString53, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString90 = rEString34.makeZeroOrMore(rEString38);
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString95 = rEString92.makeExclude(rEString94);
        st1920.automaton.REString rEString96 = rEString90.makeNum(rEString94);
        java.lang.String str97 = rEString90.string;
        st1920.automaton.REString rEString98 = rEString27.makeNum(rEString90);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = st1920.automaton.REGEXWrapper.matches("[]", rEString27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str97 + "' != '" + "*" + "'", str97.equals("*"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        st1920.automaton.REString rEString1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = st1920.automaton.REGEXWrapper.matches("+", rEString1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString6.makeAnyChar(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString20.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString13.makeAny(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString49.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString42.makeZeroOrOne(rEString55);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString64.makeAnyChar(rEString70);
        st1920.automaton.REString rEString72 = rEString42.makeOneOrMore(rEString71);
        st1920.automaton.REString rEString73 = rEString13.makeExcludeClass(rEString42);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString78.makeAnyChar(rEString83);
        st1920.automaton.REString rEString85 = rEString76.makeAnyChar(rEString84);
        boolean boolean86 = st1920.automaton.REGEXWrapper.matches("~.+", rEString76);
        java.lang.String str87 = rEString76.string;
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("a@");
        st1920.automaton.REString rEString90 = rEString73.makeOr(rEString76, rEString89);
        java.lang.Class<?> wildcardClass91 = rEString90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "" + "'", str87.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString4.makeAlpha(rEString16);
        rEString17.string = "";
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString17.makeZeroOrMore(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString47.makeAlpha(rEString59);
        st1920.automaton.REString rEString61 = rEString43.makeAlpha(rEString59);
        boolean boolean62 = st1920.automaton.REGEXWrapper.matches("~.+", rEString59);
        st1920.automaton.REString rEString63 = rEString17.makeAlpha(rEString59);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = rEString72.makeExclude(rEString74);
        st1920.automaton.REString rEString76 = rEString70.makeAnyChar(rEString75);
        st1920.automaton.REString rEString77 = rEString67.makeExclude(rEString70);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString90 = rEString84.makeAnyChar(rEString89);
        st1920.automaton.REString rEString91 = rEString81.makeExclude(rEString84);
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = rEString81.makeAlpha(rEString93);
        st1920.automaton.REString rEString95 = rEString77.makeAlpha(rEString93);
        st1920.automaton.REString rEString96 = rEString17.makeClass(rEString93);
        boolean boolean97 = st1920.automaton.REGEXWrapper.matches("~~&", rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        st1920.automaton.REString rEString1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = st1920.automaton.REGEXWrapper.matches("~~.", rEString1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString20 = rEString14.makeAnyChar(rEString19);
        st1920.automaton.REString rEString21 = rEString11.makeExclude(rEString14);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString11.makeAlpha(rEString23);
        st1920.automaton.REString rEString25 = rEString6.makeAny(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString34 = rEString28.makeAnyChar(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString42 = rEString28.makeRange(rEString38, 10, 0);
        boolean boolean43 = st1920.automaton.REGEXWrapper.matches("~.", rEString38);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString64.makeAnyChar(rEString70);
        st1920.automaton.REString rEString72 = rEString57.makeZeroOrOne(rEString70);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString85 = rEString79.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString76.makeExclude(rEString79);
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString76.makeAlpha(rEString88);
        st1920.automaton.REString rEString90 = rEString57.makeClass(rEString76);
        st1920.automaton.REString rEString93 = rEString38.makeRange(rEString57, (int) '4', (-1));
        st1920.automaton.REString rEString96 = rEString6.makeRange(rEString93, (int) (short) -1, (int) '4');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString14.makeClass(rEString33);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString49.makeAnyChar(rEString57);
        st1920.automaton.REString rEString61 = rEString33.makeRep(rEString49, (int) ' ', (int) (short) 10);
        boolean boolean62 = st1920.automaton.REGEXWrapper.matches("~?", rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString8.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString5.makeExclude(rEString8);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString22.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString19.makeExclude(rEString22);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString19.makeAlpha(rEString31);
        st1920.automaton.REString rEString33 = rEString15.makeAlpha(rEString31);
        boolean boolean34 = st1920.automaton.REGEXWrapper.matches("~.+", rEString31);
        boolean boolean35 = st1920.automaton.REGEXWrapper.matches("hi!", rEString31);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString49 = rEString39.makeExclude(rEString42);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString39.makeAlpha(rEString51);
        rEString52.string = "";
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString56.makeAnyChar(rEString61);
        st1920.automaton.REString rEString63 = rEString52.makeZeroOrMore(rEString62);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString73.makeExclude(rEString75);
        st1920.automaton.REString rEString77 = rEString71.makeAnyChar(rEString76);
        st1920.automaton.REString rEString78 = rEString68.makeExclude(rEString71);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = rEString87.makeExclude(rEString89);
        st1920.automaton.REString rEString91 = rEString85.makeAnyChar(rEString90);
        st1920.automaton.REString rEString92 = rEString82.makeExclude(rEString85);
        st1920.automaton.REString rEString94 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString95 = rEString82.makeAlpha(rEString94);
        st1920.automaton.REString rEString96 = rEString78.makeAlpha(rEString94);
        boolean boolean97 = st1920.automaton.REGEXWrapper.matches("~.+", rEString94);
        st1920.automaton.REString rEString98 = rEString52.makeAlpha(rEString94);
        st1920.automaton.REString rEString99 = rEString31.makeAny(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString20.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString13.makeZeroOrOne(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString32.makeAlpha(rEString44);
        st1920.automaton.REString rEString46 = rEString13.makeClass(rEString32);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString48.makeAnyChar(rEString56);
        st1920.automaton.REString rEString60 = rEString32.makeRep(rEString48, (int) ' ', (int) (short) 10);
        rEString32.string = "+";
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString73 = rEString67.makeAnyChar(rEString72);
        st1920.automaton.REString rEString74 = rEString65.makeAnyChar(rEString73);
        boolean boolean75 = st1920.automaton.REGEXWrapper.matches("~.+", rEString65);
        java.lang.String str76 = rEString65.string;
        st1920.automaton.REString rEString77 = rEString32.makeZeroOrOne(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString47.makeAlpha(rEString59);
        st1920.automaton.REString rEString61 = rEString43.makeAlpha(rEString59);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString29.makeOr(rEString43, rEString66);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = st1920.automaton.REGEXWrapper.matches("*", rEString43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        java.lang.String str5 = rEString3.string;
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString9.makeExclude(rEString12);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString9.makeAlpha(rEString21);
        st1920.automaton.REString rEString23 = rEString3.makeExclude(rEString21);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString34 = rEString25.makeAnyChar(rEString33);
        java.lang.String str35 = rEString33.string;
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString49 = rEString39.makeExclude(rEString42);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString56.makeAnyChar(rEString62);
        st1920.automaton.REString rEString64 = rEString49.makeZeroOrOne(rEString62);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString78 = rEString71.makeAnyChar(rEString77);
        st1920.automaton.REString rEString79 = rEString49.makeOneOrMore(rEString78);
        st1920.automaton.REString rEString80 = rEString33.makeClass(rEString79);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = rEString87.makeExclude(rEString89);
        st1920.automaton.REString rEString91 = rEString85.makeAnyChar(rEString90);
        st1920.automaton.REString rEString92 = rEString83.makeAnyChar(rEString91);
        boolean boolean93 = st1920.automaton.REGEXWrapper.matches("~.+", rEString83);
        java.lang.String str94 = rEString83.string;
        st1920.automaton.REString rEString95 = rEString80.makeZeroOrMore(rEString83);
        st1920.automaton.REString rEString98 = rEString3.makeRange(rEString83, (int) (byte) -1, (int) (byte) 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "~." + "'", str35.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str94 + "' != '" + "" + "'", str94.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString7.makeAnyChar(rEString13);
        boolean boolean15 = st1920.automaton.REGEXWrapper.matches("a@", rEString14);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString34 = rEString25.makeAnyChar(rEString33);
        java.lang.String str35 = rEString33.string;
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString49 = rEString39.makeExclude(rEString42);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString56.makeAnyChar(rEString62);
        st1920.automaton.REString rEString64 = rEString49.makeZeroOrOne(rEString62);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString78 = rEString71.makeAnyChar(rEString77);
        st1920.automaton.REString rEString79 = rEString49.makeOneOrMore(rEString78);
        st1920.automaton.REString rEString80 = rEString33.makeClass(rEString79);
        st1920.automaton.REString rEString81 = rEString17.makeOneOrMore(rEString33);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = rEString83.makeExclude(rEString85);
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = rEString90.makeExclude(rEString92);
        st1920.automaton.REString rEString94 = rEString88.makeAnyChar(rEString93);
        st1920.automaton.REString rEString95 = rEString85.makeExclude(rEString88);
        st1920.automaton.REString rEString96 = rEString81.makeExcludeClass(rEString88);
        st1920.automaton.REString rEString97 = rEString14.makeOneOrMore(rEString96);
        java.lang.Class<?> wildcardClass98 = rEString14.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "~." + "'", str35.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString18.makeAlpha(rEString30);
        st1920.automaton.REString rEString32 = rEString14.makeAlpha(rEString30);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString36.makeExclude(rEString39);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString36.makeAlpha(rEString48);
        st1920.automaton.REString rEString52 = rEString14.makeRange(rEString36, (int) (byte) 1, (int) (byte) 100);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString56.makeExclude(rEString59);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString73.makeAnyChar(rEString79);
        st1920.automaton.REString rEString81 = rEString66.makeZeroOrOne(rEString79);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString83.makeAnyChar(rEString88);
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = rEString91.makeExclude(rEString93);
        st1920.automaton.REString rEString95 = rEString88.makeAnyChar(rEString94);
        st1920.automaton.REString rEString96 = rEString66.makeOneOrMore(rEString95);
        st1920.automaton.REString rEString97 = rEString14.makeAnyChar(rEString96);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean98 = st1920.automaton.REGEXWrapper.matches("~?*", rEString14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString23.makeExclude(rEString26);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString23.makeAlpha(rEString35);
        st1920.automaton.REString rEString37 = rEString18.makeAny(rEString36);
        st1920.automaton.REString rEString38 = rEString2.makeClass(rEString36);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString46 = rEString40.makeAnyChar(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString54 = rEString40.makeRange(rEString50, 10, 0);
        st1920.automaton.REString rEString55 = rEString38.makeAny(rEString50);
        boolean boolean56 = st1920.automaton.REGEXWrapper.matches("", rEString38);
        st1920.automaton.REString rEString57 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString58 = rEString38.makeAny(rEString57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString23.makeExclude(rEString26);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString23.makeAlpha(rEString35);
        st1920.automaton.REString rEString37 = rEString18.makeAny(rEString36);
        st1920.automaton.REString rEString38 = rEString2.makeClass(rEString36);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString46 = rEString40.makeAnyChar(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString54 = rEString40.makeRange(rEString50, 10, 0);
        st1920.automaton.REString rEString55 = rEString38.makeAny(rEString50);
        boolean boolean56 = st1920.automaton.REGEXWrapper.matches("", rEString38);
        java.lang.String str57 = rEString38.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "[a]" + "'", str57.equals("[a]"));
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~.+");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString15 = rEString9.makeAnyChar(rEString14);
        st1920.automaton.REString rEString16 = rEString6.makeExclude(rEString9);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString24 = rEString18.makeAnyChar(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString23.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString16.makeZeroOrOne(rEString29);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString38.makeAnyChar(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString52.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString49.makeExclude(rEString52);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString73 = rEString66.makeAnyChar(rEString72);
        st1920.automaton.REString rEString74 = rEString59.makeZeroOrOne(rEString72);
        st1920.automaton.REString rEString75 = rEString44.makeZeroOrMore(rEString74);
        st1920.automaton.REString rEString76 = rEString16.makeZeroOrOne(rEString75);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString78.makeAnyChar(rEString83);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString90 = rEString83.makeAnyChar(rEString89);
        st1920.automaton.REString rEString91 = rEString75.makeExcludeClass(rEString83);
        st1920.automaton.REString rEString92 = rEString2.makeZeroOrOne(rEString83);
        boolean boolean93 = st1920.automaton.REGEXWrapper.matches("~.", rEString92);
        java.lang.String str94 = rEString92.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str94 + "' != '" + "~?" + "'", str94.equals("~?"));
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString14.makeClass(rEString33);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString54.makeAnyChar(rEString59);
        st1920.automaton.REString rEString61 = rEString51.makeExclude(rEString54);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString69 = rEString63.makeAnyChar(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString68.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString51.makeOneOrMore(rEString74);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        rEString78.string = "hi!";
        st1920.automaton.REString rEString84 = rEString33.makeAnd(rEString51, rEString78);
        boolean boolean85 = st1920.automaton.REGEXWrapper.matches("~", rEString78);
        rEString78.string = "a@";
        st1920.automaton.REString rEString88 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString91 = rEString78.makeRange(rEString88, (int) '4', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString8.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString5.makeExclude(rEString8);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString22.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString19.makeExclude(rEString22);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString19.makeAlpha(rEString31);
        st1920.automaton.REString rEString33 = rEString15.makeAlpha(rEString31);
        boolean boolean34 = st1920.automaton.REGEXWrapper.matches("~.+", rEString31);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString38.makeAnyChar(rEString43);
        st1920.automaton.REString rEString45 = rEString36.makeAnyChar(rEString44);
        java.lang.String str46 = rEString44.string;
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString67.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString60.makeZeroOrOne(rEString73);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString83 = rEString77.makeAnyChar(rEString82);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString82.makeAnyChar(rEString88);
        st1920.automaton.REString rEString90 = rEString60.makeOneOrMore(rEString89);
        st1920.automaton.REString rEString91 = rEString44.makeClass(rEString90);
        st1920.automaton.REString rEString92 = rEString31.makeZeroOrOne(rEString90);
        boolean boolean93 = st1920.automaton.REGEXWrapper.matches("~?*", rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "~." + "'", str46.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("~..1");
        java.lang.String str2 = rEString1.string;
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString21 = rEString7.makeRange(rEString17, 10, 0);
        st1920.automaton.REString rEString24 = rEString5.makeRep(rEString7, (int) 'a', (int) '4');
        boolean boolean25 = st1920.automaton.REGEXWrapper.matches("*", rEString24);
        st1920.automaton.REString rEString26 = rEString1.makeExclude(rEString24);
        java.lang.Class<?> wildcardClass27 = rEString26.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "~..1" + "'", str2.equals("~..1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = st1920.automaton.REGEXWrapper.matches("[a]", rEString2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString15 = rEString1.makeRange(rEString11, 10, 0);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString22.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString19.makeExclude(rEString22);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString29.makeZeroOrOne(rEString42);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString52 = rEString46.makeAnyChar(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString51.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString29.makeOneOrMore(rEString58);
        st1920.automaton.REString rEString60 = rEString11.makeNothing(rEString29);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString65.makeAnyChar(rEString70);
        st1920.automaton.REString rEString72 = rEString63.makeAnyChar(rEString71);
        boolean boolean73 = st1920.automaton.REGEXWrapper.matches("~.+", rEString63);
        java.lang.String str74 = rEString63.string;
        st1920.automaton.REString rEString75 = rEString60.makeZeroOrMore(rEString63);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString85 = rEString79.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString77.makeAnyChar(rEString85);
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString91 = rEString85.makeRange(rEString88, (int) (short) 100, (int) (byte) 0);
        st1920.automaton.REString rEString92 = rEString60.makeZeroOrOne(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString12.makeAlpha(rEString24);
        st1920.automaton.REString rEString26 = rEString7.makeAny(rEString25);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString30.makeExclude(rEString33);
        st1920.automaton.REString rEString41 = rEString26.makeNum(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString45.makeExclude(rEString48);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString59.makeExclude(rEString62);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString59.makeAlpha(rEString71);
        st1920.automaton.REString rEString73 = rEString55.makeAlpha(rEString71);
        st1920.automaton.REString rEString74 = rEString26.makeExclude(rEString55);
        boolean boolean75 = st1920.automaton.REGEXWrapper.matches("~", rEString26);
        java.lang.Class<?> wildcardClass76 = rEString26.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        st1920.automaton.REString rEString1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = st1920.automaton.REGEXWrapper.matches("", rEString1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString47.makeAlpha(rEString59);
        st1920.automaton.REString rEString61 = rEString43.makeAlpha(rEString59);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString29.makeOr(rEString43, rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString74.makeAnyChar(rEString79);
        st1920.automaton.REString rEString81 = rEString71.makeExclude(rEString74);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString83.makeAnyChar(rEString88);
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = rEString91.makeExclude(rEString93);
        st1920.automaton.REString rEString95 = rEString88.makeAnyChar(rEString94);
        st1920.automaton.REString rEString96 = rEString81.makeZeroOrOne(rEString94);
        st1920.automaton.REString rEString97 = rEString29.makeAny(rEString96);
        boolean boolean98 = st1920.automaton.REGEXWrapper.matches("[a]", rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString15 = rEString9.makeAnyChar(rEString14);
        st1920.automaton.REString rEString16 = rEString7.makeAnyChar(rEString15);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString18.makeAnyChar(rEString26);
        java.lang.String str28 = rEString26.string;
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString49.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString42.makeZeroOrOne(rEString55);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString64.makeAnyChar(rEString70);
        st1920.automaton.REString rEString72 = rEString42.makeOneOrMore(rEString71);
        st1920.automaton.REString rEString73 = rEString26.makeClass(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString83 = rEString77.makeAnyChar(rEString82);
        st1920.automaton.REString rEString84 = rEString75.makeAnyChar(rEString83);
        st1920.automaton.REString rEString87 = rEString26.makeRange(rEString84, (int) (short) 100, (int) (short) 0);
        st1920.automaton.REString rEString90 = rEString16.makeRange(rEString87, (int) '#', (int) (short) 10);
        st1920.automaton.REString rEString91 = rEString4.makeNothing(rEString90);
        boolean boolean92 = st1920.automaton.REGEXWrapper.matches("~.1", rEString4);
        st1920.automaton.REString rEString93 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString94 = rEString4.makeOneOrMore(rEString93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "~." + "'", str28.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString23.makeExclude(rEString26);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString23.makeAlpha(rEString35);
        st1920.automaton.REString rEString37 = rEString18.makeAny(rEString36);
        st1920.automaton.REString rEString38 = rEString2.makeClass(rEString36);
        boolean boolean39 = st1920.automaton.REGEXWrapper.matches("~|?", rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString45.makeAnyChar(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString50.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString43.makeZeroOrOne(rEString56);
        st1920.automaton.REString rEString59 = rEString27.makeExcludeClass(rEString58);
        boolean boolean60 = st1920.automaton.REGEXWrapper.matches("a@", rEString58);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString58.makeClass(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        st1920.automaton.REString rEString1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = st1920.automaton.REGEXWrapper.matches("(~)", rEString1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString29.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString22.makeZeroOrOne(rEString35);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString41.makeExclude(rEString44);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString58.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString51.makeZeroOrOne(rEString64);
        st1920.automaton.REString rEString67 = rEString35.makeExcludeClass(rEString66);
        st1920.automaton.REString rEString68 = rEString8.makeOneOrMore(rEString67);
        java.lang.String str69 = rEString67.string;
        boolean boolean70 = st1920.automaton.REGEXWrapper.matches("a", rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "[^~?]" + "'", str69.equals("[^~?]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        java.lang.String str15 = rEString4.string;
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString29 = rEString22.makeAnyChar(rEString28);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString29.makeAny(rEString42);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString48.makeExclude(rEString51);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString65.makeAnyChar(rEString71);
        st1920.automaton.REString rEString73 = rEString58.makeZeroOrOne(rEString71);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString81 = rEString75.makeAnyChar(rEString80);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = rEString83.makeExclude(rEString85);
        st1920.automaton.REString rEString87 = rEString80.makeAnyChar(rEString86);
        st1920.automaton.REString rEString88 = rEString58.makeOneOrMore(rEString87);
        st1920.automaton.REString rEString89 = rEString29.makeExcludeClass(rEString58);
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("~");
        st1920.automaton.REString rEString92 = rEString4.makeAnd(rEString29, rEString91);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = st1920.automaton.REGEXWrapper.matches("~", rEString91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString3.makeAlpha(rEString15);
        rEString16.string = "";
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString16.makeZeroOrMore(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString46.makeExclude(rEString49);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString46.makeAlpha(rEString58);
        st1920.automaton.REString rEString60 = rEString42.makeAlpha(rEString58);
        boolean boolean61 = st1920.automaton.REGEXWrapper.matches("~.+", rEString58);
        st1920.automaton.REString rEString62 = rEString16.makeAlpha(rEString58);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString69.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString66.makeExclude(rEString69);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString83.makeAnyChar(rEString88);
        st1920.automaton.REString rEString90 = rEString80.makeExclude(rEString83);
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = rEString80.makeAlpha(rEString92);
        st1920.automaton.REString rEString94 = rEString76.makeAlpha(rEString92);
        st1920.automaton.REString rEString95 = rEString16.makeClass(rEString92);
        java.lang.Class<?> wildcardClass96 = rEString92.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = rEString5.makeExclude(rEString7);
        st1920.automaton.REString rEString9 = rEString3.makeAnyChar(rEString8);
        st1920.automaton.REString rEString10 = rEString1.makeAnyChar(rEString9);
        java.lang.String str11 = rEString9.string;
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString13.makeExclude(rEString15);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString24 = rEString18.makeAnyChar(rEString23);
        st1920.automaton.REString rEString25 = rEString15.makeExclude(rEString18);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString32.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString25.makeZeroOrOne(rEString38);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString47.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString25.makeOneOrMore(rEString54);
        st1920.automaton.REString rEString56 = rEString9.makeClass(rEString55);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString68 = rEString59.makeAnyChar(rEString67);
        boolean boolean69 = st1920.automaton.REGEXWrapper.matches("~.+", rEString59);
        java.lang.String str70 = rEString59.string;
        st1920.automaton.REString rEString71 = rEString56.makeZeroOrMore(rEString59);
        rEString59.string = "*";
        java.lang.Class<?> wildcardClass74 = rEString59.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "~." + "'", str11.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "" + "'", str70.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("a");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString16 = rEString9.makeAnyChar(rEString15);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString29 = rEString23.makeAnyChar(rEString28);
        st1920.automaton.REString rEString30 = rEString20.makeExclude(rEString23);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString32.makeAnyChar(rEString37);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString37.makeAnyChar(rEString43);
        st1920.automaton.REString rEString45 = rEString30.makeZeroOrOne(rEString43);
        st1920.automaton.REString rEString46 = rEString15.makeZeroOrMore(rEString45);
        st1920.automaton.REString rEString47 = rEString2.makeNothing(rEString15);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean48 = st1920.automaton.REGEXWrapper.matches("~&#", rEString15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        java.lang.String str5 = rEString3.string;
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString9.makeExclude(rEString12);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString9.makeAlpha(rEString21);
        st1920.automaton.REString rEString23 = rEString3.makeExclude(rEString21);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString27.makeExclude(rEString30);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString41.makeExclude(rEString44);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString41.makeAlpha(rEString53);
        st1920.automaton.REString rEString55 = rEString37.makeAlpha(rEString53);
        st1920.automaton.REString rEString56 = rEString23.makeNothing(rEString37);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString73 = rEString59.makeRange(rEString69, 10, 0);
        boolean boolean74 = st1920.automaton.REGEXWrapper.matches("~.", rEString69);
        st1920.automaton.REString rEString75 = rEString56.makeAlpha(rEString69);
        java.lang.Class<?> wildcardClass76 = rEString75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString47 = rEString41.makeAnyChar(rEString46);
        st1920.automaton.REString rEString48 = rEString38.makeExclude(rEString41);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString55.makeAnyChar(rEString61);
        st1920.automaton.REString rEString63 = rEString48.makeZeroOrOne(rEString61);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = rEString72.makeExclude(rEString74);
        st1920.automaton.REString rEString76 = rEString70.makeAnyChar(rEString75);
        st1920.automaton.REString rEString77 = rEString67.makeExclude(rEString70);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString67.makeAlpha(rEString79);
        st1920.automaton.REString rEString81 = rEString48.makeClass(rEString67);
        st1920.automaton.REString rEString84 = rEString33.makeRep(rEString48, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString85 = rEString29.makeZeroOrMore(rEString48);
        boolean boolean86 = st1920.automaton.REGEXWrapper.matches("~~&", rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString24 = rEString14.makeExclude(rEString17);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString31.makeAnyChar(rEString37);
        st1920.automaton.REString rEString39 = rEString24.makeZeroOrOne(rEString37);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString52 = rEString46.makeAnyChar(rEString51);
        st1920.automaton.REString rEString53 = rEString43.makeExclude(rEString46);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString43.makeAlpha(rEString55);
        st1920.automaton.REString rEString57 = rEString24.makeClass(rEString43);
        st1920.automaton.REString rEString60 = rEString9.makeRep(rEString24, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString61 = rEString5.makeZeroOrMore(rEString9);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString64 = rEString9.makeGroup(rEString63);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString73 = rEString67.makeAnyChar(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString81 = rEString67.makeRange(rEString77, 10, 0);
        boolean boolean82 = st1920.automaton.REGEXWrapper.matches("~.", rEString77);
        st1920.automaton.REString rEString83 = rEString9.makeGroup(rEString77);
        boolean boolean84 = st1920.automaton.REGEXWrapper.matches("~~&", rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString7.makeAnyChar(rEString13);
        boolean boolean15 = st1920.automaton.REGEXWrapper.matches("a@", rEString14);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString34 = rEString25.makeAnyChar(rEString33);
        java.lang.String str35 = rEString33.string;
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString49 = rEString39.makeExclude(rEString42);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString56.makeAnyChar(rEString62);
        st1920.automaton.REString rEString64 = rEString49.makeZeroOrOne(rEString62);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString78 = rEString71.makeAnyChar(rEString77);
        st1920.automaton.REString rEString79 = rEString49.makeOneOrMore(rEString78);
        st1920.automaton.REString rEString80 = rEString33.makeClass(rEString79);
        st1920.automaton.REString rEString81 = rEString17.makeOneOrMore(rEString33);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = rEString83.makeExclude(rEString85);
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = rEString90.makeExclude(rEString92);
        st1920.automaton.REString rEString94 = rEString88.makeAnyChar(rEString93);
        st1920.automaton.REString rEString95 = rEString85.makeExclude(rEString88);
        st1920.automaton.REString rEString96 = rEString81.makeExcludeClass(rEString88);
        st1920.automaton.REString rEString97 = rEString14.makeOneOrMore(rEString96);
        rEString96.string = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "~." + "'", str35.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString14.makeClass(rEString33);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        java.lang.String str53 = rEString51.string;
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString67 = rEString57.makeExclude(rEString60);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString57.makeAlpha(rEString69);
        st1920.automaton.REString rEString71 = rEString51.makeExclude(rEString69);
        st1920.automaton.REString rEString72 = rEString14.makeGroup(rEString51);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString74.makeAnyChar(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString82.makeExclude(rEString84);
        st1920.automaton.REString rEString88 = rEString74.makeRange(rEString84, 10, 0);
        st1920.automaton.REString rEString89 = rEString14.makeZeroOrMore(rEString84);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = st1920.automaton.REGEXWrapper.matches("~.+", rEString14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString35.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString28.makeZeroOrOne(rEString41);
        rEString43.string = "";
        st1920.automaton.REString rEString46 = rEString4.makeOneOrMore(rEString43);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString62 = rEString48.makeRange(rEString58, 10, 0);
        st1920.automaton.REString rEString63 = rEString43.makeAlpha(rEString58);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString65.makeAnyChar(rEString70);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString73.makeExclude(rEString75);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString78.makeAnyChar(rEString83);
        st1920.automaton.REString rEString85 = rEString75.makeExclude(rEString78);
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString75.makeAlpha(rEString87);
        st1920.automaton.REString rEString89 = rEString70.makeAny(rEString88);
        st1920.automaton.REString rEString90 = rEString58.makeGroup(rEString89);
        boolean boolean91 = st1920.automaton.REGEXWrapper.matches("~..", rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("~..1");
        java.lang.String str2 = rEString1.string;
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString21 = rEString7.makeRange(rEString17, 10, 0);
        st1920.automaton.REString rEString24 = rEString5.makeRep(rEString7, (int) 'a', (int) '4');
        boolean boolean25 = st1920.automaton.REGEXWrapper.matches("*", rEString24);
        st1920.automaton.REString rEString26 = rEString1.makeExclude(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString34 = rEString28.makeAnyChar(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString42 = rEString28.makeRange(rEString38, 10, 0);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString46.makeExclude(rEString49);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString64 = rEString58.makeAnyChar(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString70 = rEString63.makeAnyChar(rEString69);
        st1920.automaton.REString rEString71 = rEString56.makeZeroOrOne(rEString69);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString79 = rEString73.makeAnyChar(rEString78);
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString85 = rEString78.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString56.makeOneOrMore(rEString85);
        st1920.automaton.REString rEString87 = rEString38.makeNothing(rEString56);
        st1920.automaton.REString rEString88 = rEString24.makeExclude(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "~..1" + "'", str2.equals("~..1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString15 = rEString1.makeRange(rEString11, 10, 0);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString29 = rEString23.makeAnyChar(rEString28);
        st1920.automaton.REString rEString30 = rEString20.makeExclude(rEString23);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString37.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString34.makeExclude(rEString37);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString52 = rEString46.makeAnyChar(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString51.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString44.makeZeroOrOne(rEString57);
        rEString59.string = "";
        st1920.automaton.REString rEString62 = rEString20.makeOneOrMore(rEString59);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString69.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString66.makeExclude(rEString69);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString78.makeAnyChar(rEString83);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString90 = rEString83.makeAnyChar(rEString89);
        st1920.automaton.REString rEString91 = rEString76.makeZeroOrOne(rEString89);
        st1920.automaton.REString rEString92 = rEString59.makeOneOrMore(rEString91);
        boolean boolean93 = st1920.automaton.REGEXWrapper.matches("+", rEString59);
        st1920.automaton.REString rEString96 = rEString1.makeRange(rEString59, (int) (byte) 10, (int) (byte) 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        java.lang.String str5 = rEString3.string;
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString9.makeExclude(rEString12);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString9.makeAlpha(rEString21);
        st1920.automaton.REString rEString23 = rEString3.makeExclude(rEString21);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString27.makeExclude(rEString30);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString41.makeExclude(rEString44);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString41.makeAlpha(rEString53);
        st1920.automaton.REString rEString55 = rEString37.makeAlpha(rEString53);
        st1920.automaton.REString rEString56 = rEString23.makeNothing(rEString37);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString73 = rEString59.makeRange(rEString69, 10, 0);
        boolean boolean74 = st1920.automaton.REGEXWrapper.matches("~.", rEString69);
        st1920.automaton.REString rEString75 = rEString56.makeAlpha(rEString69);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString83 = rEString77.makeAnyChar(rEString82);
        st1920.automaton.REString rEString86 = rEString69.makeRep(rEString77, 100, 0);
        java.lang.Class<?> wildcardClass87 = rEString86.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString15 = rEString9.makeAnyChar(rEString14);
        st1920.automaton.REString rEString16 = rEString6.makeExclude(rEString9);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString24 = rEString18.makeAnyChar(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString23.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString16.makeZeroOrOne(rEString29);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString38.makeAnyChar(rEString43);
        st1920.automaton.REString rEString45 = rEString35.makeExclude(rEString38);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString35.makeAlpha(rEString47);
        st1920.automaton.REString rEString49 = rEString16.makeClass(rEString35);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString56.makeAnyChar(rEString61);
        st1920.automaton.REString rEString63 = rEString53.makeExclude(rEString56);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString65.makeAnyChar(rEString70);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString73.makeExclude(rEString75);
        st1920.automaton.REString rEString77 = rEString70.makeAnyChar(rEString76);
        st1920.automaton.REString rEString78 = rEString53.makeOneOrMore(rEString76);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        rEString80.string = "hi!";
        st1920.automaton.REString rEString86 = rEString35.makeAnd(rEString53, rEString80);
        boolean boolean87 = st1920.automaton.REGEXWrapper.matches("~", rEString80);
        boolean boolean88 = st1920.automaton.REGEXWrapper.matches("", rEString80);
        boolean boolean89 = st1920.automaton.REGEXWrapper.matches("[~..]<0-1>", rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString12.makeAlpha(rEString24);
        st1920.automaton.REString rEString26 = rEString7.makeAny(rEString25);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString30.makeExclude(rEString33);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString47.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString40.makeZeroOrOne(rEString53);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString59.makeExclude(rEString62);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString76.makeAnyChar(rEString81);
        st1920.automaton.REString rEString83 = rEString73.makeExclude(rEString76);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = rEString73.makeAlpha(rEString85);
        st1920.automaton.REString rEString87 = rEString69.makeAlpha(rEString85);
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString92 = rEString89.makeExclude(rEString91);
        st1920.automaton.REString rEString93 = rEString55.makeOr(rEString69, rEString92);
        st1920.automaton.REString rEString94 = rEString26.makeAnyChar(rEString93);
        java.lang.String str95 = rEString26.string;
        boolean boolean96 = st1920.automaton.REGEXWrapper.matches("~?", rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "a@" + "'", str95.equals("a@"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString47.makeAlpha(rEString59);
        st1920.automaton.REString rEString61 = rEString43.makeAlpha(rEString59);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString65.makeExclude(rEString68);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString83 = rEString77.makeAnyChar(rEString82);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString82.makeAnyChar(rEString88);
        st1920.automaton.REString rEString90 = rEString75.makeZeroOrOne(rEString88);
        st1920.automaton.REString rEString91 = rEString43.makeExclude(rEString90);
        st1920.automaton.REString rEString94 = rEString29.makeRange(rEString91, (int) (byte) 10, (-1));
        boolean boolean95 = st1920.automaton.REGEXWrapper.matches("~.", rEString29);
        java.lang.String str96 = rEString29.string;
        java.lang.String str97 = rEString29.string;
        java.lang.Class<?> wildcardClass98 = rEString29.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str96 + "' != '" + "~?" + "'", str96.equals("~?"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str97 + "' != '" + "~?" + "'", str97.equals("~?"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString4.makeOneOrMore(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString31.makeAnyChar(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString55.makeAnyChar(rEString60);
        st1920.automaton.REString rEString62 = rEString52.makeExclude(rEString55);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString52.makeAlpha(rEString64);
        st1920.automaton.REString rEString66 = rEString47.makeAny(rEString65);
        st1920.automaton.REString rEString67 = rEString31.makeClass(rEString65);
        st1920.automaton.REString rEString68 = rEString4.makeOneOrMore(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString81 = rEString75.makeAnyChar(rEString80);
        st1920.automaton.REString rEString82 = rEString72.makeExclude(rEString75);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString90 = rEString84.makeAnyChar(rEString89);
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString95 = rEString92.makeExclude(rEString94);
        st1920.automaton.REString rEString96 = rEString89.makeAnyChar(rEString95);
        st1920.automaton.REString rEString97 = rEString82.makeZeroOrOne(rEString95);
        st1920.automaton.REString rEString98 = rEString4.makeAnyChar(rEString97);
        boolean boolean99 = st1920.automaton.REGEXWrapper.matches("[a]", rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString7.makeAnyChar(rEString13);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        java.lang.String str20 = rEString18.string;
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString34 = rEString24.makeExclude(rEString27);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString24.makeAlpha(rEString36);
        st1920.automaton.REString rEString38 = rEString18.makeExclude(rEString36);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString45.makeAnyChar(rEString50);
        st1920.automaton.REString rEString52 = rEString42.makeExclude(rEString45);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString56.makeExclude(rEString59);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString56.makeAlpha(rEString68);
        st1920.automaton.REString rEString70 = rEString52.makeAlpha(rEString68);
        st1920.automaton.REString rEString71 = rEString38.makeNothing(rEString52);
        st1920.automaton.REString rEString72 = rEString7.makeAlpha(rEString38);
        boolean boolean73 = st1920.automaton.REGEXWrapper.matches("", rEString72);
        st1920.automaton.REString rEString74 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString75 = rEString72.makeClass(rEString74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString3.makeAlpha(rEString15);
        rEString16.string = "";
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString16.makeZeroOrMore(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString46.makeExclude(rEString49);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString46.makeAlpha(rEString58);
        st1920.automaton.REString rEString60 = rEString42.makeAlpha(rEString58);
        boolean boolean61 = st1920.automaton.REGEXWrapper.matches("~.+", rEString58);
        st1920.automaton.REString rEString62 = rEString16.makeAlpha(rEString58);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString69.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString66.makeExclude(rEString69);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString83.makeAnyChar(rEString88);
        st1920.automaton.REString rEString90 = rEString80.makeExclude(rEString83);
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = rEString80.makeAlpha(rEString92);
        st1920.automaton.REString rEString94 = rEString76.makeAlpha(rEString92);
        st1920.automaton.REString rEString95 = rEString16.makeClass(rEString92);
        java.lang.Class<?> wildcardClass96 = rEString16.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString47.makeAlpha(rEString59);
        st1920.automaton.REString rEString61 = rEString43.makeAlpha(rEString59);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString29.makeOr(rEString43, rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString74.makeAnyChar(rEString79);
        st1920.automaton.REString rEString81 = rEString71.makeExclude(rEString74);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString83.makeAnyChar(rEString88);
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = rEString91.makeExclude(rEString93);
        st1920.automaton.REString rEString95 = rEString88.makeAnyChar(rEString94);
        st1920.automaton.REString rEString96 = rEString81.makeZeroOrOne(rEString94);
        st1920.automaton.REString rEString97 = rEString29.makeExcludeClass(rEString96);
        boolean boolean98 = st1920.automaton.REGEXWrapper.matches("hi!", rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString15 = rEString9.makeAnyChar(rEString14);
        st1920.automaton.REString rEString16 = rEString6.makeExclude(rEString9);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString24 = rEString18.makeAnyChar(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString23.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString6.makeOneOrMore(rEString29);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString46 = rEString40.makeAnyChar(rEString45);
        st1920.automaton.REString rEString47 = rEString37.makeExclude(rEString40);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString54.makeAnyChar(rEString59);
        st1920.automaton.REString rEString61 = rEString51.makeExclude(rEString54);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString51.makeAlpha(rEString63);
        st1920.automaton.REString rEString65 = rEString47.makeAlpha(rEString63);
        boolean boolean66 = st1920.automaton.REGEXWrapper.matches("~.+", rEString63);
        boolean boolean67 = st1920.automaton.REGEXWrapper.matches("hi!", rEString63);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString74.makeAnyChar(rEString79);
        st1920.automaton.REString rEString81 = rEString71.makeExclude(rEString74);
        st1920.automaton.REString rEString82 = rEString63.makeAnyChar(rEString74);
        st1920.automaton.REString rEString83 = rEString31.makeNothing(rEString82);
        st1920.automaton.REString rEString84 = rEString2.makeExcludeClass(rEString82);
        boolean boolean85 = st1920.automaton.REGEXWrapper.matches("a@", rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString4.makeOneOrMore(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString31.makeAnyChar(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString55.makeAnyChar(rEString60);
        st1920.automaton.REString rEString62 = rEString52.makeExclude(rEString55);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString52.makeAlpha(rEString64);
        st1920.automaton.REString rEString66 = rEString47.makeAny(rEString65);
        st1920.automaton.REString rEString67 = rEString31.makeClass(rEString65);
        st1920.automaton.REString rEString68 = rEString4.makeOneOrMore(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString81 = rEString75.makeAnyChar(rEString80);
        st1920.automaton.REString rEString82 = rEString72.makeExclude(rEString75);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString90 = rEString84.makeAnyChar(rEString89);
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString95 = rEString92.makeExclude(rEString94);
        st1920.automaton.REString rEString96 = rEString89.makeAnyChar(rEString95);
        st1920.automaton.REString rEString97 = rEString82.makeZeroOrOne(rEString95);
        st1920.automaton.REString rEString98 = rEString4.makeAnyChar(rEString97);
        boolean boolean99 = st1920.automaton.REGEXWrapper.matches("~~.", rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString3.makeAlpha(rEString15);
        rEString16.string = "";
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString16.makeZeroOrMore(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString32.makeAnyChar(rEString37);
        st1920.automaton.REString rEString39 = rEString30.makeAnyChar(rEString38);
        boolean boolean40 = st1920.automaton.REGEXWrapper.matches("~.+", rEString30);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        java.lang.String str46 = rEString44.string;
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString50.makeAlpha(rEString62);
        st1920.automaton.REString rEString64 = rEString44.makeExclude(rEString62);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString73.makeExclude(rEString75);
        st1920.automaton.REString rEString77 = rEString71.makeAnyChar(rEString76);
        st1920.automaton.REString rEString78 = rEString68.makeExclude(rEString71);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = rEString87.makeExclude(rEString89);
        st1920.automaton.REString rEString91 = rEString85.makeAnyChar(rEString90);
        st1920.automaton.REString rEString92 = rEString82.makeExclude(rEString85);
        st1920.automaton.REString rEString94 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString95 = rEString82.makeAlpha(rEString94);
        st1920.automaton.REString rEString96 = rEString78.makeAlpha(rEString94);
        st1920.automaton.REString rEString97 = rEString64.makeNothing(rEString78);
        st1920.automaton.REString rEString98 = rEString30.makeClass(rEString97);
        st1920.automaton.REString rEString99 = rEString27.makeExclude(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "" + "'", str46.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = rEString5.makeExclude(rEString7);
        st1920.automaton.REString rEString9 = rEString3.makeAnyChar(rEString8);
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString17 = rEString3.makeRange(rEString13, 10, 0);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString21.makeExclude(rEString24);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString38.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString31.makeZeroOrOne(rEString44);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString53.makeAnyChar(rEString59);
        st1920.automaton.REString rEString61 = rEString31.makeOneOrMore(rEString60);
        st1920.automaton.REString rEString62 = rEString13.makeNothing(rEString31);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString80 = rEString66.makeRange(rEString76, 10, 0);
        st1920.automaton.REString rEString83 = rEString64.makeRep(rEString66, (int) 'a', (int) '4');
        st1920.automaton.REString rEString84 = rEString13.makeZeroOrOne(rEString66);
        boolean boolean85 = st1920.automaton.REGEXWrapper.matches("~.", rEString84);
        boolean boolean86 = st1920.automaton.REGEXWrapper.matches("", rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString6.makeAnyChar(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString17.makeExclude(rEString20);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString35 = rEString29.makeAnyChar(rEString34);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString34.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString27.makeZeroOrOne(rEString40);
        st1920.automaton.REString rEString43 = rEString12.makeZeroOrMore(rEString42);
        rEString43.string = "~";
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString64 = rEString50.makeRange(rEString60, 10, 0);
        st1920.automaton.REString rEString67 = rEString48.makeRep(rEString50, (int) 'a', (int) '4');
        boolean boolean68 = st1920.automaton.REGEXWrapper.matches("*", rEString67);
        st1920.automaton.REString rEString69 = rEString43.makeExcludeClass(rEString67);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString76.makeAnyChar(rEString81);
        st1920.automaton.REString rEString83 = rEString73.makeExclude(rEString76);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = rEString73.makeAlpha(rEString85);
        st1920.automaton.REString rEString87 = rEString69.makeAnyChar(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("[^~?]");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString11 = rEString5.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString13.makeAnyChar(rEString21);
        java.lang.String str23 = rEString21.string;
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString27.makeExclude(rEString30);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString44.makeAnyChar(rEString50);
        st1920.automaton.REString rEString52 = rEString37.makeZeroOrOne(rEString50);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString54.makeAnyChar(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString59.makeAnyChar(rEString65);
        st1920.automaton.REString rEString67 = rEString37.makeOneOrMore(rEString66);
        st1920.automaton.REString rEString68 = rEString21.makeClass(rEString67);
        st1920.automaton.REString rEString69 = rEString5.makeOneOrMore(rEString21);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString76.makeAnyChar(rEString81);
        st1920.automaton.REString rEString83 = rEString73.makeExclude(rEString76);
        st1920.automaton.REString rEString84 = rEString69.makeExcludeClass(rEString76);
        boolean boolean85 = st1920.automaton.REGEXWrapper.matches("", rEString76);
        st1920.automaton.REString rEString86 = rEString2.makeGroup(rEString76);
        boolean boolean87 = st1920.automaton.REGEXWrapper.matches("<100-0>", rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "~." + "'", str23.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString16 = rEString10.makeAnyChar(rEString15);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString15.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString29.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString22.makeAny(rEString35);
        st1920.automaton.REString rEString40 = rEString8.makeRep(rEString22, 0, (-1));
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString47.makeAnyChar(rEString52);
        st1920.automaton.REString rEString54 = rEString44.makeExclude(rEString47);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString44.makeAlpha(rEString56);
        rEString57.string = "";
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString68 = rEString57.makeZeroOrMore(rEString67);
        st1920.automaton.REString rEString69 = rEString40.makeAlpha(rEString68);
        boolean boolean70 = st1920.automaton.REGEXWrapper.matches("+", rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString4.makeAlpha(rEString16);
        rEString17.string = "";
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString17.makeZeroOrMore(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString47.makeAlpha(rEString59);
        st1920.automaton.REString rEString61 = rEString43.makeAlpha(rEString59);
        boolean boolean62 = st1920.automaton.REGEXWrapper.matches("~.+", rEString59);
        st1920.automaton.REString rEString63 = rEString17.makeAlpha(rEString59);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = rEString72.makeExclude(rEString74);
        st1920.automaton.REString rEString76 = rEString70.makeAnyChar(rEString75);
        st1920.automaton.REString rEString77 = rEString67.makeExclude(rEString70);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString90 = rEString84.makeAnyChar(rEString89);
        st1920.automaton.REString rEString91 = rEString81.makeExclude(rEString84);
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = rEString81.makeAlpha(rEString93);
        st1920.automaton.REString rEString95 = rEString77.makeAlpha(rEString93);
        st1920.automaton.REString rEString96 = rEString17.makeClass(rEString93);
        boolean boolean97 = st1920.automaton.REGEXWrapper.matches("~~.", rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        java.lang.String str5 = rEString3.string;
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString9.makeExclude(rEString12);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString9.makeAlpha(rEString21);
        st1920.automaton.REString rEString23 = rEString3.makeExclude(rEString21);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString27.makeExclude(rEString30);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString41.makeExclude(rEString44);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString41.makeAlpha(rEString53);
        st1920.automaton.REString rEString55 = rEString37.makeAlpha(rEString53);
        st1920.automaton.REString rEString56 = rEString23.makeNothing(rEString37);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString73 = rEString59.makeRange(rEString69, 10, 0);
        boolean boolean74 = st1920.automaton.REGEXWrapper.matches("~.", rEString69);
        st1920.automaton.REString rEString75 = rEString56.makeAlpha(rEString69);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString83 = rEString77.makeAnyChar(rEString82);
        st1920.automaton.REString rEString86 = rEString69.makeRep(rEString77, 100, 0);
        java.lang.String str87 = rEString69.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "" + "'", str87.equals(""));
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString23 = rEString13.makeExclude(rEString16);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString27.makeExclude(rEString30);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString27.makeAlpha(rEString39);
        st1920.automaton.REString rEString41 = rEString23.makeAlpha(rEString39);
        boolean boolean42 = st1920.automaton.REGEXWrapper.matches("~.+", rEString39);
        boolean boolean43 = st1920.automaton.REGEXWrapper.matches("hi!", rEString39);
        st1920.automaton.REString rEString44 = rEString1.makeOneOrMore(rEString39);
        java.lang.String str45 = rEString44.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "+" + "'", str45.equals("+"));
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString8.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString5.makeExclude(rEString8);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString22.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString19.makeExclude(rEString22);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString19.makeAlpha(rEString31);
        st1920.automaton.REString rEString33 = rEString15.makeAlpha(rEString31);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString46 = rEString40.makeAnyChar(rEString45);
        st1920.automaton.REString rEString47 = rEString37.makeExclude(rEString40);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString37.makeAlpha(rEString49);
        st1920.automaton.REString rEString53 = rEString15.makeRange(rEString37, (int) (byte) 1, (int) (byte) 100);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString55.makeAnyChar(rEString60);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString65.makeExclude(rEString68);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString65.makeAlpha(rEString77);
        st1920.automaton.REString rEString79 = rEString60.makeAny(rEString78);
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString91 = rEString88.makeExclude(rEString90);
        st1920.automaton.REString rEString92 = rEString86.makeAnyChar(rEString91);
        st1920.automaton.REString rEString93 = rEString83.makeExclude(rEString86);
        st1920.automaton.REString rEString94 = rEString79.makeNum(rEString93);
        st1920.automaton.REString rEString95 = rEString37.makeZeroOrMore(rEString79);
        boolean boolean96 = st1920.automaton.REGEXWrapper.matches("#", rEString79);
        boolean boolean97 = st1920.automaton.REGEXWrapper.matches("hi!", rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString8.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString5.makeExclude(rEString8);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString22.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString19.makeExclude(rEString22);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString19.makeAlpha(rEString31);
        st1920.automaton.REString rEString33 = rEString15.makeAlpha(rEString31);
        boolean boolean34 = st1920.automaton.REGEXWrapper.matches("~.+", rEString31);
        boolean boolean35 = st1920.automaton.REGEXWrapper.matches("hi!", rEString31);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString46 = rEString40.makeAnyChar(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString54 = rEString40.makeRange(rEString50, 10, 0);
        st1920.automaton.REString rEString57 = rEString38.makeRep(rEString40, (int) 'a', (int) '4');
        boolean boolean58 = st1920.automaton.REGEXWrapper.matches("*", rEString57);
        st1920.automaton.REString rEString59 = rEString31.makeZeroOrMore(rEString57);
        st1920.automaton.REString rEString60 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString61 = rEString57.makeExcludeClass(rEString60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        java.lang.String str12 = rEString10.string;
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString23 = rEString14.makeAnyChar(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString27.makeExclude(rEString30);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString44.makeAnyChar(rEString50);
        st1920.automaton.REString rEString52 = rEString37.makeZeroOrOne(rEString50);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString56.makeExclude(rEString59);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString79 = rEString73.makeAnyChar(rEString78);
        st1920.automaton.REString rEString80 = rEString70.makeExclude(rEString73);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = rEString84.makeExclude(rEString86);
        st1920.automaton.REString rEString88 = rEString82.makeAnyChar(rEString87);
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = rEString90.makeExclude(rEString92);
        st1920.automaton.REString rEString94 = rEString87.makeAnyChar(rEString93);
        st1920.automaton.REString rEString95 = rEString70.makeOneOrMore(rEString93);
        st1920.automaton.REString rEString96 = rEString50.makeOr(rEString66, rEString70);
        st1920.automaton.REString rEString97 = rEString22.makeZeroOrOne(rEString96);
        st1920.automaton.REString rEString98 = rEString10.makeZeroOrOne(rEString22);
        boolean boolean99 = st1920.automaton.REGEXWrapper.matches("~.", rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "~." + "'", str12.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString23 = rEString13.makeExclude(rEString16);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString31 = rEString25.makeAnyChar(rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString30.makeAnyChar(rEString36);
        st1920.automaton.REString rEString38 = rEString23.makeZeroOrOne(rEString36);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString45.makeAnyChar(rEString50);
        st1920.automaton.REString rEString52 = rEString42.makeExclude(rEString45);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString42.makeAlpha(rEString54);
        st1920.automaton.REString rEString56 = rEString23.makeClass(rEString42);
        st1920.automaton.REString rEString59 = rEString8.makeRep(rEString23, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString60 = rEString4.makeZeroOrMore(rEString8);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString63 = rEString8.makeGroup(rEString62);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString80 = rEString66.makeRange(rEString76, 10, 0);
        boolean boolean81 = st1920.automaton.REGEXWrapper.matches("~.", rEString76);
        st1920.automaton.REString rEString82 = rEString8.makeGroup(rEString76);
        rEString8.string = "+";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString16 = rEString2.makeRange(rEString12, 10, 0);
        rEString12.string = "~.";
        java.lang.String str19 = rEString12.string;
        boolean boolean20 = st1920.automaton.REGEXWrapper.matches("~..", rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "~." + "'", str19.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString23.makeExclude(rEString26);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString23.makeAlpha(rEString35);
        st1920.automaton.REString rEString37 = rEString18.makeAny(rEString36);
        st1920.automaton.REString rEString38 = rEString2.makeClass(rEString36);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString64.makeAnyChar(rEString70);
        st1920.automaton.REString rEString72 = rEString57.makeZeroOrOne(rEString70);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString85 = rEString79.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString76.makeExclude(rEString79);
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString76.makeAlpha(rEString88);
        st1920.automaton.REString rEString90 = rEString57.makeClass(rEString76);
        st1920.automaton.REString rEString93 = rEString42.makeRep(rEString57, (int) 'a', (int) (short) 1);
        rEString93.string = "a@";
        st1920.automaton.REString rEString96 = rEString36.makeZeroOrOne(rEString93);
        rEString93.string = "~|?";
        boolean boolean99 = st1920.automaton.REGEXWrapper.matches("~.+", rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString29.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString22.makeZeroOrOne(rEString35);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString41.makeExclude(rEString44);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString58.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString51.makeZeroOrOne(rEString64);
        st1920.automaton.REString rEString67 = rEString35.makeExcludeClass(rEString66);
        st1920.automaton.REString rEString68 = rEString8.makeOneOrMore(rEString67);
        java.lang.String str69 = rEString67.string;
        rEString67.string = "~";
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean72 = st1920.automaton.REGEXWrapper.matches("()", rEString67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "[^~?]" + "'", str69.equals("[^~?]"));
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString6.makeAnyChar(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString17.makeExclude(rEString20);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString35 = rEString29.makeAnyChar(rEString34);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString34.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString27.makeZeroOrOne(rEString40);
        st1920.automaton.REString rEString43 = rEString12.makeZeroOrMore(rEString42);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString52 = rEString46.makeAnyChar(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString60 = rEString46.makeRange(rEString56, 10, 0);
        boolean boolean61 = st1920.automaton.REGEXWrapper.matches("~.", rEString56);
        st1920.automaton.REString rEString62 = rEString12.makeZeroOrMore(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString45.makeAnyChar(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString50.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString43.makeZeroOrOne(rEString56);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString65.makeAnyChar(rEString71);
        st1920.automaton.REString rEString73 = rEString43.makeOneOrMore(rEString72);
        java.lang.String str74 = rEString73.string;
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString78.makeAnyChar(rEString83);
        st1920.automaton.REString rEString85 = rEString76.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString73.makeGroup(rEString85);
        st1920.automaton.REString rEString87 = rEString27.makeNum(rEString85);
        java.lang.String str88 = rEString87.string;
        boolean boolean89 = st1920.automaton.REGEXWrapper.matches("~.<52-100>", rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "~.+" + "'", str74.equals("~.+"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "~..1" + "'", str88.equals("~..1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString20.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString13.makeZeroOrOne(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString35.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString13.makeOneOrMore(rEString42);
        java.lang.String str44 = rEString43.string;
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString62 = rEString48.makeRange(rEString58, 10, 0);
        st1920.automaton.REString rEString65 = rEString46.makeRep(rEString48, (int) 'a', (int) '4');
        st1920.automaton.REString rEString66 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString73.makeExclude(rEString75);
        st1920.automaton.REString rEString77 = rEString71.makeAnyChar(rEString76);
        st1920.automaton.REString rEString78 = rEString69.makeAnyChar(rEString77);
        boolean boolean79 = st1920.automaton.REGEXWrapper.matches("~.+", rEString69);
        java.lang.String str80 = rEString69.string;
        st1920.automaton.REString rEString81 = rEString43.makeOneOrMore(rEString69);
        java.lang.String str82 = rEString43.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "~.+" + "'", str44.equals("~.+"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "~.+" + "'", str82.equals("~.+"));
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~.+");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString15 = rEString9.makeAnyChar(rEString14);
        st1920.automaton.REString rEString16 = rEString6.makeExclude(rEString9);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString24 = rEString18.makeAnyChar(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString23.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString16.makeZeroOrOne(rEString29);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString38.makeAnyChar(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString52.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString49.makeExclude(rEString52);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString73 = rEString66.makeAnyChar(rEString72);
        st1920.automaton.REString rEString74 = rEString59.makeZeroOrOne(rEString72);
        st1920.automaton.REString rEString75 = rEString44.makeZeroOrMore(rEString74);
        st1920.automaton.REString rEString76 = rEString16.makeZeroOrOne(rEString75);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString78.makeAnyChar(rEString83);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString90 = rEString83.makeAnyChar(rEString89);
        st1920.automaton.REString rEString91 = rEString75.makeExcludeClass(rEString83);
        st1920.automaton.REString rEString92 = rEString2.makeZeroOrOne(rEString83);
        boolean boolean93 = st1920.automaton.REGEXWrapper.matches("~.", rEString92);
        java.lang.Class<?> wildcardClass94 = rEString92.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString16 = rEString10.makeAnyChar(rEString15);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString15.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString29.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString22.makeAny(rEString35);
        st1920.automaton.REString rEString40 = rEString8.makeRep(rEString22, 0, (-1));
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString47.makeAnyChar(rEString52);
        st1920.automaton.REString rEString54 = rEString44.makeExclude(rEString47);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString56.makeAnyChar(rEString61);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString61.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString54.makeZeroOrOne(rEString67);
        st1920.automaton.REString rEString72 = rEString40.makeRange(rEString69, (int) '#', (int) '#');
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString40.makeNum(rEString74);
        boolean boolean76 = st1920.automaton.REGEXWrapper.matches("a@", rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString14.makeClass(rEString33);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString49.makeAnyChar(rEString57);
        st1920.automaton.REString rEString61 = rEString33.makeRep(rEString49, (int) ' ', (int) (short) 10);
        rEString33.string = "+";
        boolean boolean64 = st1920.automaton.REGEXWrapper.matches("~?", rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString10.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString2.makeClass(rEString19);
        boolean boolean21 = st1920.automaton.REGEXWrapper.matches("*", rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        java.lang.String str27 = rEString25.string;
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString40 = rEString34.makeAnyChar(rEString39);
        st1920.automaton.REString rEString41 = rEString31.makeExclude(rEString34);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString31.makeAlpha(rEString43);
        st1920.automaton.REString rEString45 = rEString25.makeExclude(rEString43);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString52.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString49.makeExclude(rEString52);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString73 = rEString63.makeExclude(rEString66);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString63.makeAlpha(rEString75);
        st1920.automaton.REString rEString77 = rEString59.makeAlpha(rEString75);
        st1920.automaton.REString rEString78 = rEString45.makeNothing(rEString59);
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = rEString83.makeExclude(rEString85);
        st1920.automaton.REString rEString87 = rEString81.makeAnyChar(rEString86);
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString92 = rEString89.makeExclude(rEString91);
        st1920.automaton.REString rEString95 = rEString81.makeRange(rEString91, 10, 0);
        boolean boolean96 = st1920.automaton.REGEXWrapper.matches("~.", rEString91);
        st1920.automaton.REString rEString97 = rEString78.makeAlpha(rEString91);
        st1920.automaton.REString rEString98 = rEString20.makeNum(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("[^~?]");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString20 = rEString14.makeAnyChar(rEString19);
        st1920.automaton.REString rEString21 = rEString12.makeAnyChar(rEString20);
        java.lang.String str22 = rEString20.string;
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString35 = rEString29.makeAnyChar(rEString34);
        st1920.automaton.REString rEString36 = rEString26.makeExclude(rEString29);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString38.makeAnyChar(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString43.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString36.makeZeroOrOne(rEString49);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString58.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString36.makeOneOrMore(rEString65);
        st1920.automaton.REString rEString67 = rEString20.makeClass(rEString66);
        st1920.automaton.REString rEString68 = rEString4.makeOneOrMore(rEString20);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString81 = rEString75.makeAnyChar(rEString80);
        st1920.automaton.REString rEString82 = rEString72.makeExclude(rEString75);
        st1920.automaton.REString rEString83 = rEString68.makeExcludeClass(rEString75);
        boolean boolean84 = st1920.automaton.REGEXWrapper.matches("", rEString75);
        st1920.automaton.REString rEString85 = rEString1.makeGroup(rEString75);
        java.lang.String str86 = rEString85.string;
        rEString85.string = "#";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "~." + "'", str22.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "()" + "'", str86.equals("()"));
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString7.makeAnyChar(rEString13);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString35.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString28.makeZeroOrOne(rEString41);
        st1920.automaton.REString rEString44 = rEString13.makeZeroOrMore(rEString43);
        boolean boolean45 = st1920.automaton.REGEXWrapper.matches("~..1", rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString16 = rEString2.makeRange(rEString12, 10, 0);
        boolean boolean17 = st1920.automaton.REGEXWrapper.matches("", rEString2);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString19.makeAnyChar(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        java.lang.String str34 = rEString32.string;
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString47 = rEString41.makeAnyChar(rEString46);
        st1920.automaton.REString rEString48 = rEString38.makeExclude(rEString41);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString38.makeAlpha(rEString50);
        st1920.automaton.REString rEString52 = rEString32.makeExclude(rEString50);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString54.makeAnyChar(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString73 = rEString67.makeAnyChar(rEString72);
        st1920.automaton.REString rEString74 = rEString64.makeExclude(rEString67);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString64.makeAlpha(rEString76);
        st1920.automaton.REString rEString78 = rEString59.makeAny(rEString77);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = rEString87.makeExclude(rEString89);
        st1920.automaton.REString rEString91 = rEString85.makeAnyChar(rEString90);
        st1920.automaton.REString rEString92 = rEString82.makeExclude(rEString85);
        st1920.automaton.REString rEString93 = rEString52.makeAnd(rEString59, rEString85);
        st1920.automaton.REString rEString94 = rEString27.makeExclude(rEString93);
        st1920.automaton.REString rEString97 = rEString2.makeRange(rEString94, 10, (int) '4');
        java.lang.String str98 = rEString2.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str98 + "' != '" + "" + "'", str98.equals(""));
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString23.makeExclude(rEString26);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString23.makeAlpha(rEString35);
        st1920.automaton.REString rEString37 = rEString18.makeAny(rEString36);
        st1920.automaton.REString rEString38 = rEString2.makeClass(rEString36);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString46 = rEString40.makeAnyChar(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString54 = rEString40.makeRange(rEString50, 10, 0);
        st1920.automaton.REString rEString55 = rEString38.makeAny(rEString50);
        boolean boolean56 = st1920.automaton.REGEXWrapper.matches("", rEString38);
        java.lang.Class<?> wildcardClass57 = rEString38.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        java.lang.String str12 = rEString10.string;
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString25 = rEString19.makeAnyChar(rEString24);
        st1920.automaton.REString rEString26 = rEString16.makeExclude(rEString19);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString34 = rEString28.makeAnyChar(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString40 = rEString33.makeAnyChar(rEString39);
        st1920.automaton.REString rEString41 = rEString26.makeZeroOrOne(rEString39);
        st1920.automaton.REString rEString42 = rEString10.makeGroup(rEString39);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString46.makeExclude(rEString49);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString64 = rEString58.makeAnyChar(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString70 = rEString63.makeAnyChar(rEString69);
        st1920.automaton.REString rEString71 = rEString56.makeZeroOrOne(rEString69);
        java.lang.String str72 = rEString56.string;
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("~&#");
        st1920.automaton.REString rEString77 = rEString56.makeRange(rEString74, 1, (int) '4');
        java.lang.String str78 = rEString56.string;
        st1920.automaton.REString rEString79 = rEString10.makeNum(rEString56);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = st1920.automaton.REGEXWrapper.matches("()", rEString56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "~." + "'", str12.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "~" + "'", str72.equals("~"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "~" + "'", str78.equals("~"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString6.makeAnyChar(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString20.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString13.makeAny(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString49.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString42.makeZeroOrOne(rEString55);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString64.makeAnyChar(rEString70);
        st1920.automaton.REString rEString72 = rEString42.makeOneOrMore(rEString71);
        st1920.automaton.REString rEString73 = rEString13.makeExcludeClass(rEString42);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString78.makeAnyChar(rEString83);
        st1920.automaton.REString rEString85 = rEString76.makeAnyChar(rEString84);
        boolean boolean86 = st1920.automaton.REGEXWrapper.matches("~.+", rEString76);
        java.lang.String str87 = rEString76.string;
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("a@");
        st1920.automaton.REString rEString90 = rEString73.makeOr(rEString76, rEString89);
        java.lang.Class<?> wildcardClass91 = rEString89.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "" + "'", str87.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString14.makeClass(rEString33);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString54.makeAnyChar(rEString59);
        st1920.automaton.REString rEString61 = rEString51.makeExclude(rEString54);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString69 = rEString63.makeAnyChar(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString68.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString51.makeOneOrMore(rEString74);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        rEString78.string = "hi!";
        st1920.automaton.REString rEString84 = rEString33.makeAnd(rEString51, rEString78);
        boolean boolean85 = st1920.automaton.REGEXWrapper.matches("~", rEString78);
        rEString78.string = "a@";
        rEString78.string = "#";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        boolean boolean15 = st1920.automaton.REGEXWrapper.matches("+", rEString7);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString32.makeAnyChar(rEString37);
        st1920.automaton.REString rEString39 = rEString29.makeExclude(rEString32);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString47 = rEString41.makeAnyChar(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString46.makeAnyChar(rEString52);
        st1920.automaton.REString rEString54 = rEString39.makeZeroOrOne(rEString52);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString68 = rEString58.makeExclude(rEString61);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString58.makeAlpha(rEString70);
        st1920.automaton.REString rEString72 = rEString39.makeClass(rEString58);
        st1920.automaton.REString rEString75 = rEString24.makeRep(rEString39, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString76 = rEString20.makeZeroOrMore(rEString24);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString78.makeAnyChar(rEString83);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString92 = rEString78.makeRange(rEString88, 10, 0);
        st1920.automaton.REString rEString93 = rEString20.makeNum(rEString88);
        st1920.automaton.REString rEString96 = rEString7.makeRep(rEString88, 0, (int) (short) -1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString47.makeAlpha(rEString59);
        st1920.automaton.REString rEString61 = rEString43.makeAlpha(rEString59);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString65.makeExclude(rEString68);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString83 = rEString77.makeAnyChar(rEString82);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString82.makeAnyChar(rEString88);
        st1920.automaton.REString rEString90 = rEString75.makeZeroOrOne(rEString88);
        st1920.automaton.REString rEString91 = rEString43.makeExclude(rEString90);
        st1920.automaton.REString rEString94 = rEString29.makeRange(rEString91, (int) (byte) 10, (-1));
        boolean boolean95 = st1920.automaton.REGEXWrapper.matches("~.", rEString29);
        st1920.automaton.REString rEString97 = new st1920.automaton.REString("[^~?]");
        st1920.automaton.REString rEString98 = rEString29.makeOneOrMore(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString20.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString3.makeOneOrMore(rEString26);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString37.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString34.makeExclude(rEString37);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString48.makeExclude(rEString51);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString48.makeAlpha(rEString60);
        st1920.automaton.REString rEString62 = rEString44.makeAlpha(rEString60);
        boolean boolean63 = st1920.automaton.REGEXWrapper.matches("~.+", rEString60);
        boolean boolean64 = st1920.automaton.REGEXWrapper.matches("hi!", rEString60);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString73.makeExclude(rEString75);
        st1920.automaton.REString rEString77 = rEString71.makeAnyChar(rEString76);
        st1920.automaton.REString rEString78 = rEString68.makeExclude(rEString71);
        st1920.automaton.REString rEString79 = rEString60.makeAnyChar(rEString71);
        st1920.automaton.REString rEString80 = rEString28.makeNothing(rEString79);
        java.lang.Class<?> wildcardClass81 = rEString28.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString13.makeExclude(rEString15);
        st1920.automaton.REString rEString17 = rEString11.makeAnyChar(rEString16);
        st1920.automaton.REString rEString18 = rEString9.makeAnyChar(rEString17);
        java.lang.String str19 = rEString17.string;
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString23.makeExclude(rEString26);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString47 = rEString40.makeAnyChar(rEString46);
        st1920.automaton.REString rEString48 = rEString33.makeZeroOrOne(rEString46);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString55.makeAnyChar(rEString61);
        st1920.automaton.REString rEString63 = rEString33.makeOneOrMore(rEString62);
        st1920.automaton.REString rEString64 = rEString17.makeClass(rEString63);
        st1920.automaton.REString rEString65 = rEString1.makeOneOrMore(rEString17);
        java.lang.String str66 = rEString17.string;
        java.lang.String str67 = rEString17.string;
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        boolean boolean74 = st1920.automaton.REGEXWrapper.matches("~..#", rEString70);
        st1920.automaton.REString rEString75 = rEString17.makeClass(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "~." + "'", str19.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "~." + "'", str66.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "~." + "'", str67.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString6.makeAnyChar(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString20.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString13.makeAny(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString49.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString42.makeZeroOrOne(rEString55);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString64.makeAnyChar(rEString70);
        st1920.automaton.REString rEString72 = rEString42.makeOneOrMore(rEString71);
        st1920.automaton.REString rEString73 = rEString13.makeExcludeClass(rEString42);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString78.makeAnyChar(rEString83);
        st1920.automaton.REString rEString85 = rEString76.makeAnyChar(rEString84);
        boolean boolean86 = st1920.automaton.REGEXWrapper.matches("~.+", rEString76);
        java.lang.String str87 = rEString76.string;
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("a@");
        st1920.automaton.REString rEString90 = rEString73.makeOr(rEString76, rEString89);
        java.lang.String str91 = rEString73.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "" + "'", str87.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "[^~]" + "'", str91.equals("[^~]"));
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString13.makeExclude(rEString15);
        st1920.automaton.REString rEString17 = rEString11.makeAnyChar(rEString16);
        st1920.automaton.REString rEString18 = rEString8.makeExclude(rEString11);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString25.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString18.makeZeroOrOne(rEString31);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString46 = rEString40.makeAnyChar(rEString45);
        st1920.automaton.REString rEString47 = rEString37.makeExclude(rEString40);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString37.makeAlpha(rEString49);
        st1920.automaton.REString rEString51 = rEString18.makeClass(rEString37);
        st1920.automaton.REString rEString54 = rEString3.makeRep(rEString18, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString57.makeAnyChar(rEString62);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString73 = rEString67.makeAnyChar(rEString72);
        st1920.automaton.REString rEString74 = rEString65.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString57.makeClass(rEString74);
        boolean boolean76 = st1920.automaton.REGEXWrapper.matches("*", rEString75);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("~|?");
        st1920.automaton.REString rEString79 = rEString75.makeNothing(rEString78);
        st1920.automaton.REString rEString82 = rEString3.makeRep(rEString79, (int) ' ', (int) '#');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString6.makeAnyChar(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString17.makeExclude(rEString20);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString35 = rEString29.makeAnyChar(rEString34);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString34.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString27.makeZeroOrOne(rEString40);
        st1920.automaton.REString rEString43 = rEString12.makeZeroOrMore(rEString42);
        rEString43.string = "~";
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString64 = rEString50.makeRange(rEString60, 10, 0);
        st1920.automaton.REString rEString67 = rEString48.makeRep(rEString50, (int) 'a', (int) '4');
        boolean boolean68 = st1920.automaton.REGEXWrapper.matches("*", rEString67);
        st1920.automaton.REString rEString69 = rEString43.makeExcludeClass(rEString67);
        rEString67.string = "a";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("[a]");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("a");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString12.makeAnyChar(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString23.makeExclude(rEString26);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString47 = rEString40.makeAnyChar(rEString46);
        st1920.automaton.REString rEString48 = rEString33.makeZeroOrOne(rEString46);
        st1920.automaton.REString rEString49 = rEString18.makeZeroOrMore(rEString48);
        st1920.automaton.REString rEString50 = rEString5.makeNothing(rEString18);
        st1920.automaton.REString rEString51 = rEString3.makeNum(rEString5);
        boolean boolean52 = st1920.automaton.REGEXWrapper.matches("[a]", rEString5);
        boolean boolean53 = st1920.automaton.REGEXWrapper.matches("~..1", rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString3.makeAlpha(rEString15);
        rEString16.string = "";
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString16.makeZeroOrMore(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString46.makeExclude(rEString49);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString46.makeAlpha(rEString58);
        st1920.automaton.REString rEString60 = rEString42.makeAlpha(rEString58);
        boolean boolean61 = st1920.automaton.REGEXWrapper.matches("~.+", rEString58);
        st1920.automaton.REString rEString62 = rEString16.makeAlpha(rEString58);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString69.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString66.makeExclude(rEString69);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString83.makeAnyChar(rEString88);
        st1920.automaton.REString rEString90 = rEString80.makeExclude(rEString83);
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = rEString80.makeAlpha(rEString92);
        st1920.automaton.REString rEString94 = rEString76.makeAlpha(rEString92);
        st1920.automaton.REString rEString95 = rEString16.makeClass(rEString92);
        st1920.automaton.REString rEString96 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString97 = rEString92.makeNum(rEString96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString4.makeOneOrMore(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString31.makeAnyChar(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString55.makeAnyChar(rEString60);
        st1920.automaton.REString rEString62 = rEString52.makeExclude(rEString55);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString52.makeAlpha(rEString64);
        st1920.automaton.REString rEString66 = rEString47.makeAny(rEString65);
        st1920.automaton.REString rEString67 = rEString31.makeClass(rEString65);
        st1920.automaton.REString rEString68 = rEString4.makeOneOrMore(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString81 = rEString75.makeAnyChar(rEString80);
        st1920.automaton.REString rEString82 = rEString72.makeExclude(rEString75);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString90 = rEString84.makeAnyChar(rEString89);
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString95 = rEString92.makeExclude(rEString94);
        st1920.automaton.REString rEString96 = rEString89.makeAnyChar(rEString95);
        st1920.automaton.REString rEString97 = rEString82.makeZeroOrOne(rEString95);
        st1920.automaton.REString rEString98 = rEString68.makeExcludeClass(rEString97);
        boolean boolean99 = st1920.automaton.REGEXWrapper.matches("[a]", rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        st1920.automaton.REString rEString1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = st1920.automaton.REGEXWrapper.matches("~|~", rEString1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString35.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString28.makeZeroOrOne(rEString41);
        rEString43.string = "";
        st1920.automaton.REString rEString46 = rEString4.makeOneOrMore(rEString43);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString67.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString60.makeZeroOrOne(rEString73);
        st1920.automaton.REString rEString76 = rEString43.makeOneOrMore(rEString75);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString43.makeExclude(rEString78);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = st1920.automaton.REGEXWrapper.matches("[^~?]", rEString82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString15 = rEString1.makeRange(rEString11, 10, 0);
        rEString11.string = "~.";
        java.lang.String str18 = rEString11.string;
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString30.makeExclude(rEString33);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString30.makeAlpha(rEString42);
        st1920.automaton.REString rEString44 = rEString25.makeAny(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString48.makeExclude(rEString51);
        st1920.automaton.REString rEString59 = rEString44.makeNum(rEString58);
        st1920.automaton.REString rEString60 = rEString11.makeExcludeClass(rEString44);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString65.makeExclude(rEString68);
        boolean boolean76 = st1920.automaton.REGEXWrapper.matches("+", rEString68);
        st1920.automaton.REString rEString77 = rEString44.makeOneOrMore(rEString68);
        st1920.automaton.REString rEString78 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString79 = rEString77.makeAnyChar(rEString78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "~." + "'", str18.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString23 = rEString13.makeExclude(rEString16);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString27.makeExclude(rEString30);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString27.makeAlpha(rEString39);
        st1920.automaton.REString rEString41 = rEString23.makeAlpha(rEString39);
        boolean boolean42 = st1920.automaton.REGEXWrapper.matches("~.+", rEString39);
        boolean boolean43 = st1920.automaton.REGEXWrapper.matches("hi!", rEString39);
        st1920.automaton.REString rEString44 = rEString1.makeOneOrMore(rEString39);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString48.makeExclude(rEString51);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString65.makeAnyChar(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString74.makeAnyChar(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString82.makeExclude(rEString84);
        st1920.automaton.REString rEString86 = rEString79.makeAnyChar(rEString85);
        st1920.automaton.REString rEString87 = rEString72.makeAny(rEString85);
        st1920.automaton.REString rEString90 = rEString58.makeRep(rEString72, 0, (int) (short) 0);
        st1920.automaton.REString rEString91 = rEString1.makeZeroOrMore(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        boolean boolean6 = st1920.automaton.REGEXWrapper.matches("~..#", rEString2);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        java.lang.String str12 = rEString10.string;
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString25 = rEString19.makeAnyChar(rEString24);
        st1920.automaton.REString rEString26 = rEString16.makeExclude(rEString19);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString16.makeAlpha(rEString28);
        st1920.automaton.REString rEString30 = rEString10.makeExclude(rEString28);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("[^~?]");
        st1920.automaton.REString rEString33 = rEString28.makeClass(rEString32);
        st1920.automaton.REString rEString34 = rEString2.makeZeroOrOne(rEString32);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString47 = rEString41.makeAnyChar(rEString46);
        st1920.automaton.REString rEString48 = rEString38.makeExclude(rEString41);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString55.makeAnyChar(rEString61);
        st1920.automaton.REString rEString63 = rEString48.makeZeroOrOne(rEString61);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = rEString72.makeExclude(rEString74);
        st1920.automaton.REString rEString76 = rEString70.makeAnyChar(rEString75);
        st1920.automaton.REString rEString77 = rEString67.makeExclude(rEString70);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString67.makeAlpha(rEString79);
        st1920.automaton.REString rEString81 = rEString48.makeClass(rEString67);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = rEString87.makeExclude(rEString89);
        st1920.automaton.REString rEString91 = rEString85.makeAnyChar(rEString90);
        st1920.automaton.REString rEString92 = rEString83.makeAnyChar(rEString91);
        st1920.automaton.REString rEString95 = rEString67.makeRep(rEString83, (int) ' ', (int) (short) 10);
        java.lang.String str96 = rEString67.string;
        st1920.automaton.REString rEString97 = rEString2.makeNum(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str96 + "' != '" + "" + "'", str96.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        java.lang.String str12 = rEString10.string;
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString25 = rEString19.makeAnyChar(rEString24);
        st1920.automaton.REString rEString26 = rEString16.makeExclude(rEString19);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString34 = rEString28.makeAnyChar(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString40 = rEString33.makeAnyChar(rEString39);
        st1920.automaton.REString rEString41 = rEString26.makeZeroOrOne(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString49 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString48.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString26.makeOneOrMore(rEString55);
        st1920.automaton.REString rEString57 = rEString10.makeClass(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString70 = rEString64.makeAnyChar(rEString69);
        st1920.automaton.REString rEString71 = rEString61.makeExclude(rEString64);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString79 = rEString73.makeAnyChar(rEString78);
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString85 = rEString78.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString71.makeZeroOrOne(rEString84);
        st1920.automaton.REString rEString87 = rEString10.makeNum(rEString86);
        boolean boolean88 = st1920.automaton.REGEXWrapper.matches("", rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "~." + "'", str12.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString9.makeExclude(rEString12);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString26.makeAnyChar(rEString32);
        st1920.automaton.REString rEString34 = rEString19.makeZeroOrOne(rEString32);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString47 = rEString41.makeAnyChar(rEString46);
        st1920.automaton.REString rEString48 = rEString38.makeExclude(rEString41);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString55.makeAnyChar(rEString60);
        st1920.automaton.REString rEString62 = rEString52.makeExclude(rEString55);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString52.makeAlpha(rEString64);
        st1920.automaton.REString rEString66 = rEString48.makeAlpha(rEString64);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString34.makeOr(rEString48, rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString85 = rEString79.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString76.makeExclude(rEString79);
        st1920.automaton.REString rEString89 = rEString34.makeRange(rEString86, (int) (byte) -1, (int) (byte) -1);
        st1920.automaton.REString rEString90 = rEString2.makeAny(rEString89);
        boolean boolean91 = st1920.automaton.REGEXWrapper.matches("~~", rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString20.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString13.makeZeroOrOne(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString32.makeAlpha(rEString44);
        st1920.automaton.REString rEString46 = rEString13.makeClass(rEString32);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("~.+");
        st1920.automaton.REString rEString49 = rEString32.makeExcludeClass(rEString48);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        java.lang.String str56 = rEString54.string;
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString69 = rEString63.makeAnyChar(rEString68);
        st1920.automaton.REString rEString70 = rEString60.makeExclude(rEString63);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString60.makeAlpha(rEString72);
        st1920.automaton.REString rEString74 = rEString54.makeExclude(rEString72);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString78.makeAnyChar(rEString83);
        st1920.automaton.REString rEString85 = rEString76.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString54.makeNothing(rEString85);
        boolean boolean87 = st1920.automaton.REGEXWrapper.matches("*", rEString85);
        st1920.automaton.REString rEString88 = rEString32.makeAnyChar(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = rEString5.makeExclude(rEString7);
        st1920.automaton.REString rEString9 = rEString3.makeAnyChar(rEString8);
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("*");
        st1920.automaton.REString rEString12 = rEString8.makeAnyChar(rEString11);
        boolean boolean13 = st1920.automaton.REGEXWrapper.matches("", rEString11);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString31 = rEString25.makeAnyChar(rEString30);
        st1920.automaton.REString rEString32 = rEString22.makeExclude(rEString25);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString40 = rEString34.makeAnyChar(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString46 = rEString39.makeAnyChar(rEString45);
        st1920.automaton.REString rEString47 = rEString32.makeZeroOrOne(rEString45);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString54.makeAnyChar(rEString60);
        st1920.automaton.REString rEString62 = rEString32.makeOneOrMore(rEString61);
        st1920.automaton.REString rEString65 = rEString15.makeRange(rEString62, (int) '4', 10);
        st1920.automaton.REString rEString66 = rEString11.makeGroup(rEString15);
        boolean boolean67 = st1920.automaton.REGEXWrapper.matches("~..@", rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString14.makeClass(rEString33);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        java.lang.String str53 = rEString51.string;
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString67 = rEString57.makeExclude(rEString60);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString57.makeAlpha(rEString69);
        st1920.automaton.REString rEString71 = rEString51.makeExclude(rEString69);
        st1920.automaton.REString rEString72 = rEString14.makeGroup(rEString51);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString74.makeAnyChar(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString82.makeExclude(rEString84);
        st1920.automaton.REString rEString88 = rEString74.makeRange(rEString84, 10, 0);
        st1920.automaton.REString rEString89 = rEString14.makeZeroOrMore(rEString84);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = st1920.automaton.REGEXWrapper.matches("[^~]", rEString14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString24 = rEString14.makeExclude(rEString17);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString31.makeAnyChar(rEString37);
        st1920.automaton.REString rEString39 = rEString24.makeZeroOrOne(rEString37);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString52 = rEString46.makeAnyChar(rEString51);
        st1920.automaton.REString rEString53 = rEString43.makeExclude(rEString46);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString43.makeAlpha(rEString55);
        st1920.automaton.REString rEString57 = rEString24.makeClass(rEString43);
        st1920.automaton.REString rEString60 = rEString9.makeRep(rEString24, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString61 = rEString5.makeZeroOrMore(rEString9);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString64 = rEString9.makeGroup(rEString63);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString73 = rEString67.makeAnyChar(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString81 = rEString67.makeRange(rEString77, 10, 0);
        boolean boolean82 = st1920.automaton.REGEXWrapper.matches("~.", rEString77);
        st1920.automaton.REString rEString83 = rEString9.makeGroup(rEString77);
        boolean boolean84 = st1920.automaton.REGEXWrapper.matches("(~)", rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString29.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString22.makeZeroOrOne(rEString35);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString41.makeExclude(rEString44);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString58.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString51.makeZeroOrOne(rEString64);
        st1920.automaton.REString rEString67 = rEString35.makeExcludeClass(rEString66);
        st1920.automaton.REString rEString68 = rEString8.makeOneOrMore(rEString67);
        java.lang.String str69 = rEString8.string;
        boolean boolean70 = st1920.automaton.REGEXWrapper.matches("~.<52-100>", rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "~." + "'", str69.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString35.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString28.makeZeroOrOne(rEString41);
        rEString43.string = "";
        st1920.automaton.REString rEString46 = rEString4.makeOneOrMore(rEString43);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString67.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString60.makeZeroOrOne(rEString73);
        st1920.automaton.REString rEString76 = rEString43.makeOneOrMore(rEString75);
        boolean boolean77 = st1920.automaton.REGEXWrapper.matches("+", rEString43);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString85 = rEString79.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString43.makeNum(rEString84);
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("~|?");
        st1920.automaton.REString rEString89 = rEString43.makeExclude(rEString88);
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("~~.");
        st1920.automaton.REString rEString92 = rEString43.makeExclude(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString15 = rEString1.makeRange(rEString11, 10, 0);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString29 = rEString23.makeAnyChar(rEString28);
        st1920.automaton.REString rEString30 = rEString20.makeExclude(rEString23);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString37.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString34.makeExclude(rEString37);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString52 = rEString46.makeAnyChar(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString51.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString44.makeZeroOrOne(rEString57);
        rEString59.string = "";
        st1920.automaton.REString rEString62 = rEString20.makeOneOrMore(rEString59);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString69.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString66.makeExclude(rEString69);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString78.makeAnyChar(rEString83);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString90 = rEString83.makeAnyChar(rEString89);
        st1920.automaton.REString rEString91 = rEString76.makeZeroOrOne(rEString89);
        st1920.automaton.REString rEString92 = rEString59.makeOneOrMore(rEString91);
        boolean boolean93 = st1920.automaton.REGEXWrapper.matches("+", rEString59);
        st1920.automaton.REString rEString96 = rEString15.makeRange(rEString59, (int) (short) 1, (int) (byte) 0);
        st1920.automaton.REString rEString98 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString99 = rEString15.makeOneOrMore(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        java.lang.String str11 = rEString9.string;
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString13.makeExclude(rEString15);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString24 = rEString18.makeAnyChar(rEString23);
        st1920.automaton.REString rEString25 = rEString15.makeExclude(rEString18);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString15.makeAlpha(rEString27);
        st1920.automaton.REString rEString29 = rEString9.makeExclude(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString41.makeExclude(rEString44);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString41.makeAlpha(rEString53);
        st1920.automaton.REString rEString55 = rEString36.makeAny(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString59.makeExclude(rEString62);
        st1920.automaton.REString rEString70 = rEString29.makeAnd(rEString36, rEString62);
        st1920.automaton.REString rEString71 = rEString5.makeNothing(rEString70);
        rEString70.string = "~.+";
        boolean boolean74 = st1920.automaton.REGEXWrapper.matches("~&#", rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("a");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString4.makeAnyChar(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        java.lang.String str19 = rEString17.string;
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString23.makeExclude(rEString26);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString23.makeAlpha(rEString35);
        st1920.automaton.REString rEString37 = rEString17.makeExclude(rEString35);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString52.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString49.makeExclude(rEString52);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString49.makeAlpha(rEString61);
        st1920.automaton.REString rEString63 = rEString44.makeAny(rEString62);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = rEString72.makeExclude(rEString74);
        st1920.automaton.REString rEString76 = rEString70.makeAnyChar(rEString75);
        st1920.automaton.REString rEString77 = rEString67.makeExclude(rEString70);
        st1920.automaton.REString rEString78 = rEString37.makeAnd(rEString44, rEString70);
        st1920.automaton.REString rEString79 = rEString12.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString2.makeAlpha(rEString78);
        boolean boolean81 = st1920.automaton.REGEXWrapper.matches("a", rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        java.lang.String str15 = rEString4.string;
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString29 = rEString22.makeAnyChar(rEString28);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString29.makeAny(rEString42);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString48.makeExclude(rEString51);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString65.makeAnyChar(rEString71);
        st1920.automaton.REString rEString73 = rEString58.makeZeroOrOne(rEString71);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString81 = rEString75.makeAnyChar(rEString80);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = rEString83.makeExclude(rEString85);
        st1920.automaton.REString rEString87 = rEString80.makeAnyChar(rEString86);
        st1920.automaton.REString rEString88 = rEString58.makeOneOrMore(rEString87);
        st1920.automaton.REString rEString89 = rEString29.makeExcludeClass(rEString58);
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("~");
        st1920.automaton.REString rEString92 = rEString4.makeAnd(rEString29, rEString91);
        boolean boolean93 = st1920.automaton.REGEXWrapper.matches("~?*", rEString4);
        java.lang.Class<?> wildcardClass94 = rEString4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString24 = rEString14.makeExclude(rEString17);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString38 = rEString28.makeExclude(rEString31);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString28.makeAlpha(rEString40);
        st1920.automaton.REString rEString42 = rEString24.makeAlpha(rEString40);
        boolean boolean43 = st1920.automaton.REGEXWrapper.matches("~.+", rEString40);
        boolean boolean44 = st1920.automaton.REGEXWrapper.matches("hi!", rEString40);
        st1920.automaton.REString rEString45 = rEString2.makeOneOrMore(rEString40);
        boolean boolean46 = st1920.automaton.REGEXWrapper.matches("[a]", rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString24 = rEString14.makeExclude(rEString17);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString31.makeAnyChar(rEString37);
        st1920.automaton.REString rEString39 = rEString24.makeZeroOrOne(rEString37);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString52 = rEString46.makeAnyChar(rEString51);
        st1920.automaton.REString rEString53 = rEString43.makeExclude(rEString46);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString43.makeAlpha(rEString55);
        st1920.automaton.REString rEString57 = rEString24.makeClass(rEString43);
        st1920.automaton.REString rEString60 = rEString9.makeRep(rEString24, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString61 = rEString5.makeZeroOrMore(rEString9);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString64 = rEString9.makeGroup(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString73.makeExclude(rEString75);
        st1920.automaton.REString rEString77 = rEString71.makeAnyChar(rEString76);
        st1920.automaton.REString rEString78 = rEString68.makeExclude(rEString71);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString68.makeAlpha(rEString80);
        rEString81.string = "";
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = rEString87.makeExclude(rEString89);
        st1920.automaton.REString rEString91 = rEString85.makeAnyChar(rEString90);
        st1920.automaton.REString rEString92 = rEString81.makeZeroOrMore(rEString91);
        st1920.automaton.REString rEString95 = rEString9.makeRange(rEString92, (int) (short) -1, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = st1920.automaton.REGEXWrapper.matches("", rEString95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: integer expected at position 4");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        java.lang.String str7 = rEString5.string;
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString20 = rEString14.makeAnyChar(rEString19);
        st1920.automaton.REString rEString21 = rEString11.makeExclude(rEString14);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString11.makeAlpha(rEString23);
        st1920.automaton.REString rEString25 = rEString5.makeExclude(rEString23);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString32.makeAnyChar(rEString37);
        st1920.automaton.REString rEString39 = rEString29.makeExclude(rEString32);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString47 = rEString41.makeAnyChar(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString46.makeAnyChar(rEString52);
        st1920.automaton.REString rEString54 = rEString39.makeZeroOrOne(rEString52);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString56.makeAnyChar(rEString61);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString61.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString39.makeOneOrMore(rEString68);
        java.lang.String str70 = rEString69.string;
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString74.makeAnyChar(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString82.makeExclude(rEString84);
        st1920.automaton.REString rEString88 = rEString74.makeRange(rEString84, 10, 0);
        st1920.automaton.REString rEString91 = rEString72.makeRep(rEString74, (int) 'a', (int) '4');
        st1920.automaton.REString rEString92 = rEString69.makeAnyChar(rEString74);
        st1920.automaton.REString rEString93 = rEString5.makeAlpha(rEString74);
        boolean boolean94 = st1920.automaton.REGEXWrapper.matches("", rEString5);
        boolean boolean95 = st1920.automaton.REGEXWrapper.matches("", rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "~.+" + "'", str70.equals("~.+"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString8.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString5.makeExclude(rEString8);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString22.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString19.makeExclude(rEString22);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString19.makeAlpha(rEString31);
        st1920.automaton.REString rEString33 = rEString15.makeAlpha(rEString31);
        boolean boolean34 = st1920.automaton.REGEXWrapper.matches("~.+", rEString31);
        boolean boolean35 = st1920.automaton.REGEXWrapper.matches("hi!", rEString31);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString49 = rEString39.makeExclude(rEString42);
        st1920.automaton.REString rEString50 = rEString31.makeAnyChar(rEString42);
        rEString50.string = "#";
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString54.makeAnyChar(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("*");
        st1920.automaton.REString rEString63 = rEString59.makeAnyChar(rEString62);
        st1920.automaton.REString rEString64 = rEString50.makeZeroOrOne(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        java.lang.String str6 = rEString4.string;
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString8.makeAnyChar(rEString13);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString35.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString28.makeAny(rEString41);
        st1920.automaton.REString rEString46 = rEString14.makeRep(rEString28, 0, (-1));
        st1920.automaton.REString rEString47 = rEString4.makeAny(rEString14);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString54.makeAnyChar(rEString60);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString65.makeExclude(rEString68);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString83 = rEString77.makeAnyChar(rEString82);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString82.makeAnyChar(rEString88);
        st1920.automaton.REString rEString90 = rEString75.makeZeroOrOne(rEString88);
        st1920.automaton.REString rEString91 = rEString60.makeZeroOrMore(rEString90);
        st1920.automaton.REString rEString92 = rEString47.makeAlpha(rEString90);
        boolean boolean93 = st1920.automaton.REGEXWrapper.matches("~?*", rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("[]");
        rEString2.string = "~.1";
        boolean boolean5 = st1920.automaton.REGEXWrapper.matches("[^~?]", rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("~..1");
        java.lang.String str2 = rEString1.string;
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString21 = rEString7.makeRange(rEString17, 10, 0);
        st1920.automaton.REString rEString24 = rEString5.makeRep(rEString7, (int) 'a', (int) '4');
        boolean boolean25 = st1920.automaton.REGEXWrapper.matches("*", rEString24);
        st1920.automaton.REString rEString26 = rEString1.makeExclude(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString28.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString52.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString49.makeExclude(rEString52);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString49.makeAlpha(rEString61);
        st1920.automaton.REString rEString63 = rEString44.makeAny(rEString62);
        st1920.automaton.REString rEString64 = rEString28.makeClass(rEString62);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString80 = rEString66.makeRange(rEString76, 10, 0);
        st1920.automaton.REString rEString81 = rEString64.makeAny(rEString76);
        rEString64.string = "~..1";
        st1920.automaton.REString rEString84 = rEString1.makeGroup(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "~..1" + "'", str2.equals("~..1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString14.makeClass(rEString33);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString49.makeAnyChar(rEString57);
        st1920.automaton.REString rEString61 = rEString33.makeRep(rEString49, (int) ' ', (int) (short) 10);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString65.makeExclude(rEString68);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = rEString84.makeExclude(rEString86);
        st1920.automaton.REString rEString88 = rEString82.makeAnyChar(rEString87);
        st1920.automaton.REString rEString89 = rEString79.makeExclude(rEString82);
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString92 = rEString79.makeAlpha(rEString91);
        st1920.automaton.REString rEString93 = rEString75.makeAlpha(rEString91);
        st1920.automaton.REString rEString96 = rEString61.makeRep(rEString75, (int) (byte) 0, (int) (short) 10);
        rEString75.string = "#";
        boolean boolean99 = st1920.automaton.REGEXWrapper.matches("[^~?]", rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        java.lang.String str14 = rEString12.string;
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString32.makeAlpha(rEString44);
        st1920.automaton.REString rEString46 = rEString28.makeAlpha(rEString44);
        st1920.automaton.REString rEString47 = rEString2.makeAnd(rEString12, rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString54.makeAnyChar(rEString59);
        st1920.automaton.REString rEString61 = rEString51.makeExclude(rEString54);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString69 = rEString63.makeAnyChar(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString68.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString61.makeZeroOrOne(rEString74);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString78.makeAnyChar(rEString83);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString90 = rEString83.makeAnyChar(rEString89);
        st1920.automaton.REString rEString91 = rEString61.makeOneOrMore(rEString90);
        java.lang.String str92 = rEString91.string;
        st1920.automaton.REString rEString93 = rEString12.makeAny(rEString91);
        boolean boolean94 = st1920.automaton.REGEXWrapper.matches("~~?", rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "~.+" + "'", str92.equals("~.+"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString18 = rEString4.makeRange(rEString14, 10, 0);
        st1920.automaton.REString rEString21 = rEString2.makeRep(rEString4, (int) 'a', (int) '4');
        boolean boolean22 = st1920.automaton.REGEXWrapper.matches("~.+", rEString2);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        java.lang.String str28 = rEString26.string;
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString32.makeAlpha(rEString44);
        st1920.automaton.REString rEString46 = rEString26.makeExclude(rEString44);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString68 = rEString58.makeExclude(rEString61);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString58.makeAlpha(rEString70);
        st1920.automaton.REString rEString72 = rEString53.makeAny(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString85 = rEString79.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString76.makeExclude(rEString79);
        st1920.automaton.REString rEString87 = rEString46.makeAnd(rEString53, rEString79);
        st1920.automaton.REString rEString88 = rEString2.makeAlpha(rEString79);
        rEString79.string = "~~&";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString18.makeAlpha(rEString30);
        st1920.automaton.REString rEString32 = rEString14.makeAlpha(rEString30);
        boolean boolean33 = st1920.automaton.REGEXWrapper.matches("~.+", rEString30);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString37.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString35.makeAnyChar(rEString43);
        java.lang.String str45 = rEString43.string;
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString52.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString49.makeExclude(rEString52);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString73 = rEString66.makeAnyChar(rEString72);
        st1920.automaton.REString rEString74 = rEString59.makeZeroOrOne(rEString72);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString76.makeAnyChar(rEString81);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = rEString84.makeExclude(rEString86);
        st1920.automaton.REString rEString88 = rEString81.makeAnyChar(rEString87);
        st1920.automaton.REString rEString89 = rEString59.makeOneOrMore(rEString88);
        st1920.automaton.REString rEString90 = rEString43.makeClass(rEString89);
        st1920.automaton.REString rEString91 = rEString30.makeZeroOrOne(rEString89);
        rEString91.string = "[^~]";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "~." + "'", str45.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString15 = rEString9.makeAnyChar(rEString14);
        st1920.automaton.REString rEString16 = rEString6.makeExclude(rEString9);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString24 = rEString18.makeAnyChar(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString23.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString6.makeOneOrMore(rEString29);
        st1920.automaton.REString rEString32 = rEString2.makeOneOrMore(rEString6);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("a");
        st1920.automaton.REString rEString35 = rEString6.makeGroup(rEString34);
        boolean boolean36 = st1920.automaton.REGEXWrapper.matches("~~", rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString3.makeAlpha(rEString15);
        rEString16.string = "";
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString16.makeZeroOrMore(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString46.makeExclude(rEString49);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString46.makeAlpha(rEString58);
        st1920.automaton.REString rEString60 = rEString42.makeAlpha(rEString58);
        boolean boolean61 = st1920.automaton.REGEXWrapper.matches("~.+", rEString58);
        st1920.automaton.REString rEString62 = rEString16.makeAlpha(rEString58);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString69.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString66.makeExclude(rEString69);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString83.makeAnyChar(rEString88);
        st1920.automaton.REString rEString90 = rEString80.makeExclude(rEString83);
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = rEString80.makeAlpha(rEString92);
        st1920.automaton.REString rEString94 = rEString76.makeAlpha(rEString92);
        st1920.automaton.REString rEString95 = rEString16.makeClass(rEString92);
        rEString92.string = "~{-1,-1}@";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString16 = rEString2.makeRange(rEString12, 10, 0);
        rEString12.string = "~.";
        java.lang.String str19 = rEString12.string;
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString29 = rEString23.makeAnyChar(rEString28);
        st1920.automaton.REString rEString30 = rEString21.makeAnyChar(rEString29);
        java.lang.String str31 = rEString29.string;
        st1920.automaton.REString rEString32 = rEString12.makeAlpha(rEString29);
        boolean boolean33 = st1920.automaton.REGEXWrapper.matches("a", rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "~." + "'", str19.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "~." + "'", str31.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString20.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString13.makeZeroOrOne(rEString26);
        rEString28.string = "";
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("~?*");
        boolean boolean34 = st1920.automaton.REGEXWrapper.matches("~..", rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString38.makeAnyChar(rEString43);
        st1920.automaton.REString rEString45 = rEString36.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString33.makeZeroOrOne(rEString45);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString55.makeAnyChar(rEString60);
        st1920.automaton.REString rEString62 = rEString52.makeExclude(rEString55);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString69.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString66.makeExclude(rEString69);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString66.makeAlpha(rEString78);
        st1920.automaton.REString rEString80 = rEString62.makeAlpha(rEString78);
        boolean boolean81 = st1920.automaton.REGEXWrapper.matches("~.+", rEString78);
        boolean boolean82 = st1920.automaton.REGEXWrapper.matches("hi!", rEString78);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = rEString84.makeExclude(rEString86);
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = rEString91.makeExclude(rEString93);
        st1920.automaton.REString rEString95 = rEString89.makeAnyChar(rEString94);
        st1920.automaton.REString rEString96 = rEString86.makeExclude(rEString89);
        st1920.automaton.REString rEString97 = rEString78.makeAnyChar(rEString89);
        st1920.automaton.REString rEString98 = rEString33.makeExclude(rEString89);
        st1920.automaton.REString rEString99 = rEString28.makeZeroOrOne(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString14.makeOneOrMore(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString48.makeExclude(rEString51);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString65.makeAnyChar(rEString71);
        st1920.automaton.REString rEString73 = rEString58.makeZeroOrOne(rEString71);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString82.makeExclude(rEString84);
        st1920.automaton.REString rEString86 = rEString80.makeAnyChar(rEString85);
        st1920.automaton.REString rEString87 = rEString77.makeExclude(rEString80);
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = rEString77.makeAlpha(rEString89);
        st1920.automaton.REString rEString91 = rEString58.makeClass(rEString77);
        st1920.automaton.REString rEString92 = rEString44.makeExclude(rEString91);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = st1920.automaton.REGEXWrapper.matches("[^~?]", rEString92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: expected ']' at position 3");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString18.makeAlpha(rEString30);
        st1920.automaton.REString rEString32 = rEString14.makeAlpha(rEString30);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString36.makeExclude(rEString39);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString36.makeAlpha(rEString48);
        st1920.automaton.REString rEString52 = rEString14.makeRange(rEString36, (int) (byte) 1, (int) (byte) 100);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString54.makeAnyChar(rEString59);
        st1920.automaton.REString rEString61 = rEString36.makeAlpha(rEString60);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString65.makeExclude(rEString68);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString83 = rEString77.makeAnyChar(rEString82);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString82.makeAnyChar(rEString88);
        st1920.automaton.REString rEString90 = rEString75.makeZeroOrOne(rEString88);
        java.lang.String str91 = rEString75.string;
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("~&#");
        st1920.automaton.REString rEString96 = rEString75.makeRange(rEString93, 1, (int) '4');
        st1920.automaton.REString rEString97 = rEString60.makeZeroOrOne(rEString75);
        boolean boolean98 = st1920.automaton.REGEXWrapper.matches("~~", rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "~" + "'", str91.equals("~"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        java.lang.String str12 = rEString10.string;
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString25 = rEString19.makeAnyChar(rEString24);
        st1920.automaton.REString rEString26 = rEString16.makeExclude(rEString19);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString34 = rEString28.makeAnyChar(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString40 = rEString33.makeAnyChar(rEString39);
        st1920.automaton.REString rEString41 = rEString26.makeZeroOrOne(rEString39);
        st1920.automaton.REString rEString42 = rEString10.makeGroup(rEString39);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = st1920.automaton.REGEXWrapper.matches("<100-0>", rEString42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: expected ')' at position 3");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "~." + "'", str12.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("[~..]<0-1>");
        boolean boolean3 = st1920.automaton.REGEXWrapper.matches("()", rEString2);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString13.makeExclude(rEString15);
        st1920.automaton.REString rEString17 = rEString11.makeAnyChar(rEString16);
        st1920.automaton.REString rEString18 = rEString8.makeExclude(rEString11);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString31 = rEString25.makeAnyChar(rEString30);
        st1920.automaton.REString rEString32 = rEString22.makeExclude(rEString25);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString22.makeAlpha(rEString34);
        st1920.automaton.REString rEString36 = rEString18.makeAlpha(rEString34);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString49 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString50 = rEString40.makeExclude(rEString43);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString40.makeAlpha(rEString52);
        st1920.automaton.REString rEString56 = rEString18.makeRange(rEString40, (int) (byte) 1, (int) (byte) 100);
        boolean boolean57 = st1920.automaton.REGEXWrapper.matches("~..", rEString56);
        st1920.automaton.REString rEString58 = rEString2.makeAnyChar(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        java.lang.String str5 = rEString3.string;
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString9.makeExclude(rEString12);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString9.makeAlpha(rEString21);
        st1920.automaton.REString rEString23 = rEString3.makeExclude(rEString21);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString27.makeExclude(rEString30);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString41.makeExclude(rEString44);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString41.makeAlpha(rEString53);
        st1920.automaton.REString rEString55 = rEString37.makeAlpha(rEString53);
        st1920.automaton.REString rEString56 = rEString23.makeNothing(rEString37);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString73 = rEString59.makeRange(rEString69, 10, 0);
        boolean boolean74 = st1920.automaton.REGEXWrapper.matches("~.", rEString69);
        st1920.automaton.REString rEString75 = rEString56.makeAlpha(rEString69);
        java.lang.String str76 = rEString75.string;
        st1920.automaton.REString rEString77 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "a" + "'", str76.equals("a"));
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = rEString5.makeExclude(rEString7);
        st1920.automaton.REString rEString9 = rEString3.makeAnyChar(rEString8);
        st1920.automaton.REString rEString10 = rEString1.makeAnyChar(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString24 = rEString14.makeExclude(rEString17);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString38 = rEString28.makeExclude(rEString31);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString28.makeAlpha(rEString40);
        st1920.automaton.REString rEString42 = rEString24.makeAlpha(rEString40);
        java.lang.String str43 = rEString42.string;
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("~..1");
        java.lang.String str46 = rEString45.string;
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString65 = rEString51.makeRange(rEString61, 10, 0);
        st1920.automaton.REString rEString68 = rEString49.makeRep(rEString51, (int) 'a', (int) '4');
        boolean boolean69 = st1920.automaton.REGEXWrapper.matches("*", rEString68);
        st1920.automaton.REString rEString70 = rEString45.makeExclude(rEString68);
        st1920.automaton.REString rEString71 = rEString42.makeOneOrMore(rEString68);
        st1920.automaton.REString rEString72 = rEString9.makeClass(rEString42);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("~.");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("~~&");
        st1920.automaton.REString rEString77 = rEString74.makeClass(rEString76);
        st1920.automaton.REString rEString78 = rEString72.makeAny(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "a" + "'", str43.equals("a"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "~..1" + "'", str46.equals("~..1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = rEString5.makeExclude(rEString7);
        st1920.automaton.REString rEString9 = rEString3.makeAnyChar(rEString8);
        st1920.automaton.REString rEString10 = rEString1.makeAnyChar(rEString9);
        java.lang.String str11 = rEString9.string;
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString13.makeExclude(rEString15);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString24 = rEString18.makeAnyChar(rEString23);
        st1920.automaton.REString rEString25 = rEString15.makeExclude(rEString18);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString32.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString25.makeZeroOrOne(rEString38);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString47.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString25.makeOneOrMore(rEString54);
        st1920.automaton.REString rEString56 = rEString9.makeClass(rEString55);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString68 = rEString59.makeAnyChar(rEString67);
        boolean boolean69 = st1920.automaton.REGEXWrapper.matches("~.+", rEString59);
        java.lang.String str70 = rEString59.string;
        st1920.automaton.REString rEString71 = rEString56.makeZeroOrMore(rEString59);
        rEString59.string = "*";
        st1920.automaton.REString rEString74 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString75 = rEString59.makeOneOrMore(rEString74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "~." + "'", str11.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "" + "'", str70.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString8.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString5.makeExclude(rEString8);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString22.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString19.makeExclude(rEString22);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString29.makeZeroOrOne(rEString42);
        rEString44.string = "";
        st1920.automaton.REString rEString47 = rEString5.makeOneOrMore(rEString44);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString54.makeAnyChar(rEString59);
        st1920.automaton.REString rEString61 = rEString51.makeExclude(rEString54);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString69 = rEString63.makeAnyChar(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString68.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString61.makeZeroOrOne(rEString74);
        st1920.automaton.REString rEString77 = rEString44.makeOneOrMore(rEString76);
        boolean boolean78 = st1920.automaton.REGEXWrapper.matches("+", rEString44);
        boolean boolean79 = st1920.automaton.REGEXWrapper.matches("~", rEString44);
        java.lang.String str80 = rEString44.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        boolean boolean12 = st1920.automaton.REGEXWrapper.matches("~.+", rEString2);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        java.lang.String str18 = rEString16.string;
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString31 = rEString25.makeAnyChar(rEString30);
        st1920.automaton.REString rEString32 = rEString22.makeExclude(rEString25);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString22.makeAlpha(rEString34);
        st1920.automaton.REString rEString36 = rEString16.makeExclude(rEString34);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString49 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString50 = rEString40.makeExclude(rEString43);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString57.makeAnyChar(rEString62);
        st1920.automaton.REString rEString64 = rEString54.makeExclude(rEString57);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString54.makeAlpha(rEString66);
        st1920.automaton.REString rEString68 = rEString50.makeAlpha(rEString66);
        st1920.automaton.REString rEString69 = rEString36.makeNothing(rEString50);
        st1920.automaton.REString rEString70 = rEString2.makeClass(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString78 = rEString72.makeAnyChar(rEString77);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString86 = rEString72.makeRange(rEString82, 10, 0);
        rEString82.string = "~.";
        st1920.automaton.REString rEString89 = rEString70.makeZeroOrOne(rEString82);
        rEString89.string = "~.+";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        rEString29.string = "~.1";
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("~..");
        st1920.automaton.REString rEString34 = rEString29.makeAlpha(rEString33);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString37.makeAnyChar(rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString47.makeAnyChar(rEString52);
        st1920.automaton.REString rEString54 = rEString45.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString37.makeClass(rEString54);
        boolean boolean56 = st1920.automaton.REGEXWrapper.matches("*", rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("~|?");
        st1920.automaton.REString rEString59 = rEString55.makeNothing(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString75 = rEString61.makeRange(rEString71, 10, 0);
        st1920.automaton.REString rEString76 = rEString58.makeExclude(rEString71);
        st1920.automaton.REString rEString77 = rEString34.makeClass(rEString71);
        boolean boolean78 = st1920.automaton.REGEXWrapper.matches("(~.)", rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString27 = rEString13.makeRange(rEString23, 10, 0);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString40 = rEString34.makeAnyChar(rEString39);
        st1920.automaton.REString rEString41 = rEString31.makeExclude(rEString34);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString49 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString48.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString41.makeZeroOrOne(rEString54);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString64 = rEString58.makeAnyChar(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString70 = rEString63.makeAnyChar(rEString69);
        st1920.automaton.REString rEString71 = rEString41.makeOneOrMore(rEString70);
        st1920.automaton.REString rEString72 = rEString23.makeNothing(rEString41);
        st1920.automaton.REString rEString73 = rEString2.makeAnyChar(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString83 = rEString77.makeAnyChar(rEString82);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString91 = rEString77.makeRange(rEString87, 10, 0);
        st1920.automaton.REString rEString94 = rEString75.makeRep(rEString77, (int) 'a', (int) '4');
        st1920.automaton.REString rEString95 = rEString72.makeAlpha(rEString77);
        boolean boolean96 = st1920.automaton.REGEXWrapper.matches("a@+", rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString16 = rEString2.makeRange(rEString12, 10, 0);
        rEString12.string = "~.";
        java.lang.String str19 = rEString12.string;
        boolean boolean20 = st1920.automaton.REGEXWrapper.matches("+", rEString12);
        java.lang.String str21 = rEString12.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "~." + "'", str19.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "~." + "'", str21.equals("~."));
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        boolean boolean12 = st1920.automaton.REGEXWrapper.matches("~.+", rEString2);
        java.lang.String str13 = rEString2.string;
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString22.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString19.makeExclude(rEString22);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString29.makeAlpha(rEString45);
        boolean boolean48 = st1920.automaton.REGEXWrapper.matches("~.+", rEString45);
        boolean boolean49 = st1920.automaton.REGEXWrapper.matches("hi!", rEString45);
        st1920.automaton.REString rEString50 = rEString2.makeExclude(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString16 = rEString2.makeRange(rEString12, 10, 0);
        boolean boolean17 = st1920.automaton.REGEXWrapper.matches("~.", rEString12);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString21.makeExclude(rEString24);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString38.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString31.makeZeroOrOne(rEString44);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString50.makeAlpha(rEString62);
        st1920.automaton.REString rEString64 = rEString31.makeClass(rEString50);
        st1920.automaton.REString rEString67 = rEString12.makeRange(rEString31, (int) '4', (-1));
        java.lang.String str68 = rEString12.string;
        java.lang.Class<?> wildcardClass69 = rEString12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString9.makeExclude(rEString12);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString26.makeAnyChar(rEString32);
        st1920.automaton.REString rEString34 = rEString19.makeZeroOrOne(rEString32);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString47 = rEString41.makeAnyChar(rEString46);
        st1920.automaton.REString rEString48 = rEString38.makeExclude(rEString41);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString38.makeAlpha(rEString50);
        st1920.automaton.REString rEString52 = rEString19.makeClass(rEString38);
        st1920.automaton.REString rEString55 = rEString4.makeRep(rEString19, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString73 = rEString59.makeRange(rEString69, 10, 0);
        st1920.automaton.REString rEString76 = rEString57.makeRep(rEString59, (int) 'a', (int) '4');
        st1920.automaton.REString rEString77 = rEString4.makeZeroOrOne(rEString57);
        java.lang.String str78 = rEString4.string;
        rEString4.string = "~.+";
        boolean boolean81 = st1920.automaton.REGEXWrapper.matches("~{-1,-1}@", rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~?*");
        boolean boolean3 = st1920.automaton.REGEXWrapper.matches("~..", rEString2);
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString5.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString2.makeZeroOrOne(rEString14);
        java.lang.String str16 = rEString14.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "~.." + "'", str16.equals("~.."));
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString14.makeClass(rEString33);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("~.+");
        st1920.automaton.REString rEString50 = rEString33.makeExcludeClass(rEString49);
        rEString49.string = "~|?";
        java.lang.String str53 = rEString49.string;
        boolean boolean54 = st1920.automaton.REGEXWrapper.matches("#", rEString49);
        rEString49.string = "~?*";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "~|?" + "'", str53.equals("~|?"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        java.lang.String str6 = rEString4.string;
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString10.makeExclude(rEString13);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString10.makeAlpha(rEString22);
        st1920.automaton.REString rEString24 = rEString4.makeExclude(rEString22);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString36.makeExclude(rEString39);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString36.makeAlpha(rEString48);
        st1920.automaton.REString rEString50 = rEString31.makeAny(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString57.makeAnyChar(rEString62);
        st1920.automaton.REString rEString64 = rEString54.makeExclude(rEString57);
        st1920.automaton.REString rEString65 = rEString24.makeAnd(rEString31, rEString57);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString78 = rEString72.makeAnyChar(rEString77);
        st1920.automaton.REString rEString79 = rEString69.makeExclude(rEString72);
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString69.makeAlpha(rEString81);
        st1920.automaton.REString rEString83 = rEString57.makeNothing(rEString69);
        boolean boolean84 = st1920.automaton.REGEXWrapper.matches("~~&", rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString15 = rEString9.makeAnyChar(rEString14);
        st1920.automaton.REString rEString16 = rEString7.makeAnyChar(rEString15);
        java.lang.String str17 = rEString15.string;
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString21.makeExclude(rEString24);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString38.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString31.makeZeroOrOne(rEString44);
        st1920.automaton.REString rEString47 = rEString15.makeGroup(rEString44);
        st1920.automaton.REString rEString48 = rEString4.makeExclude(rEString47);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = st1920.automaton.REGEXWrapper.matches("", rEString48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: expected ')' at position 4");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "~." + "'", str17.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString16 = rEString2.makeRange(rEString12, 10, 0);
        boolean boolean17 = st1920.automaton.REGEXWrapper.matches("~.", rEString12);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString21.makeExclude(rEString24);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString38.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString31.makeZeroOrOne(rEString44);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString50.makeAlpha(rEString62);
        st1920.automaton.REString rEString64 = rEString31.makeClass(rEString50);
        st1920.automaton.REString rEString67 = rEString12.makeRange(rEString31, (int) '4', (-1));
        rEString31.string = "[^~?]";
        st1920.automaton.REString rEString70 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString71 = rEString31.makeAnyChar(rEString70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString16 = rEString2.makeRange(rEString12, 10, 0);
        boolean boolean17 = st1920.automaton.REGEXWrapper.matches("~.", rEString12);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString21.makeExclude(rEString24);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString38.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString31.makeZeroOrOne(rEString44);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString50.makeAlpha(rEString62);
        st1920.automaton.REString rEString64 = rEString31.makeClass(rEString50);
        st1920.automaton.REString rEString67 = rEString12.makeRange(rEString31, (int) '4', (-1));
        rEString31.string = "~~&";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("~..1");
        java.lang.String str2 = rEString1.string;
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString21 = rEString7.makeRange(rEString17, 10, 0);
        st1920.automaton.REString rEString24 = rEString5.makeRep(rEString7, (int) 'a', (int) '4');
        boolean boolean25 = st1920.automaton.REGEXWrapper.matches("*", rEString24);
        st1920.automaton.REString rEString26 = rEString1.makeExclude(rEString24);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString40 = rEString34.makeAnyChar(rEString39);
        st1920.automaton.REString rEString41 = rEString31.makeExclude(rEString34);
        boolean boolean42 = st1920.automaton.REGEXWrapper.matches("+", rEString34);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString49.makeAnyChar(rEString57);
        java.lang.String str59 = rEString57.string;
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString73 = rEString63.makeExclude(rEString66);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString81 = rEString75.makeAnyChar(rEString80);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = rEString83.makeExclude(rEString85);
        st1920.automaton.REString rEString87 = rEString80.makeAnyChar(rEString86);
        st1920.automaton.REString rEString88 = rEString73.makeZeroOrOne(rEString86);
        st1920.automaton.REString rEString89 = rEString57.makeGroup(rEString86);
        st1920.automaton.REString rEString90 = rEString46.makeExclude(rEString89);
        st1920.automaton.REString rEString93 = rEString34.makeRange(rEString89, 10, 0);
        st1920.automaton.REString rEString94 = rEString26.makeAlpha(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "~..1" + "'", str2.equals("~..1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "~." + "'", str59.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString14.makeOneOrMore(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString48.makeExclude(rEString51);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString65.makeAnyChar(rEString71);
        st1920.automaton.REString rEString73 = rEString58.makeZeroOrOne(rEString71);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString82.makeExclude(rEString84);
        st1920.automaton.REString rEString86 = rEString80.makeAnyChar(rEString85);
        st1920.automaton.REString rEString87 = rEString77.makeExclude(rEString80);
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = rEString77.makeAlpha(rEString89);
        st1920.automaton.REString rEString91 = rEString58.makeClass(rEString77);
        st1920.automaton.REString rEString92 = rEString44.makeExclude(rEString91);
        boolean boolean93 = st1920.automaton.REGEXWrapper.matches("~~.", rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~{-1,-1}");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString13.makeExclude(rEString15);
        st1920.automaton.REString rEString17 = rEString11.makeAnyChar(rEString16);
        st1920.automaton.REString rEString18 = rEString8.makeExclude(rEString11);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString31 = rEString25.makeAnyChar(rEString30);
        st1920.automaton.REString rEString32 = rEString22.makeExclude(rEString25);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString22.makeAlpha(rEString34);
        st1920.automaton.REString rEString36 = rEString18.makeAlpha(rEString34);
        boolean boolean37 = st1920.automaton.REGEXWrapper.matches("~.+", rEString34);
        boolean boolean38 = st1920.automaton.REGEXWrapper.matches("hi!", rEString34);
        st1920.automaton.REString rEString39 = rEString2.makeAnyChar(rEString34);
        rEString2.string = "a";
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString45.makeExclude(rEString48);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString57.makeAnyChar(rEString62);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString69 = rEString62.makeAnyChar(rEString68);
        st1920.automaton.REString rEString70 = rEString55.makeZeroOrOne(rEString68);
        rEString70.string = "~.1";
        st1920.automaton.REString rEString73 = rEString2.makeZeroOrMore(rEString70);
        boolean boolean74 = st1920.automaton.REGEXWrapper.matches("", rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString32.makeAlpha(rEString44);
        st1920.automaton.REString rEString46 = rEString28.makeAlpha(rEString44);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString64 = rEString58.makeAnyChar(rEString63);
        st1920.automaton.REString rEString65 = rEString56.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString48.makeClass(rEString65);
        st1920.automaton.REString rEString67 = rEString14.makeConcatenation(rEString28, rEString48);
        boolean boolean68 = st1920.automaton.REGEXWrapper.matches("~..{100,0}{35,10}#", rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString32.makeAlpha(rEString44);
        st1920.automaton.REString rEString46 = rEString28.makeAlpha(rEString44);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString50.makeAlpha(rEString62);
        st1920.automaton.REString rEString66 = rEString28.makeRange(rEString50, (int) (byte) 1, (int) (byte) 100);
        boolean boolean67 = st1920.automaton.REGEXWrapper.matches("~.", rEString66);
        st1920.automaton.REString rEString70 = rEString13.makeRange(rEString66, 100, 0);
        st1920.automaton.REString rEString71 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString72 = rEString70.makeAny(rEString71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString9.makeExclude(rEString12);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString26.makeAnyChar(rEString32);
        st1920.automaton.REString rEString34 = rEString19.makeZeroOrOne(rEString32);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString41.makeAnyChar(rEString47);
        st1920.automaton.REString rEString49 = rEString19.makeOneOrMore(rEString48);
        st1920.automaton.REString rEString52 = rEString2.makeRange(rEString49, (int) '4', 10);
        boolean boolean53 = st1920.automaton.REGEXWrapper.matches("(~.)", rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString18.makeAlpha(rEString30);
        st1920.automaton.REString rEString32 = rEString14.makeAlpha(rEString30);
        boolean boolean33 = st1920.automaton.REGEXWrapper.matches("~.+", rEString30);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("[^~.+]");
        st1920.automaton.REString rEString36 = rEString30.makeZeroOrOne(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = st1920.automaton.REGEXWrapper.matches("(~.)", rEString2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString15 = rEString9.makeAnyChar(rEString14);
        st1920.automaton.REString rEString16 = rEString7.makeAnyChar(rEString15);
        java.lang.String str17 = rEString15.string;
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString21.makeExclude(rEString24);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString38.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString31.makeZeroOrOne(rEString44);
        st1920.automaton.REString rEString47 = rEString15.makeGroup(rEString44);
        st1920.automaton.REString rEString48 = rEString4.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString55.makeAnyChar(rEString61);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString70 = rEString64.makeAnyChar(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = rEString72.makeExclude(rEString74);
        st1920.automaton.REString rEString76 = rEString69.makeAnyChar(rEString75);
        st1920.automaton.REString rEString77 = rEString62.makeAny(rEString75);
        st1920.automaton.REString rEString78 = rEString4.makeExcludeClass(rEString62);
        boolean boolean79 = st1920.automaton.REGEXWrapper.matches("[~..]<0-1>", rEString4);
        rEString4.string = "~..1";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "~." + "'", str17.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString20.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString13.makeZeroOrOne(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString35.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString13.makeOneOrMore(rEString42);
        java.lang.String str44 = rEString43.string;
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString62 = rEString48.makeRange(rEString58, 10, 0);
        st1920.automaton.REString rEString65 = rEString46.makeRep(rEString48, (int) 'a', (int) '4');
        st1920.automaton.REString rEString66 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString73.makeExclude(rEString75);
        st1920.automaton.REString rEString77 = rEString71.makeAnyChar(rEString76);
        st1920.automaton.REString rEString78 = rEString69.makeAnyChar(rEString77);
        boolean boolean79 = st1920.automaton.REGEXWrapper.matches("~.+", rEString69);
        java.lang.String str80 = rEString69.string;
        st1920.automaton.REString rEString81 = rEString43.makeOneOrMore(rEString69);
        java.lang.String str82 = rEString69.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "~.+" + "'", str44.equals("~.+"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "" + "'", str82.equals(""));
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString16 = rEString10.makeAnyChar(rEString15);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString15.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString29.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString22.makeAny(rEString35);
        st1920.automaton.REString rEString40 = rEString8.makeRep(rEString22, 0, (-1));
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString47.makeAnyChar(rEString52);
        st1920.automaton.REString rEString54 = rEString44.makeExclude(rEString47);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString56.makeAnyChar(rEString61);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString61.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString54.makeZeroOrOne(rEString67);
        st1920.automaton.REString rEString72 = rEString40.makeRange(rEString69, (int) '#', (int) '#');
        boolean boolean73 = st1920.automaton.REGEXWrapper.matches("~&#", rEString69);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString76.makeAnyChar(rEString81);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = rEString84.makeExclude(rEString86);
        st1920.automaton.REString rEString88 = rEString81.makeAnyChar(rEString87);
        boolean boolean89 = st1920.automaton.REGEXWrapper.matches("a@", rEString88);
        st1920.automaton.REString rEString90 = rEString69.makeZeroOrOne(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        st1920.automaton.REString rEString1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = st1920.automaton.REGEXWrapper.matches("[^~]", rEString1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        java.lang.String str6 = rEString4.string;
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString10.makeExclude(rEString13);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString10.makeAlpha(rEString22);
        st1920.automaton.REString rEString24 = rEString4.makeExclude(rEString22);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString34 = rEString28.makeAnyChar(rEString33);
        st1920.automaton.REString rEString35 = rEString26.makeAnyChar(rEString34);
        st1920.automaton.REString rEString36 = rEString4.makeNothing(rEString35);
        boolean boolean37 = st1920.automaton.REGEXWrapper.matches("*", rEString35);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString41.makeExclude(rEString44);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString58.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString51.makeZeroOrOne(rEString64);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString79 = rEString73.makeAnyChar(rEString78);
        st1920.automaton.REString rEString80 = rEString70.makeExclude(rEString73);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString70.makeAlpha(rEString82);
        st1920.automaton.REString rEString84 = rEString51.makeClass(rEString70);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("~.+");
        st1920.automaton.REString rEString87 = rEString70.makeExcludeClass(rEString86);
        rEString86.string = "~|?";
        java.lang.String str90 = rEString86.string;
        st1920.automaton.REString rEString91 = rEString35.makeExcludeClass(rEString86);
        rEString91.string = "~..#";
        rEString91.string = "~@";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "~|?" + "'", str90.equals("~|?"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString11 = rEString5.makeAnyChar(rEString10);
        st1920.automaton.REString rEString12 = rEString3.makeAnyChar(rEString11);
        boolean boolean13 = st1920.automaton.REGEXWrapper.matches("~.+", rEString3);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        java.lang.String str19 = rEString17.string;
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString23.makeExclude(rEString26);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString23.makeAlpha(rEString35);
        st1920.automaton.REString rEString37 = rEString17.makeExclude(rEString35);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString41.makeExclude(rEString44);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString64 = rEString58.makeAnyChar(rEString63);
        st1920.automaton.REString rEString65 = rEString55.makeExclude(rEString58);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString55.makeAlpha(rEString67);
        st1920.automaton.REString rEString69 = rEString51.makeAlpha(rEString67);
        st1920.automaton.REString rEString70 = rEString37.makeNothing(rEString51);
        st1920.automaton.REString rEString71 = rEString3.makeClass(rEString70);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString73.makeExclude(rEString75);
        st1920.automaton.REString rEString77 = rEString3.makeZeroOrOne(rEString75);
        rEString77.string = "hi!";
        boolean boolean80 = st1920.automaton.REGEXWrapper.matches("+", rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString12.makeAlpha(rEString24);
        st1920.automaton.REString rEString26 = rEString7.makeAny(rEString25);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString30.makeExclude(rEString33);
        st1920.automaton.REString rEString41 = rEString26.makeNum(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString45.makeExclude(rEString48);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString59.makeExclude(rEString62);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString59.makeAlpha(rEString71);
        st1920.automaton.REString rEString73 = rEString55.makeAlpha(rEString71);
        st1920.automaton.REString rEString74 = rEString26.makeExclude(rEString55);
        boolean boolean75 = st1920.automaton.REGEXWrapper.matches("~", rEString26);
        rEString26.string = "hi!";
        java.lang.String str78 = rEString26.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "hi!" + "'", str78.equals("hi!"));
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        java.lang.String str5 = rEString3.string;
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString9.makeExclude(rEString12);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString9.makeAlpha(rEString21);
        st1920.automaton.REString rEString23 = rEString3.makeExclude(rEString21);
        rEString21.string = "";
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString49 = rEString39.makeExclude(rEString42);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString56.makeAnyChar(rEString61);
        st1920.automaton.REString rEString63 = rEString53.makeExclude(rEString56);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString53.makeAlpha(rEString65);
        st1920.automaton.REString rEString67 = rEString49.makeAlpha(rEString65);
        boolean boolean68 = st1920.automaton.REGEXWrapper.matches("~.+", rEString65);
        boolean boolean69 = st1920.automaton.REGEXWrapper.matches("hi!", rEString65);
        st1920.automaton.REString rEString70 = rEString27.makeOneOrMore(rEString65);
        st1920.automaton.REString rEString71 = rEString21.makeNothing(rEString65);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("~~&");
        st1920.automaton.REString rEString74 = rEString21.makeExcludeClass(rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString78.makeAnyChar(rEString83);
        st1920.automaton.REString rEString85 = rEString76.makeAnyChar(rEString84);
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = rEString84.makeRange(rEString87, (int) (short) 100, (int) (byte) 0);
        java.lang.String str91 = rEString87.string;
        st1920.automaton.REString rEString92 = rEString74.makeOneOrMore(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "" + "'", str91.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("(~)");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString20 = rEString14.makeAnyChar(rEString19);
        st1920.automaton.REString rEString21 = rEString12.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString4.makeClass(rEString21);
        boolean boolean23 = st1920.automaton.REGEXWrapper.matches("*", rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("~|?");
        st1920.automaton.REString rEString26 = rEString22.makeNothing(rEString25);
        st1920.automaton.REString rEString27 = rEString1.makeOneOrMore(rEString22);
        st1920.automaton.REString rEString28 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString29 = rEString27.makeExclude(rEString28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString16 = rEString2.makeRange(rEString12, 10, 0);
        boolean boolean17 = st1920.automaton.REGEXWrapper.matches("~.", rEString12);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString21.makeExclude(rEString24);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString38.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString31.makeZeroOrOne(rEString44);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString50.makeAlpha(rEString62);
        st1920.automaton.REString rEString64 = rEString31.makeClass(rEString50);
        st1920.automaton.REString rEString67 = rEString12.makeRange(rEString31, (int) '4', (-1));
        rEString67.string = "~..@";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString24 = rEString14.makeExclude(rEString17);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString38 = rEString28.makeExclude(rEString31);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString28.makeAlpha(rEString40);
        st1920.automaton.REString rEString42 = rEString24.makeAlpha(rEString40);
        boolean boolean43 = st1920.automaton.REGEXWrapper.matches("~.+", rEString40);
        boolean boolean44 = st1920.automaton.REGEXWrapper.matches("hi!", rEString40);
        st1920.automaton.REString rEString45 = rEString2.makeOneOrMore(rEString40);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString47.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString40.makeZeroOrOne(rEString47);
        boolean boolean58 = st1920.automaton.REGEXWrapper.matches("[~..]<0-1>", rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString24 = rEString14.makeExclude(rEString17);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString31.makeAnyChar(rEString37);
        st1920.automaton.REString rEString39 = rEString24.makeZeroOrOne(rEString37);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString52 = rEString46.makeAnyChar(rEString51);
        st1920.automaton.REString rEString53 = rEString43.makeExclude(rEString46);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString43.makeAlpha(rEString55);
        st1920.automaton.REString rEString57 = rEString24.makeClass(rEString43);
        st1920.automaton.REString rEString60 = rEString9.makeRep(rEString24, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString61 = rEString5.makeZeroOrMore(rEString9);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString64 = rEString9.makeGroup(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString73.makeExclude(rEString75);
        st1920.automaton.REString rEString77 = rEString71.makeAnyChar(rEString76);
        st1920.automaton.REString rEString78 = rEString68.makeExclude(rEString71);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString68.makeAlpha(rEString80);
        rEString81.string = "";
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = rEString87.makeExclude(rEString89);
        st1920.automaton.REString rEString91 = rEString85.makeAnyChar(rEString90);
        st1920.automaton.REString rEString92 = rEString81.makeZeroOrMore(rEString91);
        st1920.automaton.REString rEString93 = rEString63.makeExcludeClass(rEString81);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = st1920.automaton.REGEXWrapper.matches("<100-0>", rEString93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: expected ']' at position 3");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString8.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString5.makeExclude(rEString8);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString29 = rEString22.makeAnyChar(rEString28);
        st1920.automaton.REString rEString30 = rEString15.makeZeroOrOne(rEString28);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        java.lang.String str36 = rEString34.string;
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString49 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString50 = rEString40.makeExclude(rEString43);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString40.makeAlpha(rEString52);
        st1920.automaton.REString rEString54 = rEString34.makeExclude(rEString52);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString64 = rEString58.makeAnyChar(rEString63);
        st1920.automaton.REString rEString65 = rEString56.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString34.makeNothing(rEString65);
        st1920.automaton.REString rEString67 = rEString30.makeAnyChar(rEString66);
        boolean boolean68 = st1920.automaton.REGEXWrapper.matches("a@", rEString67);
        boolean boolean69 = st1920.automaton.REGEXWrapper.matches("~~&", rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString10.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString2.makeClass(rEString19);
        boolean boolean21 = st1920.automaton.REGEXWrapper.matches("*", rEString20);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString24.makeAnyChar(rEString32);
        boolean boolean34 = st1920.automaton.REGEXWrapper.matches("~.+", rEString24);
        java.lang.String str35 = rEString24.string;
        st1920.automaton.REString rEString36 = rEString20.makeNum(rEString24);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString67.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString60.makeZeroOrOne(rEString73);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = rEString84.makeExclude(rEString86);
        st1920.automaton.REString rEString88 = rEString82.makeAnyChar(rEString87);
        st1920.automaton.REString rEString89 = rEString79.makeExclude(rEString82);
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString92 = rEString79.makeAlpha(rEString91);
        st1920.automaton.REString rEString93 = rEString60.makeClass(rEString79);
        st1920.automaton.REString rEString96 = rEString45.makeRep(rEString60, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString97 = rEString41.makeZeroOrMore(rEString45);
        st1920.automaton.REString rEString98 = rEString24.makeAlpha(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "" + "'", str35.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("(~)");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString20 = rEString14.makeAnyChar(rEString19);
        st1920.automaton.REString rEString21 = rEString12.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString4.makeClass(rEString21);
        boolean boolean23 = st1920.automaton.REGEXWrapper.matches("*", rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("~|?");
        st1920.automaton.REString rEString26 = rEString22.makeNothing(rEString25);
        st1920.automaton.REString rEString27 = rEString1.makeOneOrMore(rEString22);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString40 = rEString34.makeAnyChar(rEString39);
        st1920.automaton.REString rEString41 = rEString31.makeExclude(rEString34);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString49 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString48.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString31.makeOneOrMore(rEString54);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString67 = rEString58.makeAnyChar(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString69.makeAnyChar(rEString74);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = rEString84.makeExclude(rEString86);
        st1920.automaton.REString rEString88 = rEString82.makeAnyChar(rEString87);
        st1920.automaton.REString rEString89 = rEString79.makeExclude(rEString82);
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString92 = rEString79.makeAlpha(rEString91);
        st1920.automaton.REString rEString93 = rEString74.makeAny(rEString92);
        st1920.automaton.REString rEString94 = rEString58.makeClass(rEString92);
        st1920.automaton.REString rEString95 = rEString31.makeOneOrMore(rEString94);
        st1920.automaton.REString rEString96 = rEString27.makeExcludeClass(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        java.lang.String str6 = rEString4.string;
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString10.makeExclude(rEString13);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString10.makeAlpha(rEString22);
        st1920.automaton.REString rEString24 = rEString4.makeExclude(rEString22);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString36.makeExclude(rEString39);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString36.makeAlpha(rEString48);
        st1920.automaton.REString rEString50 = rEString31.makeAny(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString57.makeAnyChar(rEString62);
        st1920.automaton.REString rEString64 = rEString54.makeExclude(rEString57);
        st1920.automaton.REString rEString65 = rEString24.makeAnd(rEString31, rEString57);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString78 = rEString72.makeAnyChar(rEString77);
        st1920.automaton.REString rEString79 = rEString69.makeExclude(rEString72);
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString69.makeAlpha(rEString81);
        st1920.automaton.REString rEString83 = rEString57.makeNothing(rEString69);
        java.lang.String str84 = rEString69.string;
        java.lang.String str85 = rEString69.string;
        boolean boolean86 = st1920.automaton.REGEXWrapper.matches("", rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "" + "'", str84.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "" + "'", str85.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        boolean boolean3 = st1920.automaton.REGEXWrapper.matches("~~&", rEString2);
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString11 = rEString5.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString13.makeExclude(rEString15);
        st1920.automaton.REString rEString19 = rEString5.makeRange(rEString15, 10, 0);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString23.makeExclude(rEString26);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString46 = rEString40.makeAnyChar(rEString45);
        st1920.automaton.REString rEString47 = rEString37.makeExclude(rEString40);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString54.makeAnyChar(rEString60);
        st1920.automaton.REString rEString62 = rEString47.makeZeroOrOne(rEString60);
        rEString62.string = "";
        st1920.automaton.REString rEString65 = rEString23.makeOneOrMore(rEString62);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString73 = rEString67.makeAnyChar(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString81 = rEString67.makeRange(rEString77, 10, 0);
        st1920.automaton.REString rEString82 = rEString62.makeAlpha(rEString77);
        st1920.automaton.REString rEString83 = rEString5.makeZeroOrOne(rEString62);
        st1920.automaton.REString rEString84 = rEString2.makeOneOrMore(rEString5);
        java.lang.Class<?> wildcardClass85 = rEString84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString14.makeClass(rEString33);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString49.makeAnyChar(rEString57);
        st1920.automaton.REString rEString61 = rEString33.makeRep(rEString49, (int) ' ', (int) (short) 10);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString65.makeExclude(rEString68);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = rEString84.makeExclude(rEString86);
        st1920.automaton.REString rEString88 = rEString82.makeAnyChar(rEString87);
        st1920.automaton.REString rEString89 = rEString79.makeExclude(rEString82);
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString92 = rEString79.makeAlpha(rEString91);
        st1920.automaton.REString rEString93 = rEString75.makeAlpha(rEString91);
        st1920.automaton.REString rEString96 = rEString61.makeRep(rEString75, (int) (byte) 0, (int) (short) 10);
        rEString75.string = "#";
        boolean boolean99 = st1920.automaton.REGEXWrapper.matches("", rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString6.makeAnyChar(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString17.makeExclude(rEString20);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString35 = rEString29.makeAnyChar(rEString34);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString34.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString27.makeZeroOrOne(rEString40);
        st1920.automaton.REString rEString43 = rEString12.makeZeroOrMore(rEString42);
        rEString43.string = "~";
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString64 = rEString50.makeRange(rEString60, 10, 0);
        st1920.automaton.REString rEString67 = rEString48.makeRep(rEString50, (int) 'a', (int) '4');
        boolean boolean68 = st1920.automaton.REGEXWrapper.matches("*", rEString67);
        st1920.automaton.REString rEString69 = rEString43.makeExcludeClass(rEString67);
        rEString67.string = "~|?";
        st1920.automaton.REString rEString72 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString73 = rEString67.makeClass(rEString72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString15 = rEString9.makeAnyChar(rEString14);
        st1920.automaton.REString rEString16 = rEString7.makeAnyChar(rEString15);
        java.lang.String str17 = rEString15.string;
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString21.makeExclude(rEString24);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString38.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString31.makeZeroOrOne(rEString44);
        st1920.automaton.REString rEString47 = rEString15.makeGroup(rEString44);
        st1920.automaton.REString rEString48 = rEString4.makeExclude(rEString47);
        boolean boolean49 = st1920.automaton.REGEXWrapper.matches("[^~.+]", rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "~." + "'", str17.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString20 = rEString14.makeAnyChar(rEString19);
        st1920.automaton.REString rEString21 = rEString11.makeExclude(rEString14);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString11.makeAlpha(rEString23);
        st1920.automaton.REString rEString25 = rEString6.makeAny(rEString24);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString32.makeAnyChar(rEString37);
        st1920.automaton.REString rEString39 = rEString29.makeExclude(rEString32);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString52 = rEString46.makeAnyChar(rEString51);
        st1920.automaton.REString rEString53 = rEString43.makeExclude(rEString46);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString43.makeAlpha(rEString55);
        st1920.automaton.REString rEString57 = rEString39.makeAlpha(rEString55);
        java.lang.String str58 = rEString57.string;
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("~..1");
        java.lang.String str61 = rEString60.string;
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString80 = rEString66.makeRange(rEString76, 10, 0);
        st1920.automaton.REString rEString83 = rEString64.makeRep(rEString66, (int) 'a', (int) '4');
        boolean boolean84 = st1920.automaton.REGEXWrapper.matches("*", rEString83);
        st1920.automaton.REString rEString85 = rEString60.makeExclude(rEString83);
        st1920.automaton.REString rEString86 = rEString57.makeOneOrMore(rEString83);
        st1920.automaton.REString rEString87 = rEString24.makeAnyChar(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "a" + "'", str58.equals("a"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "~..1" + "'", str61.equals("~..1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString16 = rEString2.makeRange(rEString12, 10, 0);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString21.makeExclude(rEString24);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString38.makeAnyChar(rEString43);
        st1920.automaton.REString rEString45 = rEString35.makeExclude(rEString38);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString47.makeAnyChar(rEString52);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString52.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString45.makeZeroOrOne(rEString58);
        rEString60.string = "";
        st1920.automaton.REString rEString63 = rEString21.makeOneOrMore(rEString60);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = rEString72.makeExclude(rEString74);
        st1920.automaton.REString rEString76 = rEString70.makeAnyChar(rEString75);
        st1920.automaton.REString rEString77 = rEString67.makeExclude(rEString70);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString85 = rEString79.makeAnyChar(rEString84);
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = rEString87.makeExclude(rEString89);
        st1920.automaton.REString rEString91 = rEString84.makeAnyChar(rEString90);
        st1920.automaton.REString rEString92 = rEString77.makeZeroOrOne(rEString90);
        st1920.automaton.REString rEString93 = rEString60.makeOneOrMore(rEString92);
        boolean boolean94 = st1920.automaton.REGEXWrapper.matches("+", rEString60);
        st1920.automaton.REString rEString97 = rEString16.makeRange(rEString60, (int) (short) 1, (int) (byte) 0);
        boolean boolean98 = st1920.automaton.REGEXWrapper.matches("~.<52-100>", rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString10.makeAnyChar(rEString18);
        java.lang.String str20 = rEString18.string;
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString34 = rEString24.makeExclude(rEString27);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString41.makeAnyChar(rEString47);
        st1920.automaton.REString rEString49 = rEString34.makeZeroOrOne(rEString47);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString56.makeAnyChar(rEString62);
        st1920.automaton.REString rEString64 = rEString34.makeOneOrMore(rEString63);
        st1920.automaton.REString rEString65 = rEString18.makeClass(rEString64);
        st1920.automaton.REString rEString66 = rEString2.makeOneOrMore(rEString18);
        boolean boolean67 = st1920.automaton.REGEXWrapper.matches("", rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "~." + "'", str20.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        java.lang.String str6 = rEString4.string;
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString10.makeExclude(rEString13);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString10.makeAlpha(rEString22);
        rEString23.string = "";
        st1920.automaton.REString rEString26 = rEString4.makeNum(rEString23);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString44 = rEString30.makeRange(rEString40, 10, 0);
        st1920.automaton.REString rEString47 = rEString28.makeRep(rEString30, (int) 'a', (int) '4');
        st1920.automaton.REString rEString48 = rEString23.makeNum(rEString47);
        boolean boolean49 = st1920.automaton.REGEXWrapper.matches("~.<0--1>", rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("~~&");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString13.makeExclude(rEString15);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString24 = rEString18.makeAnyChar(rEString23);
        st1920.automaton.REString rEString25 = rEString15.makeExclude(rEString18);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString32.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString25.makeZeroOrOne(rEString38);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString47.makeAnyChar(rEString52);
        st1920.automaton.REString rEString54 = rEString44.makeExclude(rEString47);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString44.makeAlpha(rEString56);
        st1920.automaton.REString rEString58 = rEString25.makeClass(rEString44);
        st1920.automaton.REString rEString61 = rEString10.makeRep(rEString25, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString62 = rEString6.makeZeroOrMore(rEString10);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString65 = rEString10.makeGroup(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString69.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString67.makeAnyChar(rEString75);
        java.lang.String str77 = rEString75.string;
        st1920.automaton.REString rEString78 = rEString65.makeAnyChar(rEString75);
        st1920.automaton.REString rEString79 = rEString1.makeExcludeClass(rEString65);
        java.lang.String str80 = rEString1.string;
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("~.");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("~~&");
        st1920.automaton.REString rEString85 = rEString82.makeClass(rEString84);
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("~?*");
        boolean boolean89 = st1920.automaton.REGEXWrapper.matches("~..", rEString88);
        st1920.automaton.REString rEString90 = rEString82.makeZeroOrMore(rEString88);
        st1920.automaton.REString rEString91 = rEString1.makeAny(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "~." + "'", str77.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "~~&" + "'", str80.equals("~~&"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString35.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString28.makeZeroOrOne(rEString41);
        rEString43.string = "";
        st1920.automaton.REString rEString46 = rEString4.makeOneOrMore(rEString43);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString67.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString60.makeZeroOrOne(rEString73);
        st1920.automaton.REString rEString76 = rEString43.makeOneOrMore(rEString75);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString43.makeExclude(rEString78);
        boolean boolean83 = st1920.automaton.REGEXWrapper.matches("~.", rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("~~.");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("~.+");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = rEString5.makeExclude(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString16 = rEString10.makeAnyChar(rEString15);
        st1920.automaton.REString rEString17 = rEString7.makeExclude(rEString10);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString7.makeAlpha(rEString19);
        rEString20.string = "";
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString20.makeZeroOrMore(rEString30);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString36.makeExclude(rEString39);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString50.makeAlpha(rEString62);
        st1920.automaton.REString rEString64 = rEString46.makeAlpha(rEString62);
        boolean boolean65 = st1920.automaton.REGEXWrapper.matches("~.+", rEString62);
        st1920.automaton.REString rEString66 = rEString20.makeAlpha(rEString62);
        st1920.automaton.REString rEString67 = rEString3.makeNum(rEString62);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString69.makeAnyChar(rEString74);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString81 = rEString74.makeAnyChar(rEString80);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString83.makeAnyChar(rEString88);
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = rEString91.makeExclude(rEString93);
        st1920.automaton.REString rEString95 = rEString88.makeAnyChar(rEString94);
        st1920.automaton.REString rEString96 = rEString81.makeAny(rEString94);
        st1920.automaton.REString rEString97 = rEString67.makeExcludeClass(rEString94);
        st1920.automaton.REString rEString98 = rEString1.makeOneOrMore(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("a");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString4.makeAnyChar(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        java.lang.String str19 = rEString17.string;
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString23.makeExclude(rEString26);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString23.makeAlpha(rEString35);
        st1920.automaton.REString rEString37 = rEString17.makeExclude(rEString35);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString52.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString49.makeExclude(rEString52);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString49.makeAlpha(rEString61);
        st1920.automaton.REString rEString63 = rEString44.makeAny(rEString62);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = rEString72.makeExclude(rEString74);
        st1920.automaton.REString rEString76 = rEString70.makeAnyChar(rEString75);
        st1920.automaton.REString rEString77 = rEString67.makeExclude(rEString70);
        st1920.automaton.REString rEString78 = rEString37.makeAnd(rEString44, rEString70);
        st1920.automaton.REString rEString79 = rEString12.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString2.makeAlpha(rEString78);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString82.makeExclude(rEString84);
        st1920.automaton.REString rEString86 = rEString2.makeAnyChar(rEString84);
        boolean boolean87 = st1920.automaton.REGEXWrapper.matches("~~", rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString4.makeAlpha(rEString16);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString21.makeExclude(rEString24);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString38.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString31.makeZeroOrOne(rEString44);
        java.lang.String str47 = rEString31.string;
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("~&#");
        st1920.automaton.REString rEString52 = rEString31.makeRange(rEString49, 1, (int) '4');
        st1920.automaton.REString rEString55 = rEString4.makeRange(rEString49, (-1), (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean56 = st1920.automaton.REGEXWrapper.matches("#", rEString55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: integer expected at position 4");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "~" + "'", str47.equals("~"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString45.makeAnyChar(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString50.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString43.makeZeroOrOne(rEString56);
        st1920.automaton.REString rEString59 = rEString27.makeExcludeClass(rEString58);
        boolean boolean60 = st1920.automaton.REGEXWrapper.matches("~..#", rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        boolean boolean12 = st1920.automaton.REGEXWrapper.matches("~.+", rEString2);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        java.lang.String str18 = rEString16.string;
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString31 = rEString25.makeAnyChar(rEString30);
        st1920.automaton.REString rEString32 = rEString22.makeExclude(rEString25);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString22.makeAlpha(rEString34);
        st1920.automaton.REString rEString36 = rEString16.makeExclude(rEString34);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString49 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString50 = rEString40.makeExclude(rEString43);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString57.makeAnyChar(rEString62);
        st1920.automaton.REString rEString64 = rEString54.makeExclude(rEString57);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString54.makeAlpha(rEString66);
        st1920.automaton.REString rEString68 = rEString50.makeAlpha(rEString66);
        st1920.automaton.REString rEString69 = rEString36.makeNothing(rEString50);
        st1920.automaton.REString rEString70 = rEString2.makeClass(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("[^~?]");
        st1920.automaton.REString rEString73 = rEString70.makeNum(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        java.lang.String str13 = rEString11.string;
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString17.makeExclude(rEString20);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString17.makeAlpha(rEString29);
        st1920.automaton.REString rEString31 = rEString11.makeExclude(rEString29);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString38.makeAnyChar(rEString43);
        st1920.automaton.REString rEString45 = rEString35.makeExclude(rEString38);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString52.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString49.makeExclude(rEString52);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString49.makeAlpha(rEString61);
        st1920.automaton.REString rEString63 = rEString45.makeAlpha(rEString61);
        st1920.automaton.REString rEString64 = rEString31.makeNothing(rEString45);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString73 = rEString67.makeAnyChar(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString81 = rEString67.makeRange(rEString77, 10, 0);
        boolean boolean82 = st1920.automaton.REGEXWrapper.matches("~.", rEString77);
        st1920.automaton.REString rEString83 = rEString64.makeAlpha(rEString77);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = rEString87.makeExclude(rEString89);
        st1920.automaton.REString rEString91 = rEString85.makeAnyChar(rEString90);
        st1920.automaton.REString rEString94 = rEString77.makeRep(rEString85, 100, 0);
        st1920.automaton.REString rEString95 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString96 = rEString6.makeAnd(rEString77, rEString95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~?*");
        boolean boolean3 = st1920.automaton.REGEXWrapper.matches("~..", rEString2);
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString5.makeAnyChar(rEString13);
        java.lang.String str15 = rEString13.string;
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString22.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString19.makeExclude(rEString22);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString29.makeZeroOrOne(rEString42);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString52 = rEString46.makeAnyChar(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString51.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString29.makeOneOrMore(rEString58);
        st1920.automaton.REString rEString60 = rEString13.makeClass(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString70 = rEString64.makeAnyChar(rEString69);
        st1920.automaton.REString rEString71 = rEString62.makeAnyChar(rEString70);
        st1920.automaton.REString rEString74 = rEString13.makeRange(rEString71, (int) (short) 100, (int) (short) 0);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString76.makeAnyChar(rEString81);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = rEString84.makeExclude(rEString86);
        st1920.automaton.REString rEString90 = rEString76.makeRange(rEString86, 10, 0);
        st1920.automaton.REString rEString91 = rEString71.makeZeroOrMore(rEString86);
        rEString86.string = "~~.";
        st1920.automaton.REString rEString94 = rEString2.makeAlpha(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "~." + "'", str15.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("~.");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("~~&");
        st1920.automaton.REString rEString4 = rEString1.makeClass(rEString3);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("~?*");
        boolean boolean8 = st1920.automaton.REGEXWrapper.matches("~..", rEString7);
        st1920.automaton.REString rEString9 = rEString1.makeZeroOrMore(rEString7);
        st1920.automaton.REString rEString10 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString11 = rEString1.makeAnyChar(rEString10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString7.makeAnyChar(rEString13);
        boolean boolean15 = st1920.automaton.REGEXWrapper.matches("a@", rEString14);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString34 = rEString25.makeAnyChar(rEString33);
        java.lang.String str35 = rEString33.string;
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString49 = rEString39.makeExclude(rEString42);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString56.makeAnyChar(rEString62);
        st1920.automaton.REString rEString64 = rEString49.makeZeroOrOne(rEString62);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString78 = rEString71.makeAnyChar(rEString77);
        st1920.automaton.REString rEString79 = rEString49.makeOneOrMore(rEString78);
        st1920.automaton.REString rEString80 = rEString33.makeClass(rEString79);
        st1920.automaton.REString rEString81 = rEString17.makeOneOrMore(rEString33);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = rEString83.makeExclude(rEString85);
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString93 = rEString90.makeExclude(rEString92);
        st1920.automaton.REString rEString94 = rEString88.makeAnyChar(rEString93);
        st1920.automaton.REString rEString95 = rEString85.makeExclude(rEString88);
        st1920.automaton.REString rEString96 = rEString81.makeExcludeClass(rEString88);
        st1920.automaton.REString rEString97 = rEString14.makeOneOrMore(rEString96);
        rEString14.string = "~~&";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "~." + "'", str35.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("(~)");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString20 = rEString14.makeAnyChar(rEString19);
        st1920.automaton.REString rEString21 = rEString12.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString4.makeClass(rEString21);
        boolean boolean23 = st1920.automaton.REGEXWrapper.matches("*", rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("~|?");
        st1920.automaton.REString rEString26 = rEString22.makeNothing(rEString25);
        st1920.automaton.REString rEString27 = rEString1.makeOneOrMore(rEString22);
        java.lang.Class<?> wildcardClass28 = rEString27.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString13.makeExclude(rEString15);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString24 = rEString18.makeAnyChar(rEString23);
        st1920.automaton.REString rEString25 = rEString15.makeExclude(rEString18);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString32.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString25.makeZeroOrOne(rEString38);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString47.makeAnyChar(rEString52);
        st1920.automaton.REString rEString54 = rEString44.makeExclude(rEString47);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString68 = rEString58.makeExclude(rEString61);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = rEString72.makeExclude(rEString74);
        st1920.automaton.REString rEString76 = rEString70.makeAnyChar(rEString75);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString75.makeAnyChar(rEString81);
        st1920.automaton.REString rEString83 = rEString58.makeOneOrMore(rEString81);
        st1920.automaton.REString rEString84 = rEString38.makeOr(rEString54, rEString58);
        st1920.automaton.REString rEString85 = rEString10.makeZeroOrOne(rEString84);
        boolean boolean86 = st1920.automaton.REGEXWrapper.matches("~?", rEString84);
        java.lang.String str87 = rEString84.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "~|" + "'", str87.equals("~|"));
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString64.makeAnyChar(rEString70);
        st1920.automaton.REString rEString72 = rEString57.makeZeroOrOne(rEString70);
        st1920.automaton.REString rEString73 = rEString42.makeZeroOrMore(rEString72);
        st1920.automaton.REString rEString74 = rEString14.makeZeroOrOne(rEString73);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = st1920.automaton.REGEXWrapper.matches("", rEString14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        rEString2.string = "";
        boolean boolean8 = st1920.automaton.REGEXWrapper.matches("~..{100,0}{35,10}#", rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("a@");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString8.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString5.makeExclude(rEString8);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString29 = rEString23.makeAnyChar(rEString28);
        st1920.automaton.REString rEString30 = rEString20.makeExclude(rEString23);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString37.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString34.makeExclude(rEString37);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString34.makeAlpha(rEString46);
        st1920.automaton.REString rEString48 = rEString30.makeAlpha(rEString46);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString55.makeAnyChar(rEString60);
        st1920.automaton.REString rEString62 = rEString52.makeExclude(rEString55);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString52.makeAlpha(rEString64);
        st1920.automaton.REString rEString68 = rEString30.makeRange(rEString52, (int) (byte) 1, (int) (byte) 100);
        boolean boolean69 = st1920.automaton.REGEXWrapper.matches("~.", rEString68);
        st1920.automaton.REString rEString72 = rEString15.makeRange(rEString68, 100, 0);
        st1920.automaton.REString rEString73 = rEString1.makeNum(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("(~.)");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString4.makeAnyChar(rEString12);
        boolean boolean14 = st1920.automaton.REGEXWrapper.matches("~.+", rEString4);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        java.lang.String str20 = rEString18.string;
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString34 = rEString24.makeExclude(rEString27);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString24.makeAlpha(rEString36);
        st1920.automaton.REString rEString38 = rEString18.makeExclude(rEString36);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString45.makeAnyChar(rEString50);
        st1920.automaton.REString rEString52 = rEString42.makeExclude(rEString45);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString56.makeExclude(rEString59);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString56.makeAlpha(rEString68);
        st1920.automaton.REString rEString70 = rEString52.makeAlpha(rEString68);
        st1920.automaton.REString rEString71 = rEString38.makeNothing(rEString52);
        st1920.automaton.REString rEString72 = rEString4.makeClass(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString78 = rEString4.makeZeroOrOne(rEString76);
        st1920.automaton.REString rEString79 = rEString1.makeAny(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString15 = rEString1.makeRange(rEString11, 10, 0);
        rEString11.string = "~.";
        java.lang.String str18 = rEString11.string;
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString30.makeExclude(rEString33);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString30.makeAlpha(rEString42);
        st1920.automaton.REString rEString44 = rEString25.makeAny(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString48.makeExclude(rEString51);
        st1920.automaton.REString rEString59 = rEString44.makeNum(rEString58);
        st1920.automaton.REString rEString60 = rEString11.makeExcludeClass(rEString44);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString65.makeExclude(rEString68);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString65.makeAlpha(rEString77);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = rEString84.makeExclude(rEString86);
        st1920.automaton.REString rEString88 = rEString82.makeAnyChar(rEString87);
        st1920.automaton.REString rEString89 = rEString80.makeAnyChar(rEString88);
        st1920.automaton.REString rEString90 = rEString65.makeAlpha(rEString88);
        boolean boolean91 = st1920.automaton.REGEXWrapper.matches("~~.", rEString90);
        st1920.automaton.REString rEString92 = rEString60.makeNum(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "~." + "'", str18.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString14.makeClass(rEString33);
        rEString47.string = "~|?";
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("~&#");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString51, rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString56.makeAnyChar(rEString61);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("*");
        st1920.automaton.REString rEString65 = rEString61.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString54.makeAnyChar(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("(~)");
        st1920.automaton.REString rEString69 = rEString66.makeAny(rEString68);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean70 = st1920.automaton.REGEXWrapper.matches("~?", rEString68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: expected ')' at position 3");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString9.makeExclude(rEString12);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString26.makeAnyChar(rEString32);
        st1920.automaton.REString rEString34 = rEString19.makeZeroOrOne(rEString32);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString47 = rEString41.makeAnyChar(rEString46);
        st1920.automaton.REString rEString48 = rEString38.makeExclude(rEString41);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString55.makeAnyChar(rEString60);
        st1920.automaton.REString rEString62 = rEString52.makeExclude(rEString55);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString52.makeAlpha(rEString64);
        st1920.automaton.REString rEString66 = rEString48.makeAlpha(rEString64);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString34.makeOr(rEString48, rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString85 = rEString79.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString76.makeExclude(rEString79);
        st1920.automaton.REString rEString89 = rEString34.makeRange(rEString86, (int) (byte) -1, (int) (byte) -1);
        st1920.automaton.REString rEString90 = rEString2.makeAny(rEString89);
        java.lang.String str91 = rEString90.string;
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("~.");
        st1920.automaton.REString rEString95 = new st1920.automaton.REString("~~&");
        st1920.automaton.REString rEString96 = rEString93.makeClass(rEString95);
        st1920.automaton.REString rEString97 = rEString90.makeOneOrMore(rEString93);
        boolean boolean98 = st1920.automaton.REGEXWrapper.matches("~.<52-100>", rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "~{-1,-1}@" + "'", str91.equals("~{-1,-1}@"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString8.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString5.makeExclude(rEString8);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString29 = rEString22.makeAnyChar(rEString28);
        st1920.automaton.REString rEString30 = rEString15.makeZeroOrOne(rEString28);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString37.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString34.makeExclude(rEString37);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString48.makeExclude(rEString51);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString48.makeAlpha(rEString60);
        st1920.automaton.REString rEString62 = rEString44.makeAlpha(rEString60);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString30.makeOr(rEString44, rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString81 = rEString75.makeAnyChar(rEString80);
        st1920.automaton.REString rEString82 = rEString72.makeExclude(rEString75);
        st1920.automaton.REString rEString85 = rEString30.makeRange(rEString82, (int) (byte) -1, (int) (byte) -1);
        boolean boolean86 = st1920.automaton.REGEXWrapper.matches("*", rEString30);
        boolean boolean87 = st1920.automaton.REGEXWrapper.matches("~@@", rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("~..1");
        java.lang.String str2 = rEString1.string;
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString15 = rEString9.makeAnyChar(rEString14);
        st1920.automaton.REString rEString16 = rEString6.makeExclude(rEString9);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString21.makeExclude(rEString24);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString38.makeAnyChar(rEString43);
        st1920.automaton.REString rEString45 = rEString35.makeExclude(rEString38);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString35.makeAlpha(rEString47);
        st1920.automaton.REString rEString49 = rEString31.makeAlpha(rEString47);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString56.makeAnyChar(rEString61);
        st1920.automaton.REString rEString63 = rEString53.makeExclude(rEString56);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString53.makeAlpha(rEString65);
        st1920.automaton.REString rEString69 = rEString31.makeRange(rEString53, (int) (byte) 1, (int) (byte) 100);
        boolean boolean70 = st1920.automaton.REGEXWrapper.matches("~.", rEString69);
        st1920.automaton.REString rEString73 = rEString16.makeRange(rEString69, 100, 0);
        st1920.automaton.REString rEString74 = rEString1.makeNothing(rEString69);
        java.lang.String str75 = rEString69.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "~..1" + "'", str2.equals("~..1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "{1,100}" + "'", str75.equals("{1,100}"));
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~.+");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString18 = rEString4.makeRange(rEString14, 10, 0);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString31 = rEString25.makeAnyChar(rEString30);
        st1920.automaton.REString rEString32 = rEString22.makeExclude(rEString25);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString36.makeExclude(rEString39);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString53.makeAnyChar(rEString59);
        st1920.automaton.REString rEString61 = rEString46.makeZeroOrOne(rEString59);
        rEString61.string = "";
        st1920.automaton.REString rEString64 = rEString22.makeOneOrMore(rEString61);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString80 = rEString66.makeRange(rEString76, 10, 0);
        st1920.automaton.REString rEString81 = rEString61.makeAlpha(rEString76);
        st1920.automaton.REString rEString82 = rEString4.makeZeroOrOne(rEString61);
        st1920.automaton.REString rEString83 = rEString2.makeNum(rEString82);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("[a]");
        st1920.automaton.REString rEString86 = rEString82.makeClass(rEString85);
        boolean boolean87 = st1920.automaton.REGEXWrapper.matches("~|", rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString17.makeExclude(rEString20);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString17.makeAlpha(rEString29);
        st1920.automaton.REString rEString31 = rEString13.makeAlpha(rEString29);
        java.lang.String str32 = rEString31.string;
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("~..1");
        java.lang.String str35 = rEString34.string;
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString46 = rEString40.makeAnyChar(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString54 = rEString40.makeRange(rEString50, 10, 0);
        st1920.automaton.REString rEString57 = rEString38.makeRep(rEString40, (int) 'a', (int) '4');
        boolean boolean58 = st1920.automaton.REGEXWrapper.matches("*", rEString57);
        st1920.automaton.REString rEString59 = rEString34.makeExclude(rEString57);
        st1920.automaton.REString rEString60 = rEString31.makeOneOrMore(rEString57);
        java.lang.Class<?> wildcardClass61 = rEString31.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "a" + "'", str32.equals("a"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "~..1" + "'", str35.equals("~..1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString17.makeExclude(rEString20);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString17.makeAlpha(rEString29);
        st1920.automaton.REString rEString31 = rEString13.makeAlpha(rEString29);
        java.lang.String str32 = rEString31.string;
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("~..1");
        java.lang.String str35 = rEString34.string;
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString46 = rEString40.makeAnyChar(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString54 = rEString40.makeRange(rEString50, 10, 0);
        st1920.automaton.REString rEString57 = rEString38.makeRep(rEString40, (int) 'a', (int) '4');
        boolean boolean58 = st1920.automaton.REGEXWrapper.matches("*", rEString57);
        st1920.automaton.REString rEString59 = rEString34.makeExclude(rEString57);
        st1920.automaton.REString rEString60 = rEString31.makeOneOrMore(rEString57);
        java.lang.String str61 = rEString31.string;
        st1920.automaton.REString rEString62 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString63 = rEString31.makeNum(rEString62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "a" + "'", str32.equals("a"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "~..1" + "'", str35.equals("~..1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "a" + "'", str61.equals("a"));
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString10.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString2.makeClass(rEString19);
        boolean boolean21 = st1920.automaton.REGEXWrapper.matches("*", rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("~|?");
        st1920.automaton.REString rEString24 = rEString20.makeNothing(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString31.makeAnyChar(rEString39);
        java.lang.String str41 = rEString39.string;
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString45.makeExclude(rEString48);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString57.makeAnyChar(rEString62);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString69 = rEString62.makeAnyChar(rEString68);
        st1920.automaton.REString rEString70 = rEString55.makeZeroOrOne(rEString68);
        st1920.automaton.REString rEString71 = rEString39.makeGroup(rEString68);
        st1920.automaton.REString rEString72 = rEString28.makeExclude(rEString71);
        rEString71.string = "~.";
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString76.makeAnyChar(rEString81);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("[^~?]");
        st1920.automaton.REString rEString85 = rEString71.makeOr(rEString81, rEString84);
        st1920.automaton.REString rEString88 = rEString24.makeRep(rEString85, 0, 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "~." + "'", str41.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString7.makeAnyChar(rEString13);
        boolean boolean15 = st1920.automaton.REGEXWrapper.matches("a@", rEString14);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString27.makeExclude(rEString30);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString27.makeAlpha(rEString39);
        st1920.automaton.REString rEString41 = rEString22.makeAny(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString45.makeExclude(rEString48);
        st1920.automaton.REString rEString56 = rEString41.makeNum(rEString55);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString75 = rEString61.makeRange(rEString71, 10, 0);
        st1920.automaton.REString rEString78 = rEString59.makeRep(rEString61, (int) 'a', (int) '4');
        boolean boolean79 = st1920.automaton.REGEXWrapper.matches("~.+", rEString59);
        st1920.automaton.REString rEString82 = rEString55.makeRep(rEString59, (int) (byte) 0, (int) (byte) -1);
        st1920.automaton.REString rEString83 = rEString14.makeNothing(rEString82);
        java.lang.String str84 = rEString14.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "~." + "'", str84.equals("~."));
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString20.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString13.makeZeroOrOne(rEString26);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        boolean boolean44 = st1920.automaton.REGEXWrapper.matches("a@", rEString43);
        st1920.automaton.REString rEString45 = rEString13.makeAlpha(rEString43);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString52.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString49.makeExclude(rEString52);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString73 = rEString66.makeAnyChar(rEString72);
        st1920.automaton.REString rEString74 = rEString59.makeZeroOrOne(rEString72);
        java.lang.String str75 = rEString59.string;
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("~&#");
        st1920.automaton.REString rEString80 = rEString59.makeRange(rEString77, 1, (int) '4');
        java.lang.String str81 = rEString77.string;
        st1920.automaton.REString rEString82 = rEString45.makeAnyChar(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "~" + "'", str75.equals("~"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "~&#" + "'", str81.equals("~&#"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("~.");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("~~&");
        st1920.automaton.REString rEString4 = rEString1.makeClass(rEString3);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("~?*");
        boolean boolean8 = st1920.automaton.REGEXWrapper.matches("~..", rEString7);
        st1920.automaton.REString rEString9 = rEString1.makeZeroOrMore(rEString7);
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString23 = rEString13.makeExclude(rEString16);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString38 = rEString28.makeExclude(rEString31);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString45.makeAnyChar(rEString50);
        st1920.automaton.REString rEString52 = rEString42.makeExclude(rEString45);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString42.makeAlpha(rEString54);
        st1920.automaton.REString rEString56 = rEString38.makeAlpha(rEString54);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString69 = rEString63.makeAnyChar(rEString68);
        st1920.automaton.REString rEString70 = rEString60.makeExclude(rEString63);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString60.makeAlpha(rEString72);
        st1920.automaton.REString rEString76 = rEString38.makeRange(rEString60, (int) (byte) 1, (int) (byte) 100);
        boolean boolean77 = st1920.automaton.REGEXWrapper.matches("~.", rEString76);
        st1920.automaton.REString rEString80 = rEString23.makeRange(rEString76, 100, 0);
        st1920.automaton.REString rEString83 = rEString9.makeRep(rEString76, (int) '4', 10);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("~&#");
        st1920.automaton.REString rEString86 = rEString76.makeExclude(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString27 = rEString13.makeRange(rEString23, 10, 0);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString40 = rEString34.makeAnyChar(rEString39);
        st1920.automaton.REString rEString41 = rEString31.makeExclude(rEString34);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString49 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString48.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString41.makeZeroOrOne(rEString54);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString64 = rEString58.makeAnyChar(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString70 = rEString63.makeAnyChar(rEString69);
        st1920.automaton.REString rEString71 = rEString41.makeOneOrMore(rEString70);
        st1920.automaton.REString rEString72 = rEString23.makeNothing(rEString41);
        st1920.automaton.REString rEString73 = rEString2.makeAnyChar(rEString72);
        boolean boolean74 = st1920.automaton.REGEXWrapper.matches("(~.)", rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString16 = rEString2.makeRange(rEString12, 10, 0);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString29 = rEString23.makeAnyChar(rEString28);
        st1920.automaton.REString rEString30 = rEString20.makeExclude(rEString23);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString32.makeAnyChar(rEString37);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString37.makeAnyChar(rEString43);
        st1920.automaton.REString rEString45 = rEString30.makeZeroOrOne(rEString43);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString47.makeAnyChar(rEString52);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString52.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString30.makeOneOrMore(rEString59);
        st1920.automaton.REString rEString61 = rEString12.makeNothing(rEString30);
        boolean boolean62 = st1920.automaton.REGEXWrapper.matches("{1,100}", rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        rEString2.string = "";
        boolean boolean8 = st1920.automaton.REGEXWrapper.matches("[^~?]", rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString10.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString2.makeClass(rEString19);
        boolean boolean21 = st1920.automaton.REGEXWrapper.matches("*", rEString20);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString24.makeAnyChar(rEString32);
        boolean boolean34 = st1920.automaton.REGEXWrapper.matches("~.+", rEString24);
        java.lang.String str35 = rEString24.string;
        st1920.automaton.REString rEString36 = rEString20.makeNum(rEString24);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString41.makeExclude(rEString44);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString58.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString51.makeZeroOrOne(rEString64);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString79 = rEString73.makeAnyChar(rEString78);
        st1920.automaton.REString rEString80 = rEString70.makeExclude(rEString73);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString70.makeAlpha(rEString82);
        st1920.automaton.REString rEString84 = rEString51.makeClass(rEString70);
        rEString84.string = "~|?";
        boolean boolean87 = st1920.automaton.REGEXWrapper.matches("~|~", rEString84);
        rEString84.string = "~..";
        st1920.automaton.REString rEString92 = rEString36.makeRep(rEString84, (int) (byte) 100, (int) (short) 100);
        java.lang.Class<?> wildcardClass93 = rEString36.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "" + "'", str35.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString10.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString2.makeClass(rEString19);
        boolean boolean21 = st1920.automaton.REGEXWrapper.matches("*", rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("~|?");
        st1920.automaton.REString rEString24 = rEString20.makeNothing(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("~..1");
        java.lang.String str27 = rEString26.string;
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString32.makeAnyChar(rEString37);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString46 = rEString32.makeRange(rEString42, 10, 0);
        st1920.automaton.REString rEString49 = rEString30.makeRep(rEString32, (int) 'a', (int) '4');
        boolean boolean50 = st1920.automaton.REGEXWrapper.matches("*", rEString49);
        st1920.automaton.REString rEString51 = rEString26.makeExclude(rEString49);
        st1920.automaton.REString rEString52 = rEString20.makeNothing(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "~..1" + "'", str27.equals("~..1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString18 = rEString4.makeRange(rEString14, 10, 0);
        st1920.automaton.REString rEString21 = rEString2.makeRep(rEString4, (int) 'a', (int) '4');
        boolean boolean22 = st1920.automaton.REGEXWrapper.matches("[^~?]", rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~?*");
        boolean boolean3 = st1920.automaton.REGEXWrapper.matches("~..", rEString2);
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString9.makeExclude(rEString12);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString26.makeAnyChar(rEString32);
        st1920.automaton.REString rEString34 = rEString19.makeZeroOrOne(rEString32);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString47 = rEString41.makeAnyChar(rEString46);
        st1920.automaton.REString rEString48 = rEString38.makeExclude(rEString41);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString55.makeAnyChar(rEString60);
        st1920.automaton.REString rEString62 = rEString52.makeExclude(rEString55);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString52.makeAlpha(rEString64);
        st1920.automaton.REString rEString66 = rEString48.makeAlpha(rEString64);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString34.makeOr(rEString48, rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString85 = rEString79.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString76.makeExclude(rEString79);
        st1920.automaton.REString rEString89 = rEString34.makeRange(rEString86, (int) (byte) -1, (int) (byte) -1);
        st1920.automaton.REString rEString90 = rEString5.makeZeroOrMore(rEString89);
        st1920.automaton.REString rEString91 = rEString2.makeAlpha(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString17.makeExclude(rEString20);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString17.makeAlpha(rEString29);
        st1920.automaton.REString rEString31 = rEString13.makeAlpha(rEString29);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString50 = rEString36.makeRange(rEString46, 10, 0);
        st1920.automaton.REString rEString53 = rEString34.makeRep(rEString36, (int) 'a', (int) '4');
        boolean boolean54 = st1920.automaton.REGEXWrapper.matches("~.+", rEString34);
        st1920.automaton.REString rEString55 = rEString13.makeGroup(rEString34);
        java.lang.String str56 = rEString13.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "~" + "'", str56.equals("~"));
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString14.makeClass(rEString33);
        rEString47.string = "~|?";
        boolean boolean50 = st1920.automaton.REGEXWrapper.matches("~|~", rEString47);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString52.makeAnyChar(rEString57);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString65.makeAnyChar(rEString70);
        st1920.automaton.REString rEString72 = rEString62.makeExclude(rEString65);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = rEString62.makeAlpha(rEString74);
        st1920.automaton.REString rEString76 = rEString57.makeAny(rEString75);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString89 = rEString83.makeAnyChar(rEString88);
        st1920.automaton.REString rEString90 = rEString80.makeExclude(rEString83);
        st1920.automaton.REString rEString91 = rEString76.makeNum(rEString90);
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = rEString90.makeClass(rEString93);
        rEString94.string = "~~.";
        st1920.automaton.REString rEString97 = rEString47.makeNothing(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString10.makeExclude(rEString13);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString22.makeAnyChar(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString34 = rEString27.makeAnyChar(rEString33);
        st1920.automaton.REString rEString35 = rEString20.makeZeroOrOne(rEString33);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString49 = rEString39.makeExclude(rEString42);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString39.makeAlpha(rEString51);
        st1920.automaton.REString rEString53 = rEString20.makeClass(rEString39);
        st1920.automaton.REString rEString56 = rEString5.makeRep(rEString20, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString74 = rEString60.makeRange(rEString70, 10, 0);
        st1920.automaton.REString rEString77 = rEString58.makeRep(rEString60, (int) 'a', (int) '4');
        st1920.automaton.REString rEString78 = rEString5.makeZeroOrOne(rEString58);
        java.lang.String str79 = rEString5.string;
        boolean boolean80 = st1920.automaton.REGEXWrapper.matches("", rEString5);
        boolean boolean81 = st1920.automaton.REGEXWrapper.matches("~.<0--1>", rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~?*");
        boolean boolean3 = st1920.automaton.REGEXWrapper.matches("~..", rEString2);
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString5.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString2.makeZeroOrOne(rEString14);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString22.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString19.makeExclude(rEString22);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString29.makeAlpha(rEString45);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        java.lang.String str53 = rEString51.string;
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString67 = rEString57.makeExclude(rEString60);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString57.makeAlpha(rEString69);
        st1920.automaton.REString rEString71 = rEString51.makeExclude(rEString69);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString81 = rEString75.makeAnyChar(rEString80);
        st1920.automaton.REString rEString82 = rEString73.makeAnyChar(rEString81);
        st1920.automaton.REString rEString83 = rEString51.makeNothing(rEString82);
        st1920.automaton.REString rEString84 = rEString47.makeOneOrMore(rEString51);
        st1920.automaton.REString rEString85 = rEString14.makeGroup(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString16 = rEString10.makeAnyChar(rEString15);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString15.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString29.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString22.makeAny(rEString35);
        st1920.automaton.REString rEString40 = rEString8.makeRep(rEString22, 0, (-1));
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString47.makeAnyChar(rEString52);
        st1920.automaton.REString rEString54 = rEString44.makeExclude(rEString47);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString56.makeAnyChar(rEString61);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString61.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString54.makeZeroOrOne(rEString67);
        st1920.automaton.REString rEString72 = rEString40.makeRange(rEString69, (int) '#', (int) '#');
        boolean boolean73 = st1920.automaton.REGEXWrapper.matches("", rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("a");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString11 = rEString5.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString13.makeExclude(rEString15);
        st1920.automaton.REString rEString19 = rEString5.makeRange(rEString15, 10, 0);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString23.makeExclude(rEString26);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString47 = rEString40.makeAnyChar(rEString46);
        st1920.automaton.REString rEString48 = rEString33.makeZeroOrOne(rEString46);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString55.makeAnyChar(rEString61);
        st1920.automaton.REString rEString63 = rEString33.makeOneOrMore(rEString62);
        st1920.automaton.REString rEString64 = rEString15.makeNothing(rEString33);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString69.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString67.makeAnyChar(rEString75);
        boolean boolean77 = st1920.automaton.REGEXWrapper.matches("~.+", rEString67);
        java.lang.String str78 = rEString67.string;
        st1920.automaton.REString rEString79 = rEString64.makeZeroOrMore(rEString67);
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = rEString83.makeExclude(rEString85);
        st1920.automaton.REString rEString87 = rEString81.makeAnyChar(rEString86);
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("*");
        st1920.automaton.REString rEString90 = rEString86.makeAnyChar(rEString89);
        st1920.automaton.REString rEString91 = rEString67.makeAlpha(rEString89);
        boolean boolean92 = st1920.automaton.REGEXWrapper.matches("~.1", rEString67);
        st1920.automaton.REString rEString95 = rEString2.makeRange(rEString67, 10, 10);
        boolean boolean96 = st1920.automaton.REGEXWrapper.matches("~..1", rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        java.lang.String str6 = rEString4.string;
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString10.makeExclude(rEString13);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString10.makeAlpha(rEString22);
        st1920.automaton.REString rEString24 = rEString4.makeExclude(rEString22);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString38 = rEString28.makeExclude(rEString31);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString45.makeAnyChar(rEString50);
        st1920.automaton.REString rEString52 = rEString42.makeExclude(rEString45);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString42.makeAlpha(rEString54);
        st1920.automaton.REString rEString56 = rEString38.makeAlpha(rEString54);
        st1920.automaton.REString rEString57 = rEString24.makeNothing(rEString38);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString74 = rEString60.makeRange(rEString70, 10, 0);
        boolean boolean75 = st1920.automaton.REGEXWrapper.matches("~.", rEString70);
        st1920.automaton.REString rEString76 = rEString57.makeAlpha(rEString70);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString78.makeAnyChar(rEString83);
        st1920.automaton.REString rEString87 = rEString70.makeRep(rEString78, 100, 0);
        boolean boolean88 = st1920.automaton.REGEXWrapper.matches("[~..]<0-1>", rEString87);
        java.lang.String str89 = rEString87.string;
        java.lang.Class<?> wildcardClass90 = rEString87.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "<100-0>" + "'", str89.equals("<100-0>"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString14.makeOneOrMore(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        java.lang.String str50 = rEString48.string;
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString57.makeAnyChar(rEString62);
        st1920.automaton.REString rEString64 = rEString54.makeExclude(rEString57);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString54.makeAlpha(rEString66);
        st1920.automaton.REString rEString68 = rEString48.makeExclude(rEString66);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString78 = rEString72.makeAnyChar(rEString77);
        st1920.automaton.REString rEString79 = rEString70.makeAnyChar(rEString78);
        st1920.automaton.REString rEString80 = rEString48.makeNothing(rEString79);
        st1920.automaton.REString rEString81 = rEString44.makeZeroOrMore(rEString79);
        rEString79.string = "~~.";
        boolean boolean84 = st1920.automaton.REGEXWrapper.matches("a@+", rEString79);
        java.lang.Class<?> wildcardClass85 = rEString79.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "" + "'", str50.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~~&");
        java.lang.String str3 = rEString2.string;
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("~.");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("~~&");
        st1920.automaton.REString rEString8 = rEString5.makeClass(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        java.lang.String str14 = rEString12.string;
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString18.makeAlpha(rEString30);
        st1920.automaton.REString rEString32 = rEString12.makeExclude(rEString30);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString36.makeExclude(rEString39);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString50.makeAlpha(rEString62);
        st1920.automaton.REString rEString64 = rEString46.makeAlpha(rEString62);
        st1920.automaton.REString rEString65 = rEString32.makeNothing(rEString46);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString82 = rEString68.makeRange(rEString78, 10, 0);
        boolean boolean83 = st1920.automaton.REGEXWrapper.matches("~.", rEString78);
        st1920.automaton.REString rEString84 = rEString65.makeAlpha(rEString78);
        st1920.automaton.REString rEString85 = rEString7.makeExcludeClass(rEString84);
        st1920.automaton.REString rEString86 = rEString2.makeNum(rEString7);
        boolean boolean87 = st1920.automaton.REGEXWrapper.matches("a@+", rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "~~&" + "'", str3.equals("~~&"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        boolean boolean12 = st1920.automaton.REGEXWrapper.matches("~.+", rEString2);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        java.lang.String str18 = rEString16.string;
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString31 = rEString25.makeAnyChar(rEString30);
        st1920.automaton.REString rEString32 = rEString22.makeExclude(rEString25);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString22.makeAlpha(rEString34);
        st1920.automaton.REString rEString36 = rEString16.makeExclude(rEString34);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString49 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString50 = rEString40.makeExclude(rEString43);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString57.makeAnyChar(rEString62);
        st1920.automaton.REString rEString64 = rEString54.makeExclude(rEString57);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString54.makeAlpha(rEString66);
        st1920.automaton.REString rEString68 = rEString50.makeAlpha(rEString66);
        st1920.automaton.REString rEString69 = rEString36.makeNothing(rEString50);
        st1920.automaton.REString rEString70 = rEString2.makeClass(rEString69);
        java.lang.Class<?> wildcardClass71 = rEString2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString23 = rEString13.makeExclude(rEString16);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString31 = rEString25.makeAnyChar(rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString30.makeAnyChar(rEString36);
        st1920.automaton.REString rEString38 = rEString23.makeZeroOrOne(rEString36);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString45.makeAnyChar(rEString50);
        st1920.automaton.REString rEString52 = rEString42.makeExclude(rEString45);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString42.makeAlpha(rEString54);
        st1920.automaton.REString rEString56 = rEString23.makeClass(rEString42);
        st1920.automaton.REString rEString59 = rEString8.makeRep(rEString23, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString60 = rEString4.makeZeroOrMore(rEString8);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString63 = rEString8.makeGroup(rEString62);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString80 = rEString66.makeRange(rEString76, 10, 0);
        boolean boolean81 = st1920.automaton.REGEXWrapper.matches("~.", rEString76);
        st1920.automaton.REString rEString82 = rEString8.makeGroup(rEString76);
        rEString76.string = "~~&";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("~{-1,-1}");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = rEString5.makeExclude(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString16 = rEString10.makeAnyChar(rEString15);
        st1920.automaton.REString rEString17 = rEString7.makeExclude(rEString10);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString21.makeExclude(rEString24);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString21.makeAlpha(rEString33);
        st1920.automaton.REString rEString35 = rEString17.makeAlpha(rEString33);
        boolean boolean36 = st1920.automaton.REGEXWrapper.matches("~.+", rEString33);
        boolean boolean37 = st1920.automaton.REGEXWrapper.matches("hi!", rEString33);
        st1920.automaton.REString rEString38 = rEString1.makeAnyChar(rEString33);
        rEString1.string = "a";
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString47.makeAnyChar(rEString52);
        st1920.automaton.REString rEString54 = rEString44.makeExclude(rEString47);
        java.lang.String str55 = rEString44.string;
        rEString44.string = "~&#";
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString60.makeAnyChar(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString73.makeExclude(rEString75);
        st1920.automaton.REString rEString77 = rEString71.makeAnyChar(rEString76);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString90 = rEString84.makeAnyChar(rEString89);
        st1920.automaton.REString rEString91 = rEString81.makeExclude(rEString84);
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString94 = rEString81.makeAlpha(rEString93);
        st1920.automaton.REString rEString95 = rEString76.makeAny(rEString94);
        st1920.automaton.REString rEString96 = rEString60.makeClass(rEString94);
        boolean boolean97 = st1920.automaton.REGEXWrapper.matches("[~.+]", rEString94);
        st1920.automaton.REString rEString98 = rEString44.makeGroup(rEString94);
        st1920.automaton.REString rEString99 = rEString1.makeClass(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = rEString5.makeExclude(rEString7);
        st1920.automaton.REString rEString9 = rEString3.makeAnyChar(rEString8);
        st1920.automaton.REString rEString10 = rEString1.makeAnyChar(rEString9);
        java.lang.String str11 = rEString9.string;
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString13.makeExclude(rEString15);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString24 = rEString18.makeAnyChar(rEString23);
        st1920.automaton.REString rEString25 = rEString15.makeExclude(rEString18);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString32.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString25.makeZeroOrOne(rEString38);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString47.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString25.makeOneOrMore(rEString54);
        st1920.automaton.REString rEString56 = rEString9.makeClass(rEString55);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString68 = rEString59.makeAnyChar(rEString67);
        boolean boolean69 = st1920.automaton.REGEXWrapper.matches("~.+", rEString59);
        java.lang.String str70 = rEString59.string;
        st1920.automaton.REString rEString71 = rEString56.makeZeroOrMore(rEString59);
        java.lang.String str72 = rEString59.string;
        st1920.automaton.REString rEString73 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString74 = rEString59.makeAlpha(rEString73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "~." + "'", str11.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "" + "'", str70.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        java.lang.String str5 = rEString3.string;
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString9.makeExclude(rEString12);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString9.makeAlpha(rEString21);
        st1920.automaton.REString rEString23 = rEString3.makeExclude(rEString21);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString38 = rEString28.makeExclude(rEString31);
        boolean boolean39 = st1920.automaton.REGEXWrapper.matches("+", rEString31);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString46.makeAnyChar(rEString54);
        java.lang.String str56 = rEString54.string;
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString69 = rEString63.makeAnyChar(rEString68);
        st1920.automaton.REString rEString70 = rEString60.makeExclude(rEString63);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString78 = rEString72.makeAnyChar(rEString77);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString77.makeAnyChar(rEString83);
        st1920.automaton.REString rEString85 = rEString70.makeZeroOrOne(rEString83);
        st1920.automaton.REString rEString86 = rEString54.makeGroup(rEString83);
        st1920.automaton.REString rEString87 = rEString43.makeExclude(rEString86);
        st1920.automaton.REString rEString90 = rEString31.makeRange(rEString86, 10, 0);
        st1920.automaton.REString rEString93 = rEString3.makeRange(rEString31, (int) '#', (int) (byte) 0);
        rEString3.string = "[]";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "~." + "'", str56.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = rEString5.makeExclude(rEString7);
        st1920.automaton.REString rEString9 = rEString3.makeAnyChar(rEString8);
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString23 = rEString13.makeExclude(rEString16);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString13.makeAlpha(rEString25);
        st1920.automaton.REString rEString27 = rEString8.makeAny(rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString40 = rEString34.makeAnyChar(rEString39);
        st1920.automaton.REString rEString41 = rEString31.makeExclude(rEString34);
        st1920.automaton.REString rEString42 = rEString27.makeNum(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString46.makeExclude(rEString49);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString69 = rEString63.makeAnyChar(rEString68);
        st1920.automaton.REString rEString70 = rEString60.makeExclude(rEString63);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString60.makeAlpha(rEString72);
        st1920.automaton.REString rEString74 = rEString56.makeAlpha(rEString72);
        st1920.automaton.REString rEString75 = rEString27.makeExclude(rEString56);
        boolean boolean76 = st1920.automaton.REGEXWrapper.matches("~", rEString27);
        boolean boolean77 = st1920.automaton.REGEXWrapper.matches("[^~.+]", rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString3.makeAlpha(rEString15);
        rEString16.string = "";
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString16.makeZeroOrMore(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString46.makeExclude(rEString49);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString46.makeAlpha(rEString58);
        st1920.automaton.REString rEString60 = rEString42.makeAlpha(rEString58);
        boolean boolean61 = st1920.automaton.REGEXWrapper.matches("~.+", rEString58);
        st1920.automaton.REString rEString62 = rEString16.makeAlpha(rEString58);
        java.lang.String str63 = rEString58.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "" + "'", str63.equals(""));
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString14.makeOneOrMore(rEString43);
        java.lang.String str45 = rEString44.string;
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString63 = rEString49.makeRange(rEString59, 10, 0);
        st1920.automaton.REString rEString66 = rEString47.makeRep(rEString49, (int) 'a', (int) '4');
        st1920.automaton.REString rEString67 = rEString44.makeAnyChar(rEString49);
        boolean boolean68 = st1920.automaton.REGEXWrapper.matches("~?", rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "~.+" + "'", str45.equals("~.+"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString13.makeAnyChar(rEString21);
        java.lang.String str23 = rEString21.string;
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString27.makeExclude(rEString30);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString44.makeAnyChar(rEString50);
        st1920.automaton.REString rEString52 = rEString37.makeZeroOrOne(rEString50);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString54.makeAnyChar(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString59.makeAnyChar(rEString65);
        st1920.automaton.REString rEString67 = rEString37.makeOneOrMore(rEString66);
        st1920.automaton.REString rEString68 = rEString21.makeClass(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString78 = rEString72.makeAnyChar(rEString77);
        st1920.automaton.REString rEString79 = rEString70.makeAnyChar(rEString78);
        st1920.automaton.REString rEString82 = rEString21.makeRange(rEString79, (int) (short) 100, (int) (short) 0);
        st1920.automaton.REString rEString85 = rEString11.makeRange(rEString82, (int) '#', (int) (short) 10);
        boolean boolean86 = st1920.automaton.REGEXWrapper.matches("~~&", rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "~." + "'", str23.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString27 = rEString13.makeRange(rEString23, 10, 0);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString40 = rEString34.makeAnyChar(rEString39);
        st1920.automaton.REString rEString41 = rEString31.makeExclude(rEString34);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString49 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString48.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString41.makeZeroOrOne(rEString54);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString64 = rEString58.makeAnyChar(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString70 = rEString63.makeAnyChar(rEString69);
        st1920.automaton.REString rEString71 = rEString41.makeOneOrMore(rEString70);
        st1920.automaton.REString rEString72 = rEString23.makeNothing(rEString41);
        st1920.automaton.REString rEString73 = rEString2.makeAnyChar(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString83 = rEString77.makeAnyChar(rEString82);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = rEString85.makeExclude(rEString87);
        st1920.automaton.REString rEString91 = rEString77.makeRange(rEString87, 10, 0);
        st1920.automaton.REString rEString94 = rEString75.makeRep(rEString77, (int) 'a', (int) '4');
        st1920.automaton.REString rEString95 = rEString72.makeAlpha(rEString77);
        boolean boolean96 = st1920.automaton.REGEXWrapper.matches("~..", rEString95);
        rEString95.string = "~|";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        java.lang.String str14 = rEString12.string;
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString32.makeAlpha(rEString44);
        st1920.automaton.REString rEString46 = rEString28.makeAlpha(rEString44);
        st1920.automaton.REString rEString47 = rEString2.makeAnd(rEString12, rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString54.makeAnyChar(rEString60);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString69 = rEString63.makeAnyChar(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString68.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString61.makeAny(rEString74);
        st1920.automaton.REString rEString77 = rEString46.makeExcludeClass(rEString61);
        boolean boolean78 = st1920.automaton.REGEXWrapper.matches("*", rEString46);
        java.lang.String str79 = rEString46.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "a" + "'", str79.equals("a"));
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString29.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString22.makeZeroOrOne(rEString35);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString41.makeExclude(rEString44);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString58.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString51.makeZeroOrOne(rEString64);
        st1920.automaton.REString rEString67 = rEString35.makeExcludeClass(rEString66);
        st1920.automaton.REString rEString68 = rEString8.makeOneOrMore(rEString67);
        java.lang.String str69 = rEString8.string;
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        java.lang.String str75 = rEString73.string;
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = rEString77.makeExclude(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = rEString84.makeExclude(rEString86);
        st1920.automaton.REString rEString88 = rEString82.makeAnyChar(rEString87);
        st1920.automaton.REString rEString89 = rEString79.makeExclude(rEString82);
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString92 = rEString79.makeAlpha(rEString91);
        st1920.automaton.REString rEString93 = rEString73.makeExclude(rEString91);
        st1920.automaton.REString rEString94 = rEString8.makeExclude(rEString93);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = st1920.automaton.REGEXWrapper.matches("~@@", rEString93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "~." + "'", str69.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "" + "'", str75.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString8.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString5.makeExclude(rEString8);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString29 = rEString22.makeAnyChar(rEString28);
        st1920.automaton.REString rEString30 = rEString15.makeZeroOrOne(rEString28);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString37.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString34.makeExclude(rEString37);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString48.makeExclude(rEString51);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString48.makeAlpha(rEString60);
        st1920.automaton.REString rEString62 = rEString44.makeAlpha(rEString60);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString69.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString66.makeExclude(rEString69);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString78.makeAnyChar(rEString83);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString90 = rEString83.makeAnyChar(rEString89);
        st1920.automaton.REString rEString91 = rEString76.makeZeroOrOne(rEString89);
        st1920.automaton.REString rEString92 = rEString44.makeExclude(rEString91);
        st1920.automaton.REString rEString95 = rEString30.makeRange(rEString92, (int) (byte) 10, (-1));
        boolean boolean96 = st1920.automaton.REGEXWrapper.matches("~.", rEString30);
        java.lang.String str97 = rEString30.string;
        boolean boolean98 = st1920.automaton.REGEXWrapper.matches("~.<0--1>", rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str97 + "' != '" + "~?" + "'", str97.equals("~?"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~?*");
        boolean boolean3 = st1920.automaton.REGEXWrapper.matches("~..", rEString2);
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString5.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString2.makeZeroOrOne(rEString14);
        rEString2.string = "[^~.+]";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString18.makeAlpha(rEString30);
        st1920.automaton.REString rEString32 = rEString14.makeAlpha(rEString30);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        java.lang.String str38 = rEString36.string;
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString45.makeAnyChar(rEString50);
        st1920.automaton.REString rEString52 = rEString42.makeExclude(rEString45);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString42.makeAlpha(rEString54);
        st1920.automaton.REString rEString56 = rEString36.makeExclude(rEString54);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString67 = rEString58.makeAnyChar(rEString66);
        st1920.automaton.REString rEString68 = rEString36.makeNothing(rEString67);
        st1920.automaton.REString rEString69 = rEString32.makeOneOrMore(rEString36);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = rEString73.makeExclude(rEString75);
        st1920.automaton.REString rEString77 = rEString71.makeAnyChar(rEString76);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("*");
        st1920.automaton.REString rEString80 = rEString76.makeAnyChar(rEString79);
        st1920.automaton.REString rEString81 = rEString36.makeExclude(rEString79);
        boolean boolean82 = st1920.automaton.REGEXWrapper.matches("~.<0--1>", rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("[^~.+]");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString15 = rEString9.makeAnyChar(rEString14);
        st1920.automaton.REString rEString16 = rEString6.makeExclude(rEString9);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString29 = rEString23.makeAnyChar(rEString28);
        st1920.automaton.REString rEString30 = rEString20.makeExclude(rEString23);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString32.makeAnyChar(rEString37);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString37.makeAnyChar(rEString43);
        st1920.automaton.REString rEString45 = rEString30.makeZeroOrOne(rEString43);
        rEString45.string = "";
        st1920.automaton.REString rEString48 = rEString6.makeOneOrMore(rEString45);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString64 = rEString58.makeAnyChar(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString70 = rEString63.makeAnyChar(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString78 = rEString72.makeAnyChar(rEString77);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString77.makeAnyChar(rEString83);
        st1920.automaton.REString rEString85 = rEString70.makeAny(rEString83);
        st1920.automaton.REString rEString88 = rEString56.makeRep(rEString70, 0, (-1));
        st1920.automaton.REString rEString91 = rEString48.makeRep(rEString70, (int) '4', (int) (short) 100);
        st1920.automaton.REString rEString92 = rEString2.makeExclude(rEString70);
        boolean boolean93 = st1920.automaton.REGEXWrapper.matches("+", rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString35.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString28.makeZeroOrOne(rEString41);
        rEString43.string = "";
        st1920.automaton.REString rEString46 = rEString4.makeOneOrMore(rEString43);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString62 = rEString48.makeRange(rEString58, 10, 0);
        st1920.automaton.REString rEString63 = rEString43.makeAlpha(rEString58);
        java.lang.String str64 = rEString43.string;
        boolean boolean65 = st1920.automaton.REGEXWrapper.matches("#", rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "" + "'", str64.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~?*");
        boolean boolean3 = st1920.automaton.REGEXWrapper.matches("~..", rEString2);
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString5.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString2.makeZeroOrOne(rEString14);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString24 = rEString18.makeAnyChar(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString34 = rEString28.makeAnyChar(rEString33);
        st1920.automaton.REString rEString35 = rEString26.makeAnyChar(rEString34);
        st1920.automaton.REString rEString36 = rEString18.makeClass(rEString35);
        boolean boolean37 = st1920.automaton.REGEXWrapper.matches("*", rEString36);
        st1920.automaton.REString rEString38 = rEString15.makeNum(rEString36);
        rEString15.string = "[^~]";
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString47.makeAnyChar(rEString52);
        st1920.automaton.REString rEString54 = rEString44.makeExclude(rEString47);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString68 = rEString58.makeExclude(rEString61);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString58.makeAlpha(rEString70);
        st1920.automaton.REString rEString72 = rEString54.makeAlpha(rEString70);
        st1920.automaton.REString rEString75 = rEString15.makeRange(rEString70, (int) (short) -1, (int) (short) -1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString17.makeExclude(rEString20);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString17.makeAlpha(rEString29);
        st1920.automaton.REString rEString31 = rEString13.makeAlpha(rEString29);
        java.lang.String str32 = rEString31.string;
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("~..1");
        java.lang.String str35 = rEString34.string;
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString46 = rEString40.makeAnyChar(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString54 = rEString40.makeRange(rEString50, 10, 0);
        st1920.automaton.REString rEString57 = rEString38.makeRep(rEString40, (int) 'a', (int) '4');
        boolean boolean58 = st1920.automaton.REGEXWrapper.matches("*", rEString57);
        st1920.automaton.REString rEString59 = rEString34.makeExclude(rEString57);
        st1920.automaton.REString rEString60 = rEString31.makeOneOrMore(rEString57);
        java.lang.String str61 = rEString31.string;
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString65.makeExclude(rEString68);
        st1920.automaton.REString rEString76 = rEString31.makeGroup(rEString68);
        st1920.automaton.REString rEString77 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString78 = rEString68.makeAny(rEString77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "a" + "'", str32.equals("a"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "~..1" + "'", str35.equals("~..1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "a" + "'", str61.equals("a"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~?*");
        boolean boolean3 = st1920.automaton.REGEXWrapper.matches("~..", rEString2);
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString5.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString2.makeZeroOrOne(rEString14);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString34 = rEString24.makeExclude(rEString27);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString41.makeAnyChar(rEString47);
        st1920.automaton.REString rEString49 = rEString34.makeZeroOrOne(rEString47);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString56.makeAnyChar(rEString61);
        st1920.automaton.REString rEString63 = rEString53.makeExclude(rEString56);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString53.makeAlpha(rEString65);
        st1920.automaton.REString rEString67 = rEString34.makeClass(rEString53);
        st1920.automaton.REString rEString70 = rEString19.makeRep(rEString34, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString74.makeAnyChar(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString82.makeExclude(rEString84);
        st1920.automaton.REString rEString88 = rEString74.makeRange(rEString84, 10, 0);
        st1920.automaton.REString rEString91 = rEString72.makeRep(rEString74, (int) 'a', (int) '4');
        st1920.automaton.REString rEString92 = rEString19.makeZeroOrOne(rEString72);
        st1920.automaton.REString rEString93 = rEString2.makeExcludeClass(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString32.makeAlpha(rEString44);
        st1920.automaton.REString rEString46 = rEString28.makeAlpha(rEString44);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString50.makeAlpha(rEString62);
        st1920.automaton.REString rEString66 = rEString28.makeRange(rEString50, (int) (byte) 1, (int) (byte) 100);
        boolean boolean67 = st1920.automaton.REGEXWrapper.matches("~.", rEString66);
        st1920.automaton.REString rEString70 = rEString13.makeRange(rEString66, 100, 0);
        st1920.automaton.REString rEString71 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString74 = rEString13.makeRep(rEString71, (int) (short) 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString8.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString6.makeAnyChar(rEString14);
        java.lang.String str16 = rEString14.string;
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString29 = rEString23.makeAnyChar(rEString28);
        st1920.automaton.REString rEString30 = rEString20.makeExclude(rEString23);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString32.makeAnyChar(rEString37);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString37.makeAnyChar(rEString43);
        st1920.automaton.REString rEString45 = rEString30.makeZeroOrOne(rEString43);
        st1920.automaton.REString rEString46 = rEString14.makeGroup(rEString43);
        st1920.automaton.REString rEString47 = rEString3.makeExclude(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString54.makeAnyChar(rEString60);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString69 = rEString63.makeAnyChar(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString68.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString61.makeAny(rEString74);
        st1920.automaton.REString rEString77 = rEString3.makeExcludeClass(rEString61);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = rEString84.makeExclude(rEString86);
        st1920.automaton.REString rEString88 = rEString82.makeAnyChar(rEString87);
        st1920.automaton.REString rEString89 = rEString80.makeAnyChar(rEString88);
        boolean boolean90 = st1920.automaton.REGEXWrapper.matches("~.+", rEString80);
        java.lang.String str91 = rEString80.string;
        st1920.automaton.REString rEString92 = rEString61.makeZeroOrMore(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "~." + "'", str16.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "" + "'", str91.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString15 = rEString1.makeRange(rEString11, 10, 0);
        rEString11.string = "~.";
        java.lang.String str18 = rEString11.string;
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString30.makeExclude(rEString33);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString30.makeAlpha(rEString42);
        st1920.automaton.REString rEString44 = rEString25.makeAny(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString48.makeExclude(rEString51);
        st1920.automaton.REString rEString59 = rEString44.makeNum(rEString58);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString70 = rEString64.makeAnyChar(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = rEString72.makeExclude(rEString74);
        st1920.automaton.REString rEString78 = rEString64.makeRange(rEString74, 10, 0);
        st1920.automaton.REString rEString81 = rEString62.makeRep(rEString64, (int) 'a', (int) '4');
        boolean boolean82 = st1920.automaton.REGEXWrapper.matches("~.+", rEString62);
        st1920.automaton.REString rEString85 = rEString58.makeRep(rEString62, (int) (byte) 0, (int) (byte) -1);
        st1920.automaton.REString rEString88 = rEString11.makeRange(rEString58, (int) '#', 0);
        java.lang.String str89 = rEString58.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "~." + "'", str18.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "~" + "'", str89.equals("~"));
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString18 = rEString4.makeRange(rEString14, 10, 0);
        st1920.automaton.REString rEString21 = rEString2.makeRep(rEString4, (int) 'a', (int) '4');
        boolean boolean22 = st1920.automaton.REGEXWrapper.matches("~.+", rEString2);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        java.lang.String str28 = rEString26.string;
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString32.makeAlpha(rEString44);
        st1920.automaton.REString rEString46 = rEString26.makeExclude(rEString44);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString68 = rEString58.makeExclude(rEString61);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString58.makeAlpha(rEString70);
        st1920.automaton.REString rEString72 = rEString53.makeAny(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString85 = rEString79.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString76.makeExclude(rEString79);
        st1920.automaton.REString rEString87 = rEString46.makeAnd(rEString53, rEString79);
        st1920.automaton.REString rEString88 = rEString2.makeAlpha(rEString79);
        st1920.automaton.REString rEString89 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString90 = rEString88.makeAny(rEString89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString4.makeAlpha(rEString16);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString21.makeExclude(rEString24);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString38.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString21.makeOneOrMore(rEString44);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString48.makeAnyChar(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString78 = rEString72.makeAnyChar(rEString77);
        st1920.automaton.REString rEString79 = rEString69.makeExclude(rEString72);
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString69.makeAlpha(rEString81);
        st1920.automaton.REString rEString83 = rEString64.makeAny(rEString82);
        st1920.automaton.REString rEString84 = rEString48.makeClass(rEString82);
        st1920.automaton.REString rEString85 = rEString21.makeOneOrMore(rEString84);
        st1920.automaton.REString rEString86 = rEString17.makeExclude(rEString84);
        rEString17.string = "[^~?]";
        boolean boolean89 = st1920.automaton.REGEXWrapper.matches("[^~?]", rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        java.lang.String str14 = rEString3.string;
        rEString3.string = "~&#";
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString19.makeAnyChar(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString49 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString50 = rEString40.makeExclude(rEString43);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString40.makeAlpha(rEString52);
        st1920.automaton.REString rEString54 = rEString35.makeAny(rEString53);
        st1920.automaton.REString rEString55 = rEString19.makeClass(rEString53);
        boolean boolean56 = st1920.automaton.REGEXWrapper.matches("[~.+]", rEString53);
        st1920.automaton.REString rEString57 = rEString3.makeGroup(rEString53);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString68 = rEString59.makeAnyChar(rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString67.makeRange(rEString70, (int) (short) 100, (int) (byte) 0);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("~.");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("~~&");
        st1920.automaton.REString rEString78 = rEString75.makeClass(rEString77);
        st1920.automaton.REString rEString79 = rEString73.makeAny(rEString75);
        st1920.automaton.REString rEString80 = rEString53.makeOneOrMore(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        st1920.automaton.REString rEString1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = st1920.automaton.REGEXWrapper.matches("~?", rEString1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString15 = rEString1.makeRange(rEString11, 10, 0);
        rEString11.string = "~.";
        java.lang.String str18 = rEString11.string;
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString31 = rEString25.makeAnyChar(rEString30);
        st1920.automaton.REString rEString32 = rEString22.makeExclude(rEString25);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString46 = rEString40.makeAnyChar(rEString45);
        st1920.automaton.REString rEString47 = rEString37.makeExclude(rEString40);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString54.makeAnyChar(rEString59);
        st1920.automaton.REString rEString61 = rEString51.makeExclude(rEString54);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString51.makeAlpha(rEString63);
        st1920.automaton.REString rEString65 = rEString47.makeAlpha(rEString63);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString78 = rEString72.makeAnyChar(rEString77);
        st1920.automaton.REString rEString79 = rEString69.makeExclude(rEString72);
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString69.makeAlpha(rEString81);
        st1920.automaton.REString rEString85 = rEString47.makeRange(rEString69, (int) (byte) 1, (int) (byte) 100);
        boolean boolean86 = st1920.automaton.REGEXWrapper.matches("~.", rEString85);
        st1920.automaton.REString rEString89 = rEString32.makeRange(rEString85, 100, 0);
        st1920.automaton.REString rEString90 = rEString11.makeClass(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "~." + "'", str18.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("*");
        st1920.automaton.REString rEString10 = rEString6.makeAnyChar(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("~.");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("~~&");
        st1920.automaton.REString rEString15 = rEString12.makeClass(rEString14);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("~?*");
        boolean boolean19 = st1920.automaton.REGEXWrapper.matches("~..", rEString18);
        st1920.automaton.REString rEString20 = rEString12.makeZeroOrMore(rEString18);
        st1920.automaton.REString rEString21 = rEString9.makeGroup(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString31.makeExclude(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString33.makeExclude(rEString36);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString33.makeAlpha(rEString45);
        st1920.automaton.REString rEString47 = rEString14.makeClass(rEString33);
        rEString47.string = "~|?";
        boolean boolean50 = st1920.automaton.REGEXWrapper.matches("~|~", rEString47);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        boolean boolean54 = st1920.automaton.REGEXWrapper.matches("~~&", rEString53);
        st1920.automaton.REString rEString57 = rEString47.makeRep(rEString53, 0, 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString20.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString13.makeZeroOrOne(rEString26);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        boolean boolean44 = st1920.automaton.REGEXWrapper.matches("a@", rEString43);
        st1920.automaton.REString rEString45 = rEString13.makeAlpha(rEString43);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString47.makeAnyChar(rEString52);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString59.makeExclude(rEString62);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString76.makeAnyChar(rEString81);
        st1920.automaton.REString rEString83 = rEString73.makeExclude(rEString76);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = rEString73.makeAlpha(rEString85);
        st1920.automaton.REString rEString87 = rEString69.makeAlpha(rEString85);
        boolean boolean88 = st1920.automaton.REGEXWrapper.matches("~.+", rEString85);
        boolean boolean89 = st1920.automaton.REGEXWrapper.matches("hi!", rEString85);
        st1920.automaton.REString rEString90 = rEString47.makeOneOrMore(rEString85);
        st1920.automaton.REString rEString91 = rEString45.makeGroup(rEString47);
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("(~)");
        st1920.automaton.REString rEString94 = rEString45.makeGroup(rEString93);
        java.lang.Class<?> wildcardClass95 = rEString45.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        java.lang.String str14 = rEString3.string;
        rEString3.string = "~&#";
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString19.makeAnyChar(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString49 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString50 = rEString40.makeExclude(rEString43);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString40.makeAlpha(rEString52);
        st1920.automaton.REString rEString54 = rEString35.makeAny(rEString53);
        st1920.automaton.REString rEString55 = rEString19.makeClass(rEString53);
        boolean boolean56 = st1920.automaton.REGEXWrapper.matches("[~.+]", rEString53);
        st1920.automaton.REString rEString57 = rEString3.makeGroup(rEString53);
        st1920.automaton.REString rEString58 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString59 = rEString53.makeClass(rEString58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        java.lang.String str12 = rEString10.string;
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString25 = rEString19.makeAnyChar(rEString24);
        st1920.automaton.REString rEString26 = rEString16.makeExclude(rEString19);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString34 = rEString28.makeAnyChar(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString40 = rEString33.makeAnyChar(rEString39);
        st1920.automaton.REString rEString41 = rEString26.makeZeroOrOne(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString49 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString48.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString26.makeOneOrMore(rEString55);
        st1920.automaton.REString rEString57 = rEString10.makeClass(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString70 = rEString64.makeAnyChar(rEString69);
        st1920.automaton.REString rEString71 = rEString61.makeExclude(rEString64);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString79 = rEString73.makeAnyChar(rEString78);
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString85 = rEString78.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString71.makeZeroOrOne(rEString84);
        st1920.automaton.REString rEString87 = rEString10.makeNum(rEString86);
        java.lang.String str88 = rEString86.string;
        boolean boolean89 = st1920.automaton.REGEXWrapper.matches("", rEString86);
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("a@");
        st1920.automaton.REString rEString92 = rEString86.makeOneOrMore(rEString91);
        java.lang.Class<?> wildcardClass93 = rEString91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "~." + "'", str12.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "~?" + "'", str88.equals("~?"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString12.makeAlpha(rEString24);
        st1920.automaton.REString rEString26 = rEString7.makeAny(rEString25);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString30.makeExclude(rEString33);
        st1920.automaton.REString rEString41 = rEString26.makeNum(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString40.makeClass(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString58 = rEString48.makeExclude(rEString51);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString60.makeAnyChar(rEString65);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString65.makeAnyChar(rEString71);
        st1920.automaton.REString rEString73 = rEString58.makeZeroOrOne(rEString71);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString82.makeExclude(rEString84);
        st1920.automaton.REString rEString86 = rEString80.makeAnyChar(rEString85);
        st1920.automaton.REString rEString87 = rEString77.makeExclude(rEString80);
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = rEString77.makeAlpha(rEString89);
        st1920.automaton.REString rEString91 = rEString58.makeClass(rEString77);
        st1920.automaton.REString rEString92 = rEString44.makeAny(rEString77);
        boolean boolean93 = st1920.automaton.REGEXWrapper.matches("a@", rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        st1920.automaton.REString rEString1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = st1920.automaton.REGEXWrapper.matches("~..{100,0}{35,10}#", rEString1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString10.makeRange(rEString13, (int) (short) 100, (int) (byte) 0);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("~.");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("~~&");
        st1920.automaton.REString rEString21 = rEString18.makeClass(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAny(rEString18);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString34 = rEString25.makeAnyChar(rEString33);
        boolean boolean35 = st1920.automaton.REGEXWrapper.matches("~.+", rEString25);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        java.lang.String str41 = rEString39.string;
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString45.makeExclude(rEString48);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString45.makeAlpha(rEString57);
        st1920.automaton.REString rEString59 = rEString39.makeExclude(rEString57);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString73 = rEString63.makeExclude(rEString66);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString82.makeExclude(rEString84);
        st1920.automaton.REString rEString86 = rEString80.makeAnyChar(rEString85);
        st1920.automaton.REString rEString87 = rEString77.makeExclude(rEString80);
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = rEString77.makeAlpha(rEString89);
        st1920.automaton.REString rEString91 = rEString73.makeAlpha(rEString89);
        st1920.automaton.REString rEString92 = rEString59.makeNothing(rEString73);
        st1920.automaton.REString rEString93 = rEString25.makeClass(rEString92);
        st1920.automaton.REString rEString94 = rEString16.makeClass(rEString93);
        boolean boolean95 = st1920.automaton.REGEXWrapper.matches("+", rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString11 = rEString5.makeAnyChar(rEString10);
        st1920.automaton.REString rEString12 = rEString3.makeAnyChar(rEString11);
        boolean boolean13 = st1920.automaton.REGEXWrapper.matches("~.+", rEString3);
        java.lang.String str14 = rEString3.string;
        boolean boolean15 = st1920.automaton.REGEXWrapper.matches("hi!", rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString12.makeAlpha(rEString24);
        st1920.automaton.REString rEString26 = rEString7.makeAny(rEString25);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString30.makeExclude(rEString33);
        st1920.automaton.REString rEString41 = rEString26.makeNum(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString45.makeExclude(rEString48);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString59.makeExclude(rEString62);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString59.makeAlpha(rEString71);
        st1920.automaton.REString rEString73 = rEString55.makeAlpha(rEString71);
        st1920.automaton.REString rEString74 = rEString26.makeExclude(rEString55);
        boolean boolean75 = st1920.automaton.REGEXWrapper.matches("~", rEString26);
        rEString26.string = "~&#";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString20.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString13.makeZeroOrOne(rEString26);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        boolean boolean44 = st1920.automaton.REGEXWrapper.matches("a@", rEString43);
        st1920.automaton.REString rEString45 = rEString13.makeAlpha(rEString43);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString54.makeAnyChar(rEString59);
        st1920.automaton.REString rEString61 = rEString51.makeExclude(rEString54);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString69 = rEString63.makeAnyChar(rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString75 = rEString68.makeAnyChar(rEString74);
        st1920.automaton.REString rEString76 = rEString51.makeOneOrMore(rEString74);
        st1920.automaton.REString rEString77 = rEString47.makeOneOrMore(rEString51);
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("a");
        st1920.automaton.REString rEString80 = rEString51.makeGroup(rEString79);
        st1920.automaton.REString rEString81 = rEString45.makeAlpha(rEString51);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("<100-0>");
        st1920.automaton.REString rEString84 = rEString45.makeNothing(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString24 = rEString14.makeExclude(rEString17);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString38 = rEString28.makeExclude(rEString31);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString28.makeAlpha(rEString40);
        st1920.automaton.REString rEString42 = rEString24.makeAlpha(rEString40);
        boolean boolean43 = st1920.automaton.REGEXWrapper.matches("~.+", rEString40);
        boolean boolean44 = st1920.automaton.REGEXWrapper.matches("hi!", rEString40);
        st1920.automaton.REString rEString45 = rEString2.makeOneOrMore(rEString40);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString56 = rEString47.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString40.makeZeroOrOne(rEString47);
        boolean boolean58 = st1920.automaton.REGEXWrapper.matches("", rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        java.lang.String str6 = rEString4.string;
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString10.makeExclude(rEString13);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString10.makeAlpha(rEString22);
        st1920.automaton.REString rEString24 = rEString4.makeExclude(rEString22);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString36.makeExclude(rEString39);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString36.makeAlpha(rEString48);
        st1920.automaton.REString rEString50 = rEString31.makeAny(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString57.makeAnyChar(rEString62);
        st1920.automaton.REString rEString64 = rEString54.makeExclude(rEString57);
        st1920.automaton.REString rEString65 = rEString24.makeAnd(rEString31, rEString57);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        java.lang.String str71 = rEString69.string;
        st1920.automaton.REString rEString72 = rEString57.makeOneOrMore(rEString69);
        boolean boolean73 = st1920.automaton.REGEXWrapper.matches("~..{100,0}{35,10}#", rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("+");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        java.lang.String str8 = rEString6.string;
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString12.makeAlpha(rEString24);
        st1920.automaton.REString rEString26 = rEString6.makeExclude(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString28.makeAnyChar(rEString36);
        st1920.automaton.REString rEString38 = rEString6.makeNothing(rEString37);
        boolean boolean39 = st1920.automaton.REGEXWrapper.matches("*", rEString37);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("[a]");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("a");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString52 = rEString46.makeAnyChar(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString51.makeAnyChar(rEString57);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString65.makeAnyChar(rEString70);
        st1920.automaton.REString rEString72 = rEString62.makeExclude(rEString65);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString74.makeAnyChar(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString82.makeExclude(rEString84);
        st1920.automaton.REString rEString86 = rEString79.makeAnyChar(rEString85);
        st1920.automaton.REString rEString87 = rEString72.makeZeroOrOne(rEString85);
        st1920.automaton.REString rEString88 = rEString57.makeZeroOrMore(rEString87);
        st1920.automaton.REString rEString89 = rEString44.makeNothing(rEString57);
        st1920.automaton.REString rEString90 = rEString42.makeNum(rEString44);
        boolean boolean91 = st1920.automaton.REGEXWrapper.matches("[a]", rEString44);
        java.lang.String str92 = rEString44.string;
        st1920.automaton.REString rEString93 = rEString37.makeClass(rEString44);
        st1920.automaton.REString rEString94 = rEString1.makeAnyChar(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "a" + "'", str92.equals("a"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString23 = rEString13.makeExclude(rEString16);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString31 = rEString25.makeAnyChar(rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString30.makeAnyChar(rEString36);
        st1920.automaton.REString rEString38 = rEString23.makeZeroOrOne(rEString36);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString45.makeAnyChar(rEString50);
        st1920.automaton.REString rEString52 = rEString42.makeExclude(rEString45);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString42.makeAlpha(rEString54);
        st1920.automaton.REString rEString56 = rEString23.makeClass(rEString42);
        st1920.automaton.REString rEString59 = rEString8.makeRep(rEString23, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString60 = rEString4.makeZeroOrMore(rEString8);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString63 = rEString8.makeGroup(rEString62);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString80 = rEString66.makeRange(rEString76, 10, 0);
        boolean boolean81 = st1920.automaton.REGEXWrapper.matches("~.", rEString76);
        st1920.automaton.REString rEString82 = rEString8.makeGroup(rEString76);
        rEString82.string = "~?*";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        java.lang.String str5 = rEString3.string;
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString18 = rEString12.makeAnyChar(rEString17);
        st1920.automaton.REString rEString19 = rEString9.makeExclude(rEString12);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString9.makeAlpha(rEString21);
        st1920.automaton.REString rEString23 = rEString3.makeExclude(rEString21);
        rEString21.string = "";
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = rEString44.makeExclude(rEString46);
        st1920.automaton.REString rEString48 = rEString42.makeAnyChar(rEString47);
        st1920.automaton.REString rEString49 = rEString39.makeExclude(rEString42);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString56.makeAnyChar(rEString61);
        st1920.automaton.REString rEString63 = rEString53.makeExclude(rEString56);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString53.makeAlpha(rEString65);
        st1920.automaton.REString rEString67 = rEString49.makeAlpha(rEString65);
        boolean boolean68 = st1920.automaton.REGEXWrapper.matches("~.+", rEString65);
        boolean boolean69 = st1920.automaton.REGEXWrapper.matches("hi!", rEString65);
        st1920.automaton.REString rEString70 = rEString27.makeOneOrMore(rEString65);
        st1920.automaton.REString rEString71 = rEString21.makeNothing(rEString65);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("~~&");
        st1920.automaton.REString rEString74 = rEString21.makeExcludeClass(rEString73);
        java.lang.Class<?> wildcardClass75 = rEString73.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("~~&");
        java.lang.String str2 = rEString1.string;
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("~.");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("~~&");
        st1920.automaton.REString rEString7 = rEString4.makeClass(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        java.lang.String str13 = rEString11.string;
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString17.makeExclude(rEString20);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString17.makeAlpha(rEString29);
        st1920.automaton.REString rEString31 = rEString11.makeExclude(rEString29);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString38.makeAnyChar(rEString43);
        st1920.automaton.REString rEString45 = rEString35.makeExclude(rEString38);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString52.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString49.makeExclude(rEString52);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString49.makeAlpha(rEString61);
        st1920.automaton.REString rEString63 = rEString45.makeAlpha(rEString61);
        st1920.automaton.REString rEString64 = rEString31.makeNothing(rEString45);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString73 = rEString67.makeAnyChar(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString81 = rEString67.makeRange(rEString77, 10, 0);
        boolean boolean82 = st1920.automaton.REGEXWrapper.matches("~.", rEString77);
        st1920.automaton.REString rEString83 = rEString64.makeAlpha(rEString77);
        st1920.automaton.REString rEString84 = rEString6.makeExcludeClass(rEString83);
        st1920.automaton.REString rEString85 = rEString1.makeNum(rEString6);
        java.lang.String str86 = rEString85.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "~~&" + "'", str2.equals("~~&"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "~~&1" + "'", str86.equals("~~&1"));
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString13.makeAnyChar(rEString21);
        java.lang.String str23 = rEString21.string;
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString37 = rEString27.makeExclude(rEString30);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString51 = rEString44.makeAnyChar(rEString50);
        st1920.automaton.REString rEString52 = rEString37.makeZeroOrOne(rEString50);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString54.makeAnyChar(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString66 = rEString59.makeAnyChar(rEString65);
        st1920.automaton.REString rEString67 = rEString37.makeOneOrMore(rEString66);
        st1920.automaton.REString rEString68 = rEString21.makeClass(rEString67);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString79 = rEString73.makeAnyChar(rEString78);
        st1920.automaton.REString rEString80 = rEString71.makeAnyChar(rEString79);
        boolean boolean81 = st1920.automaton.REGEXWrapper.matches("~.+", rEString71);
        java.lang.String str82 = rEString71.string;
        st1920.automaton.REString rEString83 = rEString68.makeZeroOrMore(rEString71);
        st1920.automaton.REString rEString84 = rEString11.makeExcludeClass(rEString83);
        boolean boolean85 = st1920.automaton.REGEXWrapper.matches("a", rEString84);
        st1920.automaton.REString rEString86 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString87 = rEString84.makeZeroOrOne(rEString86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "~." + "'", str23.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "" + "'", str82.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString20.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString13.makeZeroOrOne(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString35.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString13.makeOneOrMore(rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("~");
        st1920.automaton.REString rEString46 = rEString13.makeZeroOrMore(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString61 = rEString13.makeAny(rEString60);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString80 = rEString66.makeRange(rEString76, 10, 0);
        st1920.automaton.REString rEString83 = rEString64.makeRep(rEString66, (int) 'a', (int) '4');
        boolean boolean84 = st1920.automaton.REGEXWrapper.matches("~.+", rEString64);
        st1920.automaton.REString rEString85 = rEString13.makeAny(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        java.lang.String str6 = rEString4.string;
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString10.makeExclude(rEString13);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString10.makeAlpha(rEString22);
        st1920.automaton.REString rEString24 = rEString4.makeExclude(rEString22);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString34 = rEString28.makeAnyChar(rEString33);
        st1920.automaton.REString rEString35 = rEString26.makeAnyChar(rEString34);
        st1920.automaton.REString rEString36 = rEString4.makeNothing(rEString35);
        boolean boolean37 = st1920.automaton.REGEXWrapper.matches("*", rEString35);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString41.makeExclude(rEString44);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString58.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString51.makeZeroOrOne(rEString64);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString79 = rEString73.makeAnyChar(rEString78);
        st1920.automaton.REString rEString80 = rEString70.makeExclude(rEString73);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString70.makeAlpha(rEString82);
        st1920.automaton.REString rEString84 = rEString51.makeClass(rEString70);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("~.+");
        st1920.automaton.REString rEString87 = rEString70.makeExcludeClass(rEString86);
        rEString86.string = "~|?";
        java.lang.String str90 = rEString86.string;
        st1920.automaton.REString rEString91 = rEString35.makeExcludeClass(rEString86);
        java.lang.String str92 = rEString35.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "~|?" + "'", str90.equals("~|?"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "~.." + "'", str92.equals("~.."));
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString12.makeAlpha(rEString24);
        st1920.automaton.REString rEString26 = rEString7.makeAny(rEString25);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString30.makeExclude(rEString33);
        st1920.automaton.REString rEString41 = rEString26.makeNum(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString45.makeExclude(rEString48);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString59.makeExclude(rEString62);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString59.makeAlpha(rEString71);
        st1920.automaton.REString rEString73 = rEString55.makeAlpha(rEString71);
        st1920.automaton.REString rEString74 = rEString26.makeExclude(rEString55);
        boolean boolean75 = st1920.automaton.REGEXWrapper.matches("~", rEString26);
        rEString26.string = "hi!";
        rEString26.string = "[^a@]";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString15 = rEString1.makeRange(rEString11, 10, 0);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString22.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString19.makeExclude(rEString22);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString29.makeZeroOrOne(rEString42);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString52 = rEString46.makeAnyChar(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString51.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString29.makeOneOrMore(rEString58);
        st1920.automaton.REString rEString60 = rEString11.makeNothing(rEString29);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString65.makeAnyChar(rEString70);
        st1920.automaton.REString rEString72 = rEString63.makeAnyChar(rEString71);
        boolean boolean73 = st1920.automaton.REGEXWrapper.matches("~.+", rEString63);
        java.lang.String str74 = rEString63.string;
        st1920.automaton.REString rEString75 = rEString60.makeZeroOrMore(rEString63);
        rEString75.string = "~?";
        java.lang.Class<?> wildcardClass78 = rEString75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString12.makeAlpha(rEString24);
        st1920.automaton.REString rEString26 = rEString7.makeAny(rEString25);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString30.makeExclude(rEString33);
        st1920.automaton.REString rEString41 = rEString26.makeNum(rEString40);
        rEString41.string = "~";
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        java.lang.String str49 = rEString47.string;
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString64.makeAnyChar(rEString70);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString79 = rEString73.makeAnyChar(rEString78);
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString85 = rEString78.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString71.makeAny(rEString84);
        st1920.automaton.REString rEString89 = rEString57.makeRep(rEString71, 0, (-1));
        st1920.automaton.REString rEString90 = rEString47.makeAny(rEString57);
        st1920.automaton.REString rEString91 = rEString41.makeZeroOrMore(rEString90);
        boolean boolean92 = st1920.automaton.REGEXWrapper.matches("a@", rEString91);
        java.lang.String str93 = rEString91.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "" + "'", str49.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "~.@*" + "'", str93.equals("~.@*"));
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        java.lang.String str6 = rEString4.string;
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString20 = rEString10.makeExclude(rEString13);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString10.makeAlpha(rEString22);
        st1920.automaton.REString rEString24 = rEString4.makeExclude(rEString22);
        boolean boolean25 = st1920.automaton.REGEXWrapper.matches("", rEString22);
        st1920.automaton.REString rEString26 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString27 = rEString22.makeZeroOrMore(rEString26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString10.makeRange(rEString13, (int) (short) 100, (int) (byte) 0);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("~.");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("~~&");
        st1920.automaton.REString rEString21 = rEString18.makeClass(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAny(rEString18);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString34 = rEString25.makeAnyChar(rEString33);
        boolean boolean35 = st1920.automaton.REGEXWrapper.matches("~.+", rEString25);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        java.lang.String str41 = rEString39.string;
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString55 = rEString45.makeExclude(rEString48);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString45.makeAlpha(rEString57);
        st1920.automaton.REString rEString59 = rEString39.makeExclude(rEString57);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString73 = rEString63.makeExclude(rEString66);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString82.makeExclude(rEString84);
        st1920.automaton.REString rEString86 = rEString80.makeAnyChar(rEString85);
        st1920.automaton.REString rEString87 = rEString77.makeExclude(rEString80);
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = rEString77.makeAlpha(rEString89);
        st1920.automaton.REString rEString91 = rEString73.makeAlpha(rEString89);
        st1920.automaton.REString rEString92 = rEString59.makeNothing(rEString73);
        st1920.automaton.REString rEString93 = rEString25.makeClass(rEString92);
        st1920.automaton.REString rEString94 = rEString16.makeClass(rEString93);
        boolean boolean95 = st1920.automaton.REGEXWrapper.matches("~&#", rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString12.makeExclude(rEString15);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString12.makeAlpha(rEString24);
        st1920.automaton.REString rEString26 = rEString7.makeAny(rEString25);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString34 = rEString28.makeAnyChar(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString42 = rEString28.makeRange(rEString38, 10, 0);
        st1920.automaton.REString rEString43 = rEString26.makeNothing(rEString28);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        java.lang.String str49 = rEString47.string;
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = rEString53.makeExclude(rEString55);
        st1920.automaton.REString rEString57 = rEString51.makeAnyChar(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString64.makeAnyChar(rEString70);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString79 = rEString73.makeAnyChar(rEString78);
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString81.makeExclude(rEString83);
        st1920.automaton.REString rEString85 = rEString78.makeAnyChar(rEString84);
        st1920.automaton.REString rEString86 = rEString71.makeAny(rEString84);
        st1920.automaton.REString rEString89 = rEString57.makeRep(rEString71, 0, (-1));
        st1920.automaton.REString rEString90 = rEString47.makeAny(rEString57);
        rEString47.string = "~|?";
        st1920.automaton.REString rEString95 = rEString43.makeRange(rEString47, (int) (byte) 10, (int) (byte) 1);
        boolean boolean96 = st1920.automaton.REGEXWrapper.matches("1", rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "" + "'", str49.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("~..1");
        java.lang.String str2 = rEString1.string;
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString21 = rEString7.makeRange(rEString17, 10, 0);
        st1920.automaton.REString rEString24 = rEString5.makeRep(rEString7, (int) 'a', (int) '4');
        boolean boolean25 = st1920.automaton.REGEXWrapper.matches("*", rEString24);
        st1920.automaton.REString rEString26 = rEString1.makeExclude(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString34 = rEString28.makeAnyChar(rEString33);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("*");
        st1920.automaton.REString rEString37 = rEString33.makeAnyChar(rEString36);
        st1920.automaton.REString rEString38 = rEString1.makeZeroOrOne(rEString37);
        st1920.automaton.REString rEString39 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString40 = rEString37.makeNothing(rEString39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "~..1" + "'", str2.equals("~..1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("[~..]<0-1>");
        boolean boolean3 = st1920.automaton.REGEXWrapper.matches("()", rEString2);
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = rEString5.makeExclude(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString16 = rEString10.makeAnyChar(rEString15);
        st1920.automaton.REString rEString17 = rEString7.makeExclude(rEString10);
        java.lang.String str18 = rEString7.string;
        rEString7.string = "~&#";
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString31 = rEString25.makeAnyChar(rEString30);
        st1920.automaton.REString rEString32 = rEString23.makeAnyChar(rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString40 = rEString34.makeAnyChar(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString47.makeAnyChar(rEString52);
        st1920.automaton.REString rEString54 = rEString44.makeExclude(rEString47);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString44.makeAlpha(rEString56);
        st1920.automaton.REString rEString58 = rEString39.makeAny(rEString57);
        st1920.automaton.REString rEString59 = rEString23.makeClass(rEString57);
        boolean boolean60 = st1920.automaton.REGEXWrapper.matches("[~.+]", rEString57);
        st1920.automaton.REString rEString61 = rEString7.makeGroup(rEString57);
        st1920.automaton.REString rEString62 = rEString2.makeNum(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("~.");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("~~&");
        st1920.automaton.REString rEString4 = rEString1.makeClass(rEString3);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("~?*");
        boolean boolean8 = st1920.automaton.REGEXWrapper.matches("~..", rEString7);
        st1920.automaton.REString rEString9 = rEString1.makeZeroOrMore(rEString7);
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString13.makeExclude(rEString15);
        st1920.automaton.REString rEString17 = rEString11.makeAnyChar(rEString16);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString21.makeExclude(rEString24);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString21.makeAlpha(rEString33);
        st1920.automaton.REString rEString35 = rEString16.makeAny(rEString34);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString37.makeAnyChar(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString45.makeRange(rEString48, (int) (short) 100, (int) (byte) 0);
        java.lang.String str52 = rEString48.string;
        st1920.automaton.REString rEString53 = rEString16.makeAnyChar(rEString48);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString56.makeAnyChar(rEString61);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString73 = rEString64.makeAnyChar(rEString72);
        st1920.automaton.REString rEString74 = rEString56.makeClass(rEString73);
        boolean boolean75 = st1920.automaton.REGEXWrapper.matches("*", rEString74);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("~|?");
        st1920.automaton.REString rEString78 = rEString74.makeNothing(rEString77);
        st1920.automaton.REString rEString79 = rEString1.makeAnd(rEString16, rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~|?");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString4.makeAnyChar(rEString12);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString24 = rEString15.makeAnyChar(rEString23);
        java.lang.String str25 = rEString23.string;
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString32.makeAnyChar(rEString37);
        st1920.automaton.REString rEString39 = rEString29.makeExclude(rEString32);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString47 = rEString41.makeAnyChar(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString46.makeAnyChar(rEString52);
        st1920.automaton.REString rEString54 = rEString39.makeZeroOrOne(rEString52);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString56.makeAnyChar(rEString61);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString61.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString39.makeOneOrMore(rEString68);
        st1920.automaton.REString rEString70 = rEString23.makeClass(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString74.makeAnyChar(rEString79);
        st1920.automaton.REString rEString81 = rEString72.makeAnyChar(rEString80);
        st1920.automaton.REString rEString84 = rEString23.makeRange(rEString81, (int) (short) 100, (int) (short) 0);
        st1920.automaton.REString rEString87 = rEString13.makeRange(rEString84, (int) '#', (int) (short) 10);
        st1920.automaton.REString rEString88 = rEString2.makeZeroOrOne(rEString13);
        boolean boolean89 = st1920.automaton.REGEXWrapper.matches("~.", rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "~." + "'", str25.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString21.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString18.makeExclude(rEString21);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString18.makeAlpha(rEString30);
        st1920.automaton.REString rEString32 = rEString14.makeAlpha(rEString30);
        boolean boolean33 = st1920.automaton.REGEXWrapper.matches("~.+", rEString30);
        st1920.automaton.REString rEString34 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString35 = rEString30.makeClass(rEString34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~.+");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString15 = rEString9.makeAnyChar(rEString14);
        st1920.automaton.REString rEString16 = rEString6.makeExclude(rEString9);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString24 = rEString18.makeAnyChar(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString23.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString16.makeZeroOrOne(rEString29);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString38.makeAnyChar(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString52.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString49.makeExclude(rEString52);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString73 = rEString66.makeAnyChar(rEString72);
        st1920.automaton.REString rEString74 = rEString59.makeZeroOrOne(rEString72);
        st1920.automaton.REString rEString75 = rEString44.makeZeroOrMore(rEString74);
        st1920.automaton.REString rEString76 = rEString16.makeZeroOrOne(rEString75);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString80.makeExclude(rEString82);
        st1920.automaton.REString rEString84 = rEString78.makeAnyChar(rEString83);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString89 = rEString86.makeExclude(rEString88);
        st1920.automaton.REString rEString90 = rEString83.makeAnyChar(rEString89);
        st1920.automaton.REString rEString91 = rEString75.makeExcludeClass(rEString83);
        st1920.automaton.REString rEString92 = rEString2.makeZeroOrOne(rEString83);
        boolean boolean93 = st1920.automaton.REGEXWrapper.matches("~.", rEString92);
        st1920.automaton.REString rEString95 = new st1920.automaton.REString("~..*");
        st1920.automaton.REString rEString98 = rEString92.makeRange(rEString95, (int) '#', (int) (short) -1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString13.makeExclude(rEString15);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString24 = rEString18.makeAnyChar(rEString23);
        st1920.automaton.REString rEString25 = rEString15.makeExclude(rEString18);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = rEString29.makeExclude(rEString31);
        st1920.automaton.REString rEString33 = rEString27.makeAnyChar(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString32.makeAnyChar(rEString38);
        st1920.automaton.REString rEString40 = rEString25.makeZeroOrOne(rEString38);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString47.makeAnyChar(rEString52);
        st1920.automaton.REString rEString54 = rEString44.makeExclude(rEString47);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString44.makeAlpha(rEString56);
        st1920.automaton.REString rEString58 = rEString25.makeClass(rEString44);
        st1920.automaton.REString rEString61 = rEString10.makeRep(rEString25, (int) 'a', (int) (short) 1);
        st1920.automaton.REString rEString62 = rEString6.makeZeroOrMore(rEString10);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString65 = rEString10.makeGroup(rEString64);
        boolean boolean66 = st1920.automaton.REGEXWrapper.matches("a@", rEString10);
        boolean boolean67 = st1920.automaton.REGEXWrapper.matches("()", rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString15 = rEString9.makeAnyChar(rEString14);
        st1920.automaton.REString rEString16 = rEString6.makeExclude(rEString9);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString24 = rEString18.makeAnyChar(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString23.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString16.makeZeroOrOne(rEString29);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString38.makeAnyChar(rEString43);
        st1920.automaton.REString rEString45 = rEString35.makeExclude(rEString38);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = rEString47.makeExclude(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString52.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString49.makeExclude(rEString52);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString49.makeAlpha(rEString61);
        st1920.automaton.REString rEString63 = rEString45.makeAlpha(rEString61);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = rEString65.makeExclude(rEString67);
        st1920.automaton.REString rEString69 = rEString31.makeOr(rEString45, rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString76.makeAnyChar(rEString81);
        st1920.automaton.REString rEString83 = rEString73.makeExclude(rEString76);
        st1920.automaton.REString rEString86 = rEString31.makeRange(rEString83, (int) (byte) -1, (int) (byte) -1);
        st1920.automaton.REString rEString87 = rEString2.makeExcludeClass(rEString31);
        boolean boolean88 = st1920.automaton.REGEXWrapper.matches("[]", rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString15 = rEString9.makeAnyChar(rEString14);
        st1920.automaton.REString rEString16 = rEString7.makeAnyChar(rEString15);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString18.makeAnyChar(rEString26);
        java.lang.String str28 = rEString26.string;
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString42 = rEString32.makeExclude(rEString35);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString49.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString42.makeZeroOrOne(rEString55);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString67.makeExclude(rEString69);
        st1920.automaton.REString rEString71 = rEString64.makeAnyChar(rEString70);
        st1920.automaton.REString rEString72 = rEString42.makeOneOrMore(rEString71);
        st1920.automaton.REString rEString73 = rEString26.makeClass(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = rEString79.makeExclude(rEString81);
        st1920.automaton.REString rEString83 = rEString77.makeAnyChar(rEString82);
        st1920.automaton.REString rEString84 = rEString75.makeAnyChar(rEString83);
        st1920.automaton.REString rEString87 = rEString26.makeRange(rEString84, (int) (short) 100, (int) (short) 0);
        st1920.automaton.REString rEString90 = rEString16.makeRange(rEString87, (int) '#', (int) (short) 10);
        st1920.automaton.REString rEString91 = rEString4.makeNothing(rEString90);
        boolean boolean92 = st1920.automaton.REGEXWrapper.matches("~.1", rEString4);
        rEString4.string = "(~)";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "~." + "'", str28.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("~.+");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString8.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString5.makeExclude(rEString8);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString29 = rEString22.makeAnyChar(rEString28);
        st1920.automaton.REString rEString30 = rEString15.makeZeroOrOne(rEString28);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString32.makeAnyChar(rEString37);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString37.makeAnyChar(rEString43);
        st1920.automaton.REString rEString45 = rEString15.makeOneOrMore(rEString44);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("~..1");
        java.lang.String str48 = rEString47.string;
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString67 = rEString53.makeRange(rEString63, 10, 0);
        st1920.automaton.REString rEString70 = rEString51.makeRep(rEString53, (int) 'a', (int) '4');
        boolean boolean71 = st1920.automaton.REGEXWrapper.matches("*", rEString70);
        st1920.automaton.REString rEString72 = rEString47.makeExclude(rEString70);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString74.makeAnyChar(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("*");
        st1920.automaton.REString rEString83 = rEString79.makeAnyChar(rEString82);
        st1920.automaton.REString rEString84 = rEString47.makeZeroOrOne(rEString83);
        st1920.automaton.REString rEString85 = rEString1.makeConcatenation(rEString44, rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "~..1" + "'", str48.equals("~..1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("~.1");
        boolean boolean3 = st1920.automaton.REGEXWrapper.matches("[^~]", rEString2);
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = rEString5.makeExclude(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString16 = rEString10.makeAnyChar(rEString15);
        st1920.automaton.REString rEString17 = rEString7.makeExclude(rEString10);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString21.makeExclude(rEString24);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString40.makeExclude(rEString42);
        st1920.automaton.REString rEString44 = rEString38.makeAnyChar(rEString43);
        st1920.automaton.REString rEString45 = rEString35.makeExclude(rEString38);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString35.makeAlpha(rEString47);
        st1920.automaton.REString rEString49 = rEString31.makeAlpha(rEString47);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = rEString58.makeExclude(rEString60);
        st1920.automaton.REString rEString62 = rEString56.makeAnyChar(rEString61);
        st1920.automaton.REString rEString63 = rEString53.makeExclude(rEString56);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString53.makeAlpha(rEString65);
        st1920.automaton.REString rEString69 = rEString31.makeRange(rEString53, (int) (byte) 1, (int) (byte) 100);
        st1920.automaton.REString rEString70 = rEString10.makeOneOrMore(rEString53);
        st1920.automaton.REString rEString71 = rEString2.makeGroup(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString14.makeZeroOrOne(rEString27);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        st1920.automaton.REString rEString44 = rEString14.makeOneOrMore(rEString43);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("~");
        st1920.automaton.REString rEString47 = rEString14.makeZeroOrMore(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString54.makeAnyChar(rEString59);
        st1920.automaton.REString rEString61 = rEString51.makeExclude(rEString54);
        st1920.automaton.REString rEString62 = rEString47.makeClass(rEString61);
        boolean boolean63 = st1920.automaton.REGEXWrapper.matches("", rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("~.");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("~~&");
        st1920.automaton.REString rEString4 = rEString1.makeClass(rEString3);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("~?*");
        boolean boolean8 = st1920.automaton.REGEXWrapper.matches("~..", rEString7);
        st1920.automaton.REString rEString9 = rEString1.makeZeroOrMore(rEString7);
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("~~&");
        java.lang.String str12 = rEString11.string;
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        java.lang.String str18 = rEString16.string;
        st1920.automaton.REString rEString19 = rEString11.makeExcludeClass(rEString16);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString23.makeExclude(rEString26);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString37.makeExclude(rEString39);
        st1920.automaton.REString rEString41 = rEString35.makeAnyChar(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString43.makeExclude(rEString45);
        st1920.automaton.REString rEString47 = rEString40.makeAnyChar(rEString46);
        st1920.automaton.REString rEString48 = rEString33.makeZeroOrOne(rEString46);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString52.makeAnyChar(rEString57);
        st1920.automaton.REString rEString59 = rEString50.makeAnyChar(rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString63.makeExclude(rEString65);
        st1920.automaton.REString rEString67 = rEString61.makeAnyChar(rEString66);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString79 = rEString76.makeExclude(rEString78);
        st1920.automaton.REString rEString80 = rEString74.makeAnyChar(rEString79);
        st1920.automaton.REString rEString81 = rEString71.makeExclude(rEString74);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = rEString71.makeAlpha(rEString83);
        st1920.automaton.REString rEString85 = rEString66.makeAny(rEString84);
        st1920.automaton.REString rEString86 = rEString50.makeClass(rEString84);
        st1920.automaton.REString rEString89 = rEString46.makeRep(rEString84, (int) (byte) 1, (int) (byte) 1);
        st1920.automaton.REString rEString90 = rEString1.makeConcatenation(rEString19, rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "~~&" + "'", str12.equals("~~&"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        boolean boolean12 = st1920.automaton.REGEXWrapper.matches("~.+", rEString2);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        java.lang.String str18 = rEString16.string;
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString31 = rEString25.makeAnyChar(rEString30);
        st1920.automaton.REString rEString32 = rEString22.makeExclude(rEString25);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString22.makeAlpha(rEString34);
        st1920.automaton.REString rEString36 = rEString16.makeExclude(rEString34);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString49 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString50 = rEString40.makeExclude(rEString43);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = rEString59.makeExclude(rEString61);
        st1920.automaton.REString rEString63 = rEString57.makeAnyChar(rEString62);
        st1920.automaton.REString rEString64 = rEString54.makeExclude(rEString57);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString54.makeAlpha(rEString66);
        st1920.automaton.REString rEString68 = rEString50.makeAlpha(rEString66);
        st1920.automaton.REString rEString69 = rEString36.makeNothing(rEString50);
        st1920.automaton.REString rEString70 = rEString2.makeClass(rEString69);
        rEString70.string = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString23.makeExclude(rEString26);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString23.makeAlpha(rEString35);
        st1920.automaton.REString rEString37 = rEString18.makeAny(rEString36);
        st1920.automaton.REString rEString38 = rEString2.makeClass(rEString36);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString46 = rEString40.makeAnyChar(rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString54 = rEString40.makeRange(rEString50, 10, 0);
        st1920.automaton.REString rEString55 = rEString38.makeAny(rEString50);
        boolean boolean56 = st1920.automaton.REGEXWrapper.matches("", rEString38);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString64 = rEString58.makeAnyChar(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString70 = rEString63.makeAnyChar(rEString69);
        st1920.automaton.REString rEString73 = rEString38.makeRange(rEString70, 1, (int) (short) 100);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("~~?");
        st1920.automaton.REString rEString76 = rEString38.makeOneOrMore(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("(~)");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString11 = rEString5.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString13.makeAnyChar(rEString21);
        st1920.automaton.REString rEString23 = rEString5.makeClass(rEString22);
        boolean boolean24 = st1920.automaton.REGEXWrapper.matches("*", rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("~|?");
        st1920.automaton.REString rEString27 = rEString23.makeNothing(rEString26);
        st1920.automaton.REString rEString28 = rEString2.makeOneOrMore(rEString23);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = st1920.automaton.REGEXWrapper.matches("(a)", rEString2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: expected ')' at position 3");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString8.makeAnyChar(rEString13);
        st1920.automaton.REString rEString15 = rEString5.makeExclude(rEString8);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString23 = rEString17.makeAnyChar(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = rEString25.makeExclude(rEString27);
        st1920.automaton.REString rEString29 = rEString22.makeAnyChar(rEString28);
        st1920.automaton.REString rEString30 = rEString5.makeOneOrMore(rEString28);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString39.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString36.makeExclude(rEString39);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString48.makeExclude(rEString50);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = rEString55.makeExclude(rEString57);
        st1920.automaton.REString rEString59 = rEString53.makeAnyChar(rEString58);
        st1920.automaton.REString rEString60 = rEString50.makeExclude(rEString53);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString50.makeAlpha(rEString62);
        st1920.automaton.REString rEString64 = rEString46.makeAlpha(rEString62);
        boolean boolean65 = st1920.automaton.REGEXWrapper.matches("~.+", rEString62);
        boolean boolean66 = st1920.automaton.REGEXWrapper.matches("hi!", rEString62);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString79 = rEString73.makeAnyChar(rEString78);
        st1920.automaton.REString rEString80 = rEString70.makeExclude(rEString73);
        st1920.automaton.REString rEString81 = rEString62.makeAnyChar(rEString73);
        st1920.automaton.REString rEString82 = rEString30.makeNothing(rEString81);
        st1920.automaton.REString rEString83 = rEString1.makeExcludeClass(rEString81);
        java.lang.String str84 = rEString1.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "#" + "'", str84.equals("#"));
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = rEString5.makeExclude(rEString7);
        st1920.automaton.REString rEString9 = rEString3.makeAnyChar(rEString8);
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = rEString11.makeExclude(rEString13);
        st1920.automaton.REString rEString17 = rEString3.makeRange(rEString13, 10, 0);
        st1920.automaton.REString rEString20 = rEString1.makeRep(rEString3, (int) 'a', (int) '4');
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString22.makeAnyChar(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        st1920.automaton.REString rEString36 = rEString22.makeRange(rEString32, 10, 0);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString49 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString50 = rEString40.makeExclude(rEString43);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString58 = rEString52.makeAnyChar(rEString57);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString64 = rEString57.makeAnyChar(rEString63);
        st1920.automaton.REString rEString65 = rEString50.makeZeroOrOne(rEString63);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString73 = rEString67.makeAnyChar(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString79 = rEString72.makeAnyChar(rEString78);
        st1920.automaton.REString rEString80 = rEString50.makeOneOrMore(rEString79);
        st1920.automaton.REString rEString81 = rEString32.makeNothing(rEString50);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString91 = rEString88.makeExclude(rEString90);
        st1920.automaton.REString rEString92 = rEString86.makeAnyChar(rEString91);
        st1920.automaton.REString rEString93 = rEString84.makeAnyChar(rEString92);
        boolean boolean94 = st1920.automaton.REGEXWrapper.matches("~.+", rEString84);
        java.lang.String str95 = rEString84.string;
        st1920.automaton.REString rEString96 = rEString81.makeZeroOrMore(rEString84);
        st1920.automaton.REString rEString97 = rEString20.makeOneOrMore(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "" + "'", str95.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("(~)");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = rEString7.makeExclude(rEString9);
        st1920.automaton.REString rEString11 = rEString5.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString22 = rEString13.makeAnyChar(rEString21);
        st1920.automaton.REString rEString23 = rEString5.makeClass(rEString22);
        boolean boolean24 = st1920.automaton.REGEXWrapper.matches("*", rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("~|?");
        st1920.automaton.REString rEString27 = rEString23.makeNothing(rEString26);
        st1920.automaton.REString rEString28 = rEString2.makeOneOrMore(rEString23);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = rEString30.makeExclude(rEString32);
        java.lang.String str34 = rEString32.string;
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString36.makeAnyChar(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString49.makeAnyChar(rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = rEString60.makeExclude(rEString62);
        st1920.automaton.REString rEString64 = rEString58.makeAnyChar(rEString63);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString66.makeExclude(rEString68);
        st1920.automaton.REString rEString70 = rEString63.makeAnyChar(rEString69);
        st1920.automaton.REString rEString71 = rEString56.makeAny(rEString69);
        st1920.automaton.REString rEString74 = rEString42.makeRep(rEString56, 0, (-1));
        st1920.automaton.REString rEString75 = rEString32.makeAny(rEString42);
        rEString32.string = "~|?";
        st1920.automaton.REString rEString78 = rEString28.makeNum(rEString32);
        boolean boolean79 = st1920.automaton.REGEXWrapper.matches("~..1", rEString28);
        rEString28.string = "~?";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString11 = rEString2.makeAnyChar(rEString10);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = rEString15.makeExclude(rEString17);
        st1920.automaton.REString rEString19 = rEString13.makeAnyChar(rEString18);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString21.makeExclude(rEString23);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString31 = rEString28.makeExclude(rEString30);
        st1920.automaton.REString rEString32 = rEString26.makeAnyChar(rEString31);
        st1920.automaton.REString rEString33 = rEString23.makeExclude(rEString26);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString23.makeAlpha(rEString35);
        st1920.automaton.REString rEString37 = rEString18.makeAny(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString41.makeExclude(rEString44);
        st1920.automaton.REString rEString52 = rEString37.makeNum(rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString57 = rEString54.makeExclude(rEString56);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = rEString61.makeExclude(rEString63);
        st1920.automaton.REString rEString65 = rEString59.makeAnyChar(rEString64);
        st1920.automaton.REString rEString66 = rEString56.makeExclude(rEString59);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString75.makeExclude(rEString77);
        st1920.automaton.REString rEString79 = rEString73.makeAnyChar(rEString78);
        st1920.automaton.REString rEString80 = rEString70.makeExclude(rEString73);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString83 = rEString70.makeAlpha(rEString82);
        st1920.automaton.REString rEString84 = rEString66.makeAlpha(rEString82);
        st1920.automaton.REString rEString85 = rEString37.makeExclude(rEString66);
        st1920.automaton.REString rEString86 = rEString11.makeClass(rEString85);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = st1920.automaton.REGEXWrapper.matches("~..", rEString85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unexpected end-of-string");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString7 = rEString4.makeExclude(rEString6);
        st1920.automaton.REString rEString8 = rEString2.makeAnyChar(rEString7);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("*");
        st1920.automaton.REString rEString11 = rEString7.makeAnyChar(rEString10);
        boolean boolean12 = st1920.automaton.REGEXWrapper.matches("", rEString10);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = rEString14.makeExclude(rEString16);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = rEString19.makeExclude(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = rEString26.makeExclude(rEString28);
        st1920.automaton.REString rEString30 = rEString24.makeAnyChar(rEString29);
        st1920.automaton.REString rEString31 = rEString21.makeExclude(rEString24);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = rEString35.makeExclude(rEString37);
        st1920.automaton.REString rEString39 = rEString33.makeAnyChar(rEString38);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = rEString41.makeExclude(rEString43);
        st1920.automaton.REString rEString45 = rEString38.makeAnyChar(rEString44);
        st1920.automaton.REString rEString46 = rEString31.makeZeroOrOne(rEString44);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString60 = rEString53.makeAnyChar(rEString59);
        st1920.automaton.REString rEString61 = rEString31.makeOneOrMore(rEString60);
        st1920.automaton.REString rEString64 = rEString14.makeRange(rEString61, (int) '4', 10);
        st1920.automaton.REString rEString65 = rEString10.makeGroup(rEString14);
        st1920.automaton.REString rEString66 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString67 = rEString10.makeNothing(rEString66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        java.lang.String str6 = rEString4.string;
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString13 = rEString10.makeExclude(rEString12);
        st1920.automaton.REString rEString14 = rEString8.makeAnyChar(rEString13);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString21 = rEString18.makeExclude(rEString20);
        st1920.automaton.REString rEString22 = rEString16.makeAnyChar(rEString21);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString21.makeAnyChar(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString35.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString28.makeAny(rEString41);
        st1920.automaton.REString rEString46 = rEString14.makeRep(rEString28, 0, (-1));
        st1920.automaton.REString rEString47 = rEString4.makeAny(rEString14);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString63 = rEString49.makeRange(rEString59, 10, 0);
        rEString59.string = "~.";
        st1920.automaton.REString rEString66 = rEString14.makeAnyChar(rEString59);
        boolean boolean67 = st1920.automaton.REGEXWrapper.matches("~..@", rEString14);
        java.lang.Class<?> wildcardClass68 = rEString14.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = rEString3.makeAlpha(rEString15);
        rEString16.string = "";
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = rEString22.makeExclude(rEString24);
        st1920.automaton.REString rEString26 = rEString20.makeAnyChar(rEString25);
        st1920.automaton.REString rEString27 = rEString16.makeZeroOrMore(rEString26);
        java.lang.String str28 = rEString26.string;
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString45 = rEString31.makeRange(rEString41, 10, 0);
        boolean boolean46 = st1920.automaton.REGEXWrapper.matches("~.", rEString41);
        st1920.automaton.REString rEString47 = rEString26.makeZeroOrMore(rEString41);
        st1920.automaton.REString rEString48 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString49 = rEString26.makeGroup(rEString48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "~." + "'", str28.equals("~."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString20.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString13.makeZeroOrOne(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString32.makeExclude(rEString34);
        st1920.automaton.REString rEString36 = rEString30.makeAnyChar(rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = rEString38.makeExclude(rEString40);
        st1920.automaton.REString rEString42 = rEString35.makeAnyChar(rEString41);
        st1920.automaton.REString rEString43 = rEString13.makeOneOrMore(rEString42);
        java.lang.String str44 = rEString43.string;
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = rEString50.makeExclude(rEString52);
        st1920.automaton.REString rEString54 = rEString48.makeAnyChar(rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = rEString56.makeExclude(rEString58);
        st1920.automaton.REString rEString62 = rEString48.makeRange(rEString58, 10, 0);
        st1920.automaton.REString rEString65 = rEString46.makeRep(rEString48, (int) 'a', (int) '4');
        st1920.automaton.REString rEString66 = rEString43.makeAnyChar(rEString48);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("[~..]<0-1>");
        boolean boolean70 = st1920.automaton.REGEXWrapper.matches("()", rEString69);
        st1920.automaton.REString rEString71 = rEString66.makeAny(rEString69);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("[~..]<0-1>");
        boolean boolean75 = st1920.automaton.REGEXWrapper.matches("()", rEString74);
        st1920.automaton.REString rEString76 = rEString66.makeGroup(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "~.+" + "'", str44.equals("~.+"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("a");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = rEString6.makeExclude(rEString8);
        st1920.automaton.REString rEString10 = rEString4.makeAnyChar(rEString9);
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = rEString12.makeExclude(rEString14);
        st1920.automaton.REString rEString18 = rEString4.makeRange(rEString14, 10, 0);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString23 = rEString20.makeExclude(rEString22);
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString31 = rEString25.makeAnyChar(rEString30);
        st1920.automaton.REString rEString32 = rEString22.makeExclude(rEString25);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString39 = rEString36.makeExclude(rEString38);
        st1920.automaton.REString rEString40 = rEString34.makeAnyChar(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString45 = rEString42.makeExclude(rEString44);
        st1920.automaton.REString rEString46 = rEString39.makeAnyChar(rEString45);
        st1920.automaton.REString rEString47 = rEString32.makeZeroOrOne(rEString45);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString51.makeExclude(rEString53);
        st1920.automaton.REString rEString55 = rEString49.makeAnyChar(rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString61 = rEString54.makeAnyChar(rEString60);
        st1920.automaton.REString rEString62 = rEString32.makeOneOrMore(rEString61);
        st1920.automaton.REString rEString63 = rEString14.makeNothing(rEString32);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = rEString70.makeExclude(rEString72);
        st1920.automaton.REString rEString74 = rEString68.makeAnyChar(rEString73);
        st1920.automaton.REString rEString75 = rEString66.makeAnyChar(rEString74);
        boolean boolean76 = st1920.automaton.REGEXWrapper.matches("~.+", rEString66);
        java.lang.String str77 = rEString66.string;
        st1920.automaton.REString rEString78 = rEString63.makeZeroOrMore(rEString66);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString82.makeExclude(rEString84);
        st1920.automaton.REString rEString86 = rEString80.makeAnyChar(rEString85);
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("*");
        st1920.automaton.REString rEString89 = rEString85.makeAnyChar(rEString88);
        st1920.automaton.REString rEString90 = rEString66.makeAlpha(rEString88);
        boolean boolean91 = st1920.automaton.REGEXWrapper.matches("~.1", rEString66);
        st1920.automaton.REString rEString94 = rEString1.makeRange(rEString66, 10, 10);
        java.lang.String str95 = rEString1.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "a" + "'", str95.equals("a"));
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = rEString2.makeExclude(rEString4);
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString13 = rEString7.makeAnyChar(rEString12);
        st1920.automaton.REString rEString14 = rEString4.makeExclude(rEString7);
        java.lang.String str15 = rEString4.string;
        rEString4.string = "~&#";
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString27 = rEString24.makeExclude(rEString26);
        st1920.automaton.REString rEString28 = rEString22.makeAnyChar(rEString27);
        st1920.automaton.REString rEString29 = rEString20.makeAnyChar(rEString28);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = rEString46.makeExclude(rEString48);
        st1920.automaton.REString rEString50 = rEString44.makeAnyChar(rEString49);
        st1920.automaton.REString rEString51 = rEString41.makeExclude(rEString44);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = rEString41.makeAlpha(rEString53);
        st1920.automaton.REString rEString55 = rEString36.makeAny(rEString54);
        st1920.automaton.REString rEString56 = rEString20.makeClass(rEString54);
        boolean boolean57 = st1920.automaton.REGEXWrapper.matches("[~.+]", rEString54);
        st1920.automaton.REString rEString58 = rEString4.makeGroup(rEString54);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString65 = rEString62.makeExclude(rEString64);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString72 = rEString69.makeExclude(rEString71);
        st1920.automaton.REString rEString73 = rEString67.makeAnyChar(rEString72);
        st1920.automaton.REString rEString74 = rEString64.makeExclude(rEString67);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString76.makeAnyChar(rEString81);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString87 = rEString84.makeExclude(rEString86);
        st1920.automaton.REString rEString88 = rEString81.makeAnyChar(rEString87);
        st1920.automaton.REString rEString89 = rEString64.makeOneOrMore(rEString87);
        st1920.automaton.REString rEString90 = rEString60.makeOneOrMore(rEString64);
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("a");
        st1920.automaton.REString rEString93 = rEString64.makeGroup(rEString92);
        st1920.automaton.REString rEString94 = rEString54.makeAny(rEString93);
        boolean boolean95 = st1920.automaton.REGEXWrapper.matches("~|", rEString54);
        java.lang.String str96 = rEString54.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str96 + "' != '" + "a" + "'", str96.equals("a"));
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString6 = rEString3.makeExclude(rEString5);
        st1920.automaton.REString rEString7 = rEString1.makeAnyChar(rEString6);
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString12 = rEString9.makeExclude(rEString11);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = rEString16.makeExclude(rEString18);
        st1920.automaton.REString rEString20 = rEString14.makeAnyChar(rEString19);
        st1920.automaton.REString rEString21 = rEString11.makeExclude(rEString14);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString24 = rEString11.makeAlpha(rEString23);
        st1920.automaton.REString rEString25 = rEString6.makeAny(rEString24);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString30 = rEString27.makeExclude(rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString34.makeExclude(rEString36);
        st1920.automaton.REString rEString38 = rEString32.makeAnyChar(rEString37);
        st1920.automaton.REString rEString39 = rEString29.makeExclude(rEString32);
        st1920.automaton.REString rEString40 = rEString25.makeNum(rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString43 = rEString39.makeClass(rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString48 = rEString45.makeExclude(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString52.makeExclude(rEString54);
        st1920.automaton.REString rEString56 = rEString50.makeAnyChar(rEString55);
        st1920.automaton.REString rEString57 = rEString47.makeExclude(rEString50);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString47.makeAlpha(rEString59);
        rEString60.string = "";
        st1920.automaton.REString rEString63 = rEString42.makeNothing(rEString60);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString71 = rEString68.makeExclude(rEString70);
        st1920.automaton.REString rEString72 = rEString66.makeAnyChar(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString74.makeExclude(rEString76);
        st1920.automaton.REString rEString80 = rEString66.makeRange(rEString76, 10, 0);
        boolean boolean81 = st1920.automaton.REGEXWrapper.matches("", rEString66);
        st1920.automaton.REString rEString82 = rEString60.makeZeroOrOne(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString4 = rEString1.makeExclude(rEString3);
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString11 = rEString8.makeExclude(rEString10);
        st1920.automaton.REString rEString12 = rEString6.makeAnyChar(rEString11);
        st1920.automaton.REString rEString13 = rEString3.makeExclude(rEString6);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString20 = rEString17.makeExclude(rEString19);
        st1920.automaton.REString rEString21 = rEString15.makeAnyChar(rEString20);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString26 = rEString23.makeExclude(rEString25);
        st1920.automaton.REString rEString27 = rEString20.makeAnyChar(rEString26);
        st1920.automaton.REString rEString28 = rEString13.makeZeroOrOne(rEString26);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString33.makeExclude(rEString35);
        st1920.automaton.REString rEString37 = rEString31.makeAnyChar(rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString42 = rEString39.makeExclude(rEString41);
        st1920.automaton.REString rEString43 = rEString36.makeAnyChar(rEString42);
        boolean boolean44 = st1920.automaton.REGEXWrapper.matches("a@", rEString43);
        st1920.automaton.REString rEString45 = rEString13.makeAlpha(rEString43);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString52 = rEString49.makeExclude(rEString51);
        st1920.automaton.REString rEString53 = rEString47.makeAnyChar(rEString52);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString60 = rEString57.makeExclude(rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString64.makeExclude(rEString66);
        st1920.automaton.REString rEString68 = rEString62.makeAnyChar(rEString67);
        st1920.automaton.REString rEString69 = rEString59.makeExclude(rEString62);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString74 = rEString71.makeExclude(rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString81 = rEString78.makeExclude(rEString80);
        st1920.automaton.REString rEString82 = rEString76.makeAnyChar(rEString81);
        st1920.automaton.REString rEString83 = rEString73.makeExclude(rEString76);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = rEString73.makeAlpha(rEString85);
        st1920.automaton.REString rEString87 = rEString69.makeAlpha(rEString85);
        boolean boolean88 = st1920.automaton.REGEXWrapper.matches("~.+", rEString85);
        boolean boolean89 = st1920.automaton.REGEXWrapper.matches("hi!", rEString85);
        st1920.automaton.REString rEString90 = rEString47.makeOneOrMore(rEString85);
        st1920.automaton.REString rEString91 = rEString45.makeGroup(rEString47);
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("(~)");
        st1920.automaton.REString rEString94 = rEString45.makeGroup(rEString93);
        rEString93.string = "+";
        st1920.automaton.REString rEString97 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString98 = rEString93.makeClass(rEString97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }
}

